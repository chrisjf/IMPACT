var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7428 = x == null ? null : x;
  if(p[goog.typeOf(x__7428)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7429__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7429 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7429__delegate.call(this, array, i, idxs)
    };
    G__7429.cljs$lang$maxFixedArity = 2;
    G__7429.cljs$lang$applyTo = function(arglist__7430) {
      var array = cljs.core.first(arglist__7430);
      var i = cljs.core.first(cljs.core.next(arglist__7430));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7430));
      return G__7429__delegate(array, i, idxs)
    };
    G__7429.cljs$lang$arity$variadic = G__7429__delegate;
    return G__7429
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____7515 = this$;
      if(and__3822__auto____7515) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____7515
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2431__auto____7516 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7517 = cljs.core._invoke[goog.typeOf(x__2431__auto____7516)];
        if(or__3824__auto____7517) {
          return or__3824__auto____7517
        }else {
          var or__3824__auto____7518 = cljs.core._invoke["_"];
          if(or__3824__auto____7518) {
            return or__3824__auto____7518
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____7519 = this$;
      if(and__3822__auto____7519) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____7519
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2431__auto____7520 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7521 = cljs.core._invoke[goog.typeOf(x__2431__auto____7520)];
        if(or__3824__auto____7521) {
          return or__3824__auto____7521
        }else {
          var or__3824__auto____7522 = cljs.core._invoke["_"];
          if(or__3824__auto____7522) {
            return or__3824__auto____7522
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____7523 = this$;
      if(and__3822__auto____7523) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____7523
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2431__auto____7524 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7525 = cljs.core._invoke[goog.typeOf(x__2431__auto____7524)];
        if(or__3824__auto____7525) {
          return or__3824__auto____7525
        }else {
          var or__3824__auto____7526 = cljs.core._invoke["_"];
          if(or__3824__auto____7526) {
            return or__3824__auto____7526
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____7527 = this$;
      if(and__3822__auto____7527) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____7527
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2431__auto____7528 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7529 = cljs.core._invoke[goog.typeOf(x__2431__auto____7528)];
        if(or__3824__auto____7529) {
          return or__3824__auto____7529
        }else {
          var or__3824__auto____7530 = cljs.core._invoke["_"];
          if(or__3824__auto____7530) {
            return or__3824__auto____7530
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____7531 = this$;
      if(and__3822__auto____7531) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____7531
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2431__auto____7532 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7533 = cljs.core._invoke[goog.typeOf(x__2431__auto____7532)];
        if(or__3824__auto____7533) {
          return or__3824__auto____7533
        }else {
          var or__3824__auto____7534 = cljs.core._invoke["_"];
          if(or__3824__auto____7534) {
            return or__3824__auto____7534
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7535 = this$;
      if(and__3822__auto____7535) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7535
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2431__auto____7536 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7537 = cljs.core._invoke[goog.typeOf(x__2431__auto____7536)];
        if(or__3824__auto____7537) {
          return or__3824__auto____7537
        }else {
          var or__3824__auto____7538 = cljs.core._invoke["_"];
          if(or__3824__auto____7538) {
            return or__3824__auto____7538
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7539 = this$;
      if(and__3822__auto____7539) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7539
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2431__auto____7540 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7541 = cljs.core._invoke[goog.typeOf(x__2431__auto____7540)];
        if(or__3824__auto____7541) {
          return or__3824__auto____7541
        }else {
          var or__3824__auto____7542 = cljs.core._invoke["_"];
          if(or__3824__auto____7542) {
            return or__3824__auto____7542
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7543 = this$;
      if(and__3822__auto____7543) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7543
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2431__auto____7544 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7545 = cljs.core._invoke[goog.typeOf(x__2431__auto____7544)];
        if(or__3824__auto____7545) {
          return or__3824__auto____7545
        }else {
          var or__3824__auto____7546 = cljs.core._invoke["_"];
          if(or__3824__auto____7546) {
            return or__3824__auto____7546
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7547 = this$;
      if(and__3822__auto____7547) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7547
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2431__auto____7548 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7549 = cljs.core._invoke[goog.typeOf(x__2431__auto____7548)];
        if(or__3824__auto____7549) {
          return or__3824__auto____7549
        }else {
          var or__3824__auto____7550 = cljs.core._invoke["_"];
          if(or__3824__auto____7550) {
            return or__3824__auto____7550
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7551 = this$;
      if(and__3822__auto____7551) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7551
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2431__auto____7552 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7553 = cljs.core._invoke[goog.typeOf(x__2431__auto____7552)];
        if(or__3824__auto____7553) {
          return or__3824__auto____7553
        }else {
          var or__3824__auto____7554 = cljs.core._invoke["_"];
          if(or__3824__auto____7554) {
            return or__3824__auto____7554
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7555 = this$;
      if(and__3822__auto____7555) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7555
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2431__auto____7556 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7557 = cljs.core._invoke[goog.typeOf(x__2431__auto____7556)];
        if(or__3824__auto____7557) {
          return or__3824__auto____7557
        }else {
          var or__3824__auto____7558 = cljs.core._invoke["_"];
          if(or__3824__auto____7558) {
            return or__3824__auto____7558
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7559 = this$;
      if(and__3822__auto____7559) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7559
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2431__auto____7560 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7561 = cljs.core._invoke[goog.typeOf(x__2431__auto____7560)];
        if(or__3824__auto____7561) {
          return or__3824__auto____7561
        }else {
          var or__3824__auto____7562 = cljs.core._invoke["_"];
          if(or__3824__auto____7562) {
            return or__3824__auto____7562
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7563 = this$;
      if(and__3822__auto____7563) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7563
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2431__auto____7564 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7565 = cljs.core._invoke[goog.typeOf(x__2431__auto____7564)];
        if(or__3824__auto____7565) {
          return or__3824__auto____7565
        }else {
          var or__3824__auto____7566 = cljs.core._invoke["_"];
          if(or__3824__auto____7566) {
            return or__3824__auto____7566
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7567 = this$;
      if(and__3822__auto____7567) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7567
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2431__auto____7568 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7569 = cljs.core._invoke[goog.typeOf(x__2431__auto____7568)];
        if(or__3824__auto____7569) {
          return or__3824__auto____7569
        }else {
          var or__3824__auto____7570 = cljs.core._invoke["_"];
          if(or__3824__auto____7570) {
            return or__3824__auto____7570
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7571 = this$;
      if(and__3822__auto____7571) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7571
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2431__auto____7572 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7573 = cljs.core._invoke[goog.typeOf(x__2431__auto____7572)];
        if(or__3824__auto____7573) {
          return or__3824__auto____7573
        }else {
          var or__3824__auto____7574 = cljs.core._invoke["_"];
          if(or__3824__auto____7574) {
            return or__3824__auto____7574
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7575 = this$;
      if(and__3822__auto____7575) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7575
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2431__auto____7576 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7577 = cljs.core._invoke[goog.typeOf(x__2431__auto____7576)];
        if(or__3824__auto____7577) {
          return or__3824__auto____7577
        }else {
          var or__3824__auto____7578 = cljs.core._invoke["_"];
          if(or__3824__auto____7578) {
            return or__3824__auto____7578
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7579 = this$;
      if(and__3822__auto____7579) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7579
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2431__auto____7580 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7581 = cljs.core._invoke[goog.typeOf(x__2431__auto____7580)];
        if(or__3824__auto____7581) {
          return or__3824__auto____7581
        }else {
          var or__3824__auto____7582 = cljs.core._invoke["_"];
          if(or__3824__auto____7582) {
            return or__3824__auto____7582
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7583 = this$;
      if(and__3822__auto____7583) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7583
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2431__auto____7584 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7585 = cljs.core._invoke[goog.typeOf(x__2431__auto____7584)];
        if(or__3824__auto____7585) {
          return or__3824__auto____7585
        }else {
          var or__3824__auto____7586 = cljs.core._invoke["_"];
          if(or__3824__auto____7586) {
            return or__3824__auto____7586
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7587 = this$;
      if(and__3822__auto____7587) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7587
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2431__auto____7588 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7589 = cljs.core._invoke[goog.typeOf(x__2431__auto____7588)];
        if(or__3824__auto____7589) {
          return or__3824__auto____7589
        }else {
          var or__3824__auto____7590 = cljs.core._invoke["_"];
          if(or__3824__auto____7590) {
            return or__3824__auto____7590
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7591 = this$;
      if(and__3822__auto____7591) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7591
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2431__auto____7592 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7593 = cljs.core._invoke[goog.typeOf(x__2431__auto____7592)];
        if(or__3824__auto____7593) {
          return or__3824__auto____7593
        }else {
          var or__3824__auto____7594 = cljs.core._invoke["_"];
          if(or__3824__auto____7594) {
            return or__3824__auto____7594
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7595 = this$;
      if(and__3822__auto____7595) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7595
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2431__auto____7596 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7597 = cljs.core._invoke[goog.typeOf(x__2431__auto____7596)];
        if(or__3824__auto____7597) {
          return or__3824__auto____7597
        }else {
          var or__3824__auto____7598 = cljs.core._invoke["_"];
          if(or__3824__auto____7598) {
            return or__3824__auto____7598
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7603 = coll;
    if(and__3822__auto____7603) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7603
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2431__auto____7604 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7605 = cljs.core._count[goog.typeOf(x__2431__auto____7604)];
      if(or__3824__auto____7605) {
        return or__3824__auto____7605
      }else {
        var or__3824__auto____7606 = cljs.core._count["_"];
        if(or__3824__auto____7606) {
          return or__3824__auto____7606
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7611 = coll;
    if(and__3822__auto____7611) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7611
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2431__auto____7612 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7613 = cljs.core._empty[goog.typeOf(x__2431__auto____7612)];
      if(or__3824__auto____7613) {
        return or__3824__auto____7613
      }else {
        var or__3824__auto____7614 = cljs.core._empty["_"];
        if(or__3824__auto____7614) {
          return or__3824__auto____7614
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7619 = coll;
    if(and__3822__auto____7619) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7619
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2431__auto____7620 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7621 = cljs.core._conj[goog.typeOf(x__2431__auto____7620)];
      if(or__3824__auto____7621) {
        return or__3824__auto____7621
      }else {
        var or__3824__auto____7622 = cljs.core._conj["_"];
        if(or__3824__auto____7622) {
          return or__3824__auto____7622
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7631 = coll;
      if(and__3822__auto____7631) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7631
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2431__auto____7632 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7633 = cljs.core._nth[goog.typeOf(x__2431__auto____7632)];
        if(or__3824__auto____7633) {
          return or__3824__auto____7633
        }else {
          var or__3824__auto____7634 = cljs.core._nth["_"];
          if(or__3824__auto____7634) {
            return or__3824__auto____7634
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7635 = coll;
      if(and__3822__auto____7635) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7635
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2431__auto____7636 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7637 = cljs.core._nth[goog.typeOf(x__2431__auto____7636)];
        if(or__3824__auto____7637) {
          return or__3824__auto____7637
        }else {
          var or__3824__auto____7638 = cljs.core._nth["_"];
          if(or__3824__auto____7638) {
            return or__3824__auto____7638
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7643 = coll;
    if(and__3822__auto____7643) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7643
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2431__auto____7644 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7645 = cljs.core._first[goog.typeOf(x__2431__auto____7644)];
      if(or__3824__auto____7645) {
        return or__3824__auto____7645
      }else {
        var or__3824__auto____7646 = cljs.core._first["_"];
        if(or__3824__auto____7646) {
          return or__3824__auto____7646
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7651 = coll;
    if(and__3822__auto____7651) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7651
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2431__auto____7652 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7653 = cljs.core._rest[goog.typeOf(x__2431__auto____7652)];
      if(or__3824__auto____7653) {
        return or__3824__auto____7653
      }else {
        var or__3824__auto____7654 = cljs.core._rest["_"];
        if(or__3824__auto____7654) {
          return or__3824__auto____7654
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7659 = coll;
    if(and__3822__auto____7659) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7659
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2431__auto____7660 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7661 = cljs.core._next[goog.typeOf(x__2431__auto____7660)];
      if(or__3824__auto____7661) {
        return or__3824__auto____7661
      }else {
        var or__3824__auto____7662 = cljs.core._next["_"];
        if(or__3824__auto____7662) {
          return or__3824__auto____7662
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7671 = o;
      if(and__3822__auto____7671) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7671
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2431__auto____7672 = o == null ? null : o;
      return function() {
        var or__3824__auto____7673 = cljs.core._lookup[goog.typeOf(x__2431__auto____7672)];
        if(or__3824__auto____7673) {
          return or__3824__auto____7673
        }else {
          var or__3824__auto____7674 = cljs.core._lookup["_"];
          if(or__3824__auto____7674) {
            return or__3824__auto____7674
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7675 = o;
      if(and__3822__auto____7675) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7675
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2431__auto____7676 = o == null ? null : o;
      return function() {
        var or__3824__auto____7677 = cljs.core._lookup[goog.typeOf(x__2431__auto____7676)];
        if(or__3824__auto____7677) {
          return or__3824__auto____7677
        }else {
          var or__3824__auto____7678 = cljs.core._lookup["_"];
          if(or__3824__auto____7678) {
            return or__3824__auto____7678
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7683 = coll;
    if(and__3822__auto____7683) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7683
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2431__auto____7684 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7685 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2431__auto____7684)];
      if(or__3824__auto____7685) {
        return or__3824__auto____7685
      }else {
        var or__3824__auto____7686 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7686) {
          return or__3824__auto____7686
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7691 = coll;
    if(and__3822__auto____7691) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7691
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2431__auto____7692 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7693 = cljs.core._assoc[goog.typeOf(x__2431__auto____7692)];
      if(or__3824__auto____7693) {
        return or__3824__auto____7693
      }else {
        var or__3824__auto____7694 = cljs.core._assoc["_"];
        if(or__3824__auto____7694) {
          return or__3824__auto____7694
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7699 = coll;
    if(and__3822__auto____7699) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7699
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2431__auto____7700 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7701 = cljs.core._dissoc[goog.typeOf(x__2431__auto____7700)];
      if(or__3824__auto____7701) {
        return or__3824__auto____7701
      }else {
        var or__3824__auto____7702 = cljs.core._dissoc["_"];
        if(or__3824__auto____7702) {
          return or__3824__auto____7702
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7707 = coll;
    if(and__3822__auto____7707) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7707
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2431__auto____7708 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7709 = cljs.core._key[goog.typeOf(x__2431__auto____7708)];
      if(or__3824__auto____7709) {
        return or__3824__auto____7709
      }else {
        var or__3824__auto____7710 = cljs.core._key["_"];
        if(or__3824__auto____7710) {
          return or__3824__auto____7710
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7715 = coll;
    if(and__3822__auto____7715) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7715
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2431__auto____7716 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7717 = cljs.core._val[goog.typeOf(x__2431__auto____7716)];
      if(or__3824__auto____7717) {
        return or__3824__auto____7717
      }else {
        var or__3824__auto____7718 = cljs.core._val["_"];
        if(or__3824__auto____7718) {
          return or__3824__auto____7718
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7723 = coll;
    if(and__3822__auto____7723) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7723
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2431__auto____7724 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7725 = cljs.core._disjoin[goog.typeOf(x__2431__auto____7724)];
      if(or__3824__auto____7725) {
        return or__3824__auto____7725
      }else {
        var or__3824__auto____7726 = cljs.core._disjoin["_"];
        if(or__3824__auto____7726) {
          return or__3824__auto____7726
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7731 = coll;
    if(and__3822__auto____7731) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7731
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2431__auto____7732 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7733 = cljs.core._peek[goog.typeOf(x__2431__auto____7732)];
      if(or__3824__auto____7733) {
        return or__3824__auto____7733
      }else {
        var or__3824__auto____7734 = cljs.core._peek["_"];
        if(or__3824__auto____7734) {
          return or__3824__auto____7734
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7739 = coll;
    if(and__3822__auto____7739) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7739
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2431__auto____7740 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7741 = cljs.core._pop[goog.typeOf(x__2431__auto____7740)];
      if(or__3824__auto____7741) {
        return or__3824__auto____7741
      }else {
        var or__3824__auto____7742 = cljs.core._pop["_"];
        if(or__3824__auto____7742) {
          return or__3824__auto____7742
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7747 = coll;
    if(and__3822__auto____7747) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7747
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2431__auto____7748 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7749 = cljs.core._assoc_n[goog.typeOf(x__2431__auto____7748)];
      if(or__3824__auto____7749) {
        return or__3824__auto____7749
      }else {
        var or__3824__auto____7750 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7750) {
          return or__3824__auto____7750
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7755 = o;
    if(and__3822__auto____7755) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7755
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2431__auto____7756 = o == null ? null : o;
    return function() {
      var or__3824__auto____7757 = cljs.core._deref[goog.typeOf(x__2431__auto____7756)];
      if(or__3824__auto____7757) {
        return or__3824__auto____7757
      }else {
        var or__3824__auto____7758 = cljs.core._deref["_"];
        if(or__3824__auto____7758) {
          return or__3824__auto____7758
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7763 = o;
    if(and__3822__auto____7763) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7763
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2431__auto____7764 = o == null ? null : o;
    return function() {
      var or__3824__auto____7765 = cljs.core._deref_with_timeout[goog.typeOf(x__2431__auto____7764)];
      if(or__3824__auto____7765) {
        return or__3824__auto____7765
      }else {
        var or__3824__auto____7766 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7766) {
          return or__3824__auto____7766
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7771 = o;
    if(and__3822__auto____7771) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7771
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2431__auto____7772 = o == null ? null : o;
    return function() {
      var or__3824__auto____7773 = cljs.core._meta[goog.typeOf(x__2431__auto____7772)];
      if(or__3824__auto____7773) {
        return or__3824__auto____7773
      }else {
        var or__3824__auto____7774 = cljs.core._meta["_"];
        if(or__3824__auto____7774) {
          return or__3824__auto____7774
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7779 = o;
    if(and__3822__auto____7779) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7779
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2431__auto____7780 = o == null ? null : o;
    return function() {
      var or__3824__auto____7781 = cljs.core._with_meta[goog.typeOf(x__2431__auto____7780)];
      if(or__3824__auto____7781) {
        return or__3824__auto____7781
      }else {
        var or__3824__auto____7782 = cljs.core._with_meta["_"];
        if(or__3824__auto____7782) {
          return or__3824__auto____7782
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7791 = coll;
      if(and__3822__auto____7791) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7791
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2431__auto____7792 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7793 = cljs.core._reduce[goog.typeOf(x__2431__auto____7792)];
        if(or__3824__auto____7793) {
          return or__3824__auto____7793
        }else {
          var or__3824__auto____7794 = cljs.core._reduce["_"];
          if(or__3824__auto____7794) {
            return or__3824__auto____7794
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7795 = coll;
      if(and__3822__auto____7795) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7795
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2431__auto____7796 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7797 = cljs.core._reduce[goog.typeOf(x__2431__auto____7796)];
        if(or__3824__auto____7797) {
          return or__3824__auto____7797
        }else {
          var or__3824__auto____7798 = cljs.core._reduce["_"];
          if(or__3824__auto____7798) {
            return or__3824__auto____7798
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7803 = coll;
    if(and__3822__auto____7803) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7803
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2431__auto____7804 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7805 = cljs.core._kv_reduce[goog.typeOf(x__2431__auto____7804)];
      if(or__3824__auto____7805) {
        return or__3824__auto____7805
      }else {
        var or__3824__auto____7806 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7806) {
          return or__3824__auto____7806
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7811 = o;
    if(and__3822__auto____7811) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7811
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2431__auto____7812 = o == null ? null : o;
    return function() {
      var or__3824__auto____7813 = cljs.core._equiv[goog.typeOf(x__2431__auto____7812)];
      if(or__3824__auto____7813) {
        return or__3824__auto____7813
      }else {
        var or__3824__auto____7814 = cljs.core._equiv["_"];
        if(or__3824__auto____7814) {
          return or__3824__auto____7814
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7819 = o;
    if(and__3822__auto____7819) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7819
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2431__auto____7820 = o == null ? null : o;
    return function() {
      var or__3824__auto____7821 = cljs.core._hash[goog.typeOf(x__2431__auto____7820)];
      if(or__3824__auto____7821) {
        return or__3824__auto____7821
      }else {
        var or__3824__auto____7822 = cljs.core._hash["_"];
        if(or__3824__auto____7822) {
          return or__3824__auto____7822
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7827 = o;
    if(and__3822__auto____7827) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7827
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2431__auto____7828 = o == null ? null : o;
    return function() {
      var or__3824__auto____7829 = cljs.core._seq[goog.typeOf(x__2431__auto____7828)];
      if(or__3824__auto____7829) {
        return or__3824__auto____7829
      }else {
        var or__3824__auto____7830 = cljs.core._seq["_"];
        if(or__3824__auto____7830) {
          return or__3824__auto____7830
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7835 = coll;
    if(and__3822__auto____7835) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7835
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2431__auto____7836 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7837 = cljs.core._rseq[goog.typeOf(x__2431__auto____7836)];
      if(or__3824__auto____7837) {
        return or__3824__auto____7837
      }else {
        var or__3824__auto____7838 = cljs.core._rseq["_"];
        if(or__3824__auto____7838) {
          return or__3824__auto____7838
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7843 = coll;
    if(and__3822__auto____7843) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7843
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2431__auto____7844 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7845 = cljs.core._sorted_seq[goog.typeOf(x__2431__auto____7844)];
      if(or__3824__auto____7845) {
        return or__3824__auto____7845
      }else {
        var or__3824__auto____7846 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7846) {
          return or__3824__auto____7846
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7851 = coll;
    if(and__3822__auto____7851) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7851
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2431__auto____7852 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7853 = cljs.core._sorted_seq_from[goog.typeOf(x__2431__auto____7852)];
      if(or__3824__auto____7853) {
        return or__3824__auto____7853
      }else {
        var or__3824__auto____7854 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7854) {
          return or__3824__auto____7854
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7859 = coll;
    if(and__3822__auto____7859) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7859
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2431__auto____7860 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7861 = cljs.core._entry_key[goog.typeOf(x__2431__auto____7860)];
      if(or__3824__auto____7861) {
        return or__3824__auto____7861
      }else {
        var or__3824__auto____7862 = cljs.core._entry_key["_"];
        if(or__3824__auto____7862) {
          return or__3824__auto____7862
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7867 = coll;
    if(and__3822__auto____7867) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7867
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2431__auto____7868 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7869 = cljs.core._comparator[goog.typeOf(x__2431__auto____7868)];
      if(or__3824__auto____7869) {
        return or__3824__auto____7869
      }else {
        var or__3824__auto____7870 = cljs.core._comparator["_"];
        if(or__3824__auto____7870) {
          return or__3824__auto____7870
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7875 = o;
    if(and__3822__auto____7875) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7875
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2431__auto____7876 = o == null ? null : o;
    return function() {
      var or__3824__auto____7877 = cljs.core._pr_seq[goog.typeOf(x__2431__auto____7876)];
      if(or__3824__auto____7877) {
        return or__3824__auto____7877
      }else {
        var or__3824__auto____7878 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7878) {
          return or__3824__auto____7878
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3822__auto____7883 = writer;
    if(and__3822__auto____7883) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3822__auto____7883
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__2431__auto____7884 = writer == null ? null : writer;
    return function() {
      var or__3824__auto____7885 = cljs.core._write[goog.typeOf(x__2431__auto____7884)];
      if(or__3824__auto____7885) {
        return or__3824__auto____7885
      }else {
        var or__3824__auto____7886 = cljs.core._write["_"];
        if(or__3824__auto____7886) {
          return or__3824__auto____7886
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3822__auto____7891 = writer;
    if(and__3822__auto____7891) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3822__auto____7891
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__2431__auto____7892 = writer == null ? null : writer;
    return function() {
      var or__3824__auto____7893 = cljs.core._flush[goog.typeOf(x__2431__auto____7892)];
      if(or__3824__auto____7893) {
        return or__3824__auto____7893
      }else {
        var or__3824__auto____7894 = cljs.core._flush["_"];
        if(or__3824__auto____7894) {
          return or__3824__auto____7894
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3822__auto____7899 = o;
    if(and__3822__auto____7899) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3822__auto____7899
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__2431__auto____7900 = o == null ? null : o;
    return function() {
      var or__3824__auto____7901 = cljs.core._pr_writer[goog.typeOf(x__2431__auto____7900)];
      if(or__3824__auto____7901) {
        return or__3824__auto____7901
      }else {
        var or__3824__auto____7902 = cljs.core._pr_writer["_"];
        if(or__3824__auto____7902) {
          return or__3824__auto____7902
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____7907 = d;
    if(and__3822__auto____7907) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____7907
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2431__auto____7908 = d == null ? null : d;
    return function() {
      var or__3824__auto____7909 = cljs.core._realized_QMARK_[goog.typeOf(x__2431__auto____7908)];
      if(or__3824__auto____7909) {
        return or__3824__auto____7909
      }else {
        var or__3824__auto____7910 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____7910) {
          return or__3824__auto____7910
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____7915 = this$;
    if(and__3822__auto____7915) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____7915
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2431__auto____7916 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7917 = cljs.core._notify_watches[goog.typeOf(x__2431__auto____7916)];
      if(or__3824__auto____7917) {
        return or__3824__auto____7917
      }else {
        var or__3824__auto____7918 = cljs.core._notify_watches["_"];
        if(or__3824__auto____7918) {
          return or__3824__auto____7918
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____7923 = this$;
    if(and__3822__auto____7923) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____7923
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2431__auto____7924 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7925 = cljs.core._add_watch[goog.typeOf(x__2431__auto____7924)];
      if(or__3824__auto____7925) {
        return or__3824__auto____7925
      }else {
        var or__3824__auto____7926 = cljs.core._add_watch["_"];
        if(or__3824__auto____7926) {
          return or__3824__auto____7926
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____7931 = this$;
    if(and__3822__auto____7931) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____7931
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2431__auto____7932 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7933 = cljs.core._remove_watch[goog.typeOf(x__2431__auto____7932)];
      if(or__3824__auto____7933) {
        return or__3824__auto____7933
      }else {
        var or__3824__auto____7934 = cljs.core._remove_watch["_"];
        if(or__3824__auto____7934) {
          return or__3824__auto____7934
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____7939 = coll;
    if(and__3822__auto____7939) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____7939
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2431__auto____7940 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7941 = cljs.core._as_transient[goog.typeOf(x__2431__auto____7940)];
      if(or__3824__auto____7941) {
        return or__3824__auto____7941
      }else {
        var or__3824__auto____7942 = cljs.core._as_transient["_"];
        if(or__3824__auto____7942) {
          return or__3824__auto____7942
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____7947 = tcoll;
    if(and__3822__auto____7947) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____7947
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2431__auto____7948 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7949 = cljs.core._conj_BANG_[goog.typeOf(x__2431__auto____7948)];
      if(or__3824__auto____7949) {
        return or__3824__auto____7949
      }else {
        var or__3824__auto____7950 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____7950) {
          return or__3824__auto____7950
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7955 = tcoll;
    if(and__3822__auto____7955) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____7955
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2431__auto____7956 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7957 = cljs.core._persistent_BANG_[goog.typeOf(x__2431__auto____7956)];
      if(or__3824__auto____7957) {
        return or__3824__auto____7957
      }else {
        var or__3824__auto____7958 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____7958) {
          return or__3824__auto____7958
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____7963 = tcoll;
    if(and__3822__auto____7963) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____7963
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2431__auto____7964 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7965 = cljs.core._assoc_BANG_[goog.typeOf(x__2431__auto____7964)];
      if(or__3824__auto____7965) {
        return or__3824__auto____7965
      }else {
        var or__3824__auto____7966 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____7966) {
          return or__3824__auto____7966
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____7971 = tcoll;
    if(and__3822__auto____7971) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____7971
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2431__auto____7972 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7973 = cljs.core._dissoc_BANG_[goog.typeOf(x__2431__auto____7972)];
      if(or__3824__auto____7973) {
        return or__3824__auto____7973
      }else {
        var or__3824__auto____7974 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____7974) {
          return or__3824__auto____7974
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____7979 = tcoll;
    if(and__3822__auto____7979) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____7979
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2431__auto____7980 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7981 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2431__auto____7980)];
      if(or__3824__auto____7981) {
        return or__3824__auto____7981
      }else {
        var or__3824__auto____7982 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____7982) {
          return or__3824__auto____7982
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7987 = tcoll;
    if(and__3822__auto____7987) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____7987
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2431__auto____7988 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7989 = cljs.core._pop_BANG_[goog.typeOf(x__2431__auto____7988)];
      if(or__3824__auto____7989) {
        return or__3824__auto____7989
      }else {
        var or__3824__auto____7990 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____7990) {
          return or__3824__auto____7990
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____7995 = tcoll;
    if(and__3822__auto____7995) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____7995
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2431__auto____7996 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7997 = cljs.core._disjoin_BANG_[goog.typeOf(x__2431__auto____7996)];
      if(or__3824__auto____7997) {
        return or__3824__auto____7997
      }else {
        var or__3824__auto____7998 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____7998) {
          return or__3824__auto____7998
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8003 = x;
    if(and__3822__auto____8003) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8003
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2431__auto____8004 = x == null ? null : x;
    return function() {
      var or__3824__auto____8005 = cljs.core._compare[goog.typeOf(x__2431__auto____8004)];
      if(or__3824__auto____8005) {
        return or__3824__auto____8005
      }else {
        var or__3824__auto____8006 = cljs.core._compare["_"];
        if(or__3824__auto____8006) {
          return or__3824__auto____8006
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8011 = coll;
    if(and__3822__auto____8011) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8011
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2431__auto____8012 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8013 = cljs.core._drop_first[goog.typeOf(x__2431__auto____8012)];
      if(or__3824__auto____8013) {
        return or__3824__auto____8013
      }else {
        var or__3824__auto____8014 = cljs.core._drop_first["_"];
        if(or__3824__auto____8014) {
          return or__3824__auto____8014
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8019 = coll;
    if(and__3822__auto____8019) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8019
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2431__auto____8020 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8021 = cljs.core._chunked_first[goog.typeOf(x__2431__auto____8020)];
      if(or__3824__auto____8021) {
        return or__3824__auto____8021
      }else {
        var or__3824__auto____8022 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8022) {
          return or__3824__auto____8022
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8027 = coll;
    if(and__3822__auto____8027) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8027
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2431__auto____8028 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8029 = cljs.core._chunked_rest[goog.typeOf(x__2431__auto____8028)];
      if(or__3824__auto____8029) {
        return or__3824__auto____8029
      }else {
        var or__3824__auto____8030 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8030) {
          return or__3824__auto____8030
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8035 = coll;
    if(and__3822__auto____8035) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8035
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2431__auto____8036 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8037 = cljs.core._chunked_next[goog.typeOf(x__2431__auto____8036)];
      if(or__3824__auto____8037) {
        return or__3824__auto____8037
      }else {
        var or__3824__auto____8038 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8038) {
          return or__3824__auto____8038
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8042__8043 = coll;
      if(G__8042__8043) {
        if(function() {
          var or__3824__auto____8044 = G__8042__8043.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8044) {
            return or__3824__auto____8044
          }else {
            return G__8042__8043.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8042__8043.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8042__8043)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8042__8043)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8049__8050 = coll;
      if(G__8049__8050) {
        if(function() {
          var or__3824__auto____8051 = G__8049__8050.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8051) {
            return or__3824__auto____8051
          }else {
            return G__8049__8050.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8049__8050.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8049__8050)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8049__8050)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8052 = cljs.core.seq.call(null, coll);
      if(s__8052 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8052)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8057__8058 = coll;
      if(G__8057__8058) {
        if(function() {
          var or__3824__auto____8059 = G__8057__8058.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8059) {
            return or__3824__auto____8059
          }else {
            return G__8057__8058.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8057__8058.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8057__8058)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8057__8058)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8060 = cljs.core.seq.call(null, coll);
      if(!(s__8060 == null)) {
        return cljs.core._rest.call(null, s__8060)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8064__8065 = coll;
      if(G__8064__8065) {
        if(function() {
          var or__3824__auto____8066 = G__8064__8065.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8066) {
            return or__3824__auto____8066
          }else {
            return G__8064__8065.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8064__8065.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8064__8065)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8064__8065)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8068 = x === y;
    if(or__3824__auto____8068) {
      return or__3824__auto____8068
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8069__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8070 = y;
            var G__8071 = cljs.core.first.call(null, more);
            var G__8072 = cljs.core.next.call(null, more);
            x = G__8070;
            y = G__8071;
            more = G__8072;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8069 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8069__delegate.call(this, x, y, more)
    };
    G__8069.cljs$lang$maxFixedArity = 2;
    G__8069.cljs$lang$applyTo = function(arglist__8073) {
      var x = cljs.core.first(arglist__8073);
      var y = cljs.core.first(cljs.core.next(arglist__8073));
      var more = cljs.core.rest(cljs.core.next(arglist__8073));
      return G__8069__delegate(x, y, more)
    };
    G__8069.cljs$lang$arity$variadic = G__8069__delegate;
    return G__8069
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8074 = null;
  var G__8074__2 = function(o, k) {
    return null
  };
  var G__8074__3 = function(o, k, not_found) {
    return not_found
  };
  G__8074 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8074__2.call(this, o, k);
      case 3:
        return G__8074__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8074
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IPrintWithWriter["null"] = true;
cljs.core._pr_writer["null"] = function(o, writer, _) {
  return cljs.core._write.call(null, writer, "nil")
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8075 = null;
  var G__8075__2 = function(_, f) {
    return f.call(null)
  };
  var G__8075__3 = function(_, f, start) {
    return start
  };
  G__8075 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8075__2.call(this, _, f);
      case 3:
        return G__8075__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8075
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8076 = null;
  var G__8076__2 = function(_, n) {
    return null
  };
  var G__8076__3 = function(_, n, not_found) {
    return not_found
  };
  G__8076 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8076__2.call(this, _, n);
      case 3:
        return G__8076__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8076
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8077 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8077) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8077
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8078 = this;
  return this__8078.val
};
cljs.core.Reduced;
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8091 = cljs.core._count.call(null, cicoll);
    if(cnt__8091 === 0) {
      return f.call(null)
    }else {
      var val__8092 = cljs.core._nth.call(null, cicoll, 0);
      var n__8093 = 1;
      while(true) {
        if(n__8093 < cnt__8091) {
          var nval__8094 = f.call(null, val__8092, cljs.core._nth.call(null, cicoll, n__8093));
          if(cljs.core.reduced_QMARK_.call(null, nval__8094)) {
            return cljs.core.deref.call(null, nval__8094)
          }else {
            var G__8103 = nval__8094;
            var G__8104 = n__8093 + 1;
            val__8092 = G__8103;
            n__8093 = G__8104;
            continue
          }
        }else {
          return val__8092
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8095 = cljs.core._count.call(null, cicoll);
    var val__8096 = val;
    var n__8097 = 0;
    while(true) {
      if(n__8097 < cnt__8095) {
        var nval__8098 = f.call(null, val__8096, cljs.core._nth.call(null, cicoll, n__8097));
        if(cljs.core.reduced_QMARK_.call(null, nval__8098)) {
          return cljs.core.deref.call(null, nval__8098)
        }else {
          var G__8105 = nval__8098;
          var G__8106 = n__8097 + 1;
          val__8096 = G__8105;
          n__8097 = G__8106;
          continue
        }
      }else {
        return val__8096
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8099 = cljs.core._count.call(null, cicoll);
    var val__8100 = val;
    var n__8101 = idx;
    while(true) {
      if(n__8101 < cnt__8099) {
        var nval__8102 = f.call(null, val__8100, cljs.core._nth.call(null, cicoll, n__8101));
        if(cljs.core.reduced_QMARK_.call(null, nval__8102)) {
          return cljs.core.deref.call(null, nval__8102)
        }else {
          var G__8107 = nval__8102;
          var G__8108 = n__8101 + 1;
          val__8100 = G__8107;
          n__8101 = G__8108;
          continue
        }
      }else {
        return val__8100
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8121 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8122 = arr[0];
      var n__8123 = 1;
      while(true) {
        if(n__8123 < cnt__8121) {
          var nval__8124 = f.call(null, val__8122, arr[n__8123]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8124)) {
            return cljs.core.deref.call(null, nval__8124)
          }else {
            var G__8133 = nval__8124;
            var G__8134 = n__8123 + 1;
            val__8122 = G__8133;
            n__8123 = G__8134;
            continue
          }
        }else {
          return val__8122
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8125 = arr.length;
    var val__8126 = val;
    var n__8127 = 0;
    while(true) {
      if(n__8127 < cnt__8125) {
        var nval__8128 = f.call(null, val__8126, arr[n__8127]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8128)) {
          return cljs.core.deref.call(null, nval__8128)
        }else {
          var G__8135 = nval__8128;
          var G__8136 = n__8127 + 1;
          val__8126 = G__8135;
          n__8127 = G__8136;
          continue
        }
      }else {
        return val__8126
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8129 = arr.length;
    var val__8130 = val;
    var n__8131 = idx;
    while(true) {
      if(n__8131 < cnt__8129) {
        var nval__8132 = f.call(null, val__8130, arr[n__8131]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8132)) {
          return cljs.core.deref.call(null, nval__8132)
        }else {
          var G__8137 = nval__8132;
          var G__8138 = n__8131 + 1;
          val__8130 = G__8137;
          n__8131 = G__8138;
          continue
        }
      }else {
        return val__8130
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8142__8143 = x;
  if(G__8142__8143) {
    if(function() {
      var or__3824__auto____8144 = G__8142__8143.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8144) {
        return or__3824__auto____8144
      }else {
        return G__8142__8143.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8142__8143.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8142__8143)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8142__8143)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8148__8149 = x;
  if(G__8148__8149) {
    if(function() {
      var or__3824__auto____8150 = G__8148__8149.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8150) {
        return or__3824__auto____8150
      }else {
        return G__8148__8149.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8148__8149.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8148__8149)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8148__8149)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8151 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8152 = this;
  if(this__8152.i + 1 < this__8152.a.length) {
    return new cljs.core.IndexedSeq(this__8152.a, this__8152.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8153 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8154 = this;
  var c__8155 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8155 > 0) {
    return new cljs.core.RSeq(coll, c__8155 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8156 = this;
  var this__8157 = this;
  return cljs.core.pr_str.call(null, this__8157)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8158 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8158.a)) {
    return cljs.core.ci_reduce.call(null, this__8158.a, f, this__8158.a[this__8158.i], this__8158.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8158.a[this__8158.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8159 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8159.a)) {
    return cljs.core.ci_reduce.call(null, this__8159.a, f, start, this__8159.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8160 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8161 = this;
  return this__8161.a.length - this__8161.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8162 = this;
  return this__8162.a[this__8162.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8163 = this;
  if(this__8163.i + 1 < this__8163.a.length) {
    return new cljs.core.IndexedSeq(this__8163.a, this__8163.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8164 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8165 = this;
  var i__8166 = n + this__8165.i;
  if(i__8166 < this__8165.a.length) {
    return this__8165.a[i__8166]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8167 = this;
  var i__8168 = n + this__8167.i;
  if(i__8168 < this__8167.a.length) {
    return this__8167.a[i__8168]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8169 = this;
  return cljs.core.List.EMPTY
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8170 = null;
  var G__8170__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8170__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8170 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8170__2.call(this, array, f);
      case 3:
        return G__8170__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8170
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8171 = null;
  var G__8171__2 = function(array, k) {
    return array[k]
  };
  var G__8171__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8171 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8171__2.call(this, array, k);
      case 3:
        return G__8171__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8171
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8172 = null;
  var G__8172__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8172__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8172 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8172__2.call(this, array, n);
      case 3:
        return G__8172__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8172
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8173 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8174 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8175 = this;
  var this__8176 = this;
  return cljs.core.pr_str.call(null, this__8176)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8177 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8178 = this;
  return this__8178.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8179 = this;
  return cljs.core._nth.call(null, this__8179.ci, this__8179.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8180 = this;
  if(this__8180.i > 0) {
    return new cljs.core.RSeq(this__8180.ci, this__8180.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8181 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8182 = this;
  return new cljs.core.RSeq(this__8182.ci, this__8182.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8183 = this;
  return this__8183.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8184 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8184.meta)
};
cljs.core.RSeq;
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8186 = cljs.core.next.call(null, s);
    if(!(sn__8186 == null)) {
      var G__8187 = sn__8186;
      s = G__8187;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8188__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8189 = conj.call(null, coll, x);
          var G__8190 = cljs.core.first.call(null, xs);
          var G__8191 = cljs.core.next.call(null, xs);
          coll = G__8189;
          x = G__8190;
          xs = G__8191;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8188 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8188__delegate.call(this, coll, x, xs)
    };
    G__8188.cljs$lang$maxFixedArity = 2;
    G__8188.cljs$lang$applyTo = function(arglist__8192) {
      var coll = cljs.core.first(arglist__8192);
      var x = cljs.core.first(cljs.core.next(arglist__8192));
      var xs = cljs.core.rest(cljs.core.next(arglist__8192));
      return G__8188__delegate(coll, x, xs)
    };
    G__8188.cljs$lang$arity$variadic = G__8188__delegate;
    return G__8188
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8195 = cljs.core.seq.call(null, coll);
  var acc__8196 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8195)) {
      return acc__8196 + cljs.core._count.call(null, s__8195)
    }else {
      var G__8197 = cljs.core.next.call(null, s__8195);
      var G__8198 = acc__8196 + 1;
      s__8195 = G__8197;
      acc__8196 = G__8198;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__8199 = cljs.core.next.call(null, coll);
              var G__8200 = n - 1;
              coll = G__8199;
              n = G__8200;
              continue
            }else {
              if("\ufdd0'else") {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__8201 = cljs.core.next.call(null, coll);
              var G__8202 = n - 1;
              var G__8203 = not_found;
              coll = G__8201;
              n = G__8202;
              not_found = G__8203;
              continue
            }else {
              if("\ufdd0'else") {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8210__8211 = coll;
        if(G__8210__8211) {
          if(function() {
            var or__3824__auto____8212 = G__8210__8211.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8212) {
              return or__3824__auto____8212
            }else {
              return G__8210__8211.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8210__8211.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8210__8211)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8210__8211)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8213__8214 = coll;
        if(G__8213__8214) {
          if(function() {
            var or__3824__auto____8215 = G__8213__8214.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8215) {
              return or__3824__auto____8215
            }else {
              return G__8213__8214.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8213__8214.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8213__8214)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8213__8214)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8218__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8217 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8219 = ret__8217;
          var G__8220 = cljs.core.first.call(null, kvs);
          var G__8221 = cljs.core.second.call(null, kvs);
          var G__8222 = cljs.core.nnext.call(null, kvs);
          coll = G__8219;
          k = G__8220;
          v = G__8221;
          kvs = G__8222;
          continue
        }else {
          return ret__8217
        }
        break
      }
    };
    var G__8218 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8218__delegate.call(this, coll, k, v, kvs)
    };
    G__8218.cljs$lang$maxFixedArity = 3;
    G__8218.cljs$lang$applyTo = function(arglist__8223) {
      var coll = cljs.core.first(arglist__8223);
      var k = cljs.core.first(cljs.core.next(arglist__8223));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8223)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8223)));
      return G__8218__delegate(coll, k, v, kvs)
    };
    G__8218.cljs$lang$arity$variadic = G__8218__delegate;
    return G__8218
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8226__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8225 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8227 = ret__8225;
          var G__8228 = cljs.core.first.call(null, ks);
          var G__8229 = cljs.core.next.call(null, ks);
          coll = G__8227;
          k = G__8228;
          ks = G__8229;
          continue
        }else {
          return ret__8225
        }
        break
      }
    };
    var G__8226 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8226__delegate.call(this, coll, k, ks)
    };
    G__8226.cljs$lang$maxFixedArity = 2;
    G__8226.cljs$lang$applyTo = function(arglist__8230) {
      var coll = cljs.core.first(arglist__8230);
      var k = cljs.core.first(cljs.core.next(arglist__8230));
      var ks = cljs.core.rest(cljs.core.next(arglist__8230));
      return G__8226__delegate(coll, k, ks)
    };
    G__8226.cljs$lang$arity$variadic = G__8226__delegate;
    return G__8226
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8234__8235 = o;
    if(G__8234__8235) {
      if(function() {
        var or__3824__auto____8236 = G__8234__8235.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8236) {
          return or__3824__auto____8236
        }else {
          return G__8234__8235.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8234__8235.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8234__8235)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8234__8235)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8239__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8238 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8240 = ret__8238;
          var G__8241 = cljs.core.first.call(null, ks);
          var G__8242 = cljs.core.next.call(null, ks);
          coll = G__8240;
          k = G__8241;
          ks = G__8242;
          continue
        }else {
          return ret__8238
        }
        break
      }
    };
    var G__8239 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8239__delegate.call(this, coll, k, ks)
    };
    G__8239.cljs$lang$maxFixedArity = 2;
    G__8239.cljs$lang$applyTo = function(arglist__8243) {
      var coll = cljs.core.first(arglist__8243);
      var k = cljs.core.first(cljs.core.next(arglist__8243));
      var ks = cljs.core.rest(cljs.core.next(arglist__8243));
      return G__8239__delegate(coll, k, ks)
    };
    G__8239.cljs$lang$arity$variadic = G__8239__delegate;
    return G__8239
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8245 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8245;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8245
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8247 = cljs.core.string_hash_cache[k];
  if(!(h__8247 == null)) {
    return h__8247
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8249 = goog.isString(o);
      if(and__3822__auto____8249) {
        return check_cache
      }else {
        return and__3822__auto____8249
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8253__8254 = x;
    if(G__8253__8254) {
      if(function() {
        var or__3824__auto____8255 = G__8253__8254.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8255) {
          return or__3824__auto____8255
        }else {
          return G__8253__8254.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8253__8254.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8253__8254)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8253__8254)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8259__8260 = x;
    if(G__8259__8260) {
      if(function() {
        var or__3824__auto____8261 = G__8259__8260.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8261) {
          return or__3824__auto____8261
        }else {
          return G__8259__8260.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8259__8260.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8259__8260)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8259__8260)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8265__8266 = x;
  if(G__8265__8266) {
    if(function() {
      var or__3824__auto____8267 = G__8265__8266.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8267) {
        return or__3824__auto____8267
      }else {
        return G__8265__8266.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8265__8266.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8265__8266)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8265__8266)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8271__8272 = x;
  if(G__8271__8272) {
    if(function() {
      var or__3824__auto____8273 = G__8271__8272.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8273) {
        return or__3824__auto____8273
      }else {
        return G__8271__8272.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8271__8272.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8271__8272)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8271__8272)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8277__8278 = x;
  if(G__8277__8278) {
    if(function() {
      var or__3824__auto____8279 = G__8277__8278.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8279) {
        return or__3824__auto____8279
      }else {
        return G__8277__8278.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8277__8278.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8277__8278)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8277__8278)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8283__8284 = x;
    if(G__8283__8284) {
      if(function() {
        var or__3824__auto____8285 = G__8283__8284.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8285) {
          return or__3824__auto____8285
        }else {
          return G__8283__8284.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8283__8284.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8283__8284)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8283__8284)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8289__8290 = x;
  if(G__8289__8290) {
    if(function() {
      var or__3824__auto____8291 = G__8289__8290.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8291) {
        return or__3824__auto____8291
      }else {
        return G__8289__8290.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8289__8290.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8289__8290)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8289__8290)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8295__8296 = x;
  if(G__8295__8296) {
    if(function() {
      var or__3824__auto____8297 = G__8295__8296.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3824__auto____8297) {
        return or__3824__auto____8297
      }else {
        return G__8295__8296.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      if(!G__8295__8296.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8295__8296)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8295__8296)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8298__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8298 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8298__delegate.call(this, keyvals)
    };
    G__8298.cljs$lang$maxFixedArity = 0;
    G__8298.cljs$lang$applyTo = function(arglist__8299) {
      var keyvals = cljs.core.seq(arglist__8299);
      return G__8298__delegate(keyvals)
    };
    G__8298.cljs$lang$arity$variadic = G__8298__delegate;
    return G__8298
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8301 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8301.push(key)
  });
  return keys__8301
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8305 = i;
  var j__8306 = j;
  var len__8307 = len;
  while(true) {
    if(len__8307 === 0) {
      return to
    }else {
      to[j__8306] = from[i__8305];
      var G__8308 = i__8305 + 1;
      var G__8309 = j__8306 + 1;
      var G__8310 = len__8307 - 1;
      i__8305 = G__8308;
      j__8306 = G__8309;
      len__8307 = G__8310;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8314 = i + (len - 1);
  var j__8315 = j + (len - 1);
  var len__8316 = len;
  while(true) {
    if(len__8316 === 0) {
      return to
    }else {
      to[j__8315] = from[i__8314];
      var G__8317 = i__8314 - 1;
      var G__8318 = j__8315 - 1;
      var G__8319 = len__8316 - 1;
      i__8314 = G__8317;
      j__8315 = G__8318;
      len__8316 = G__8319;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8323__8324 = s;
    if(G__8323__8324) {
      if(function() {
        var or__3824__auto____8325 = G__8323__8324.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8325) {
          return or__3824__auto____8325
        }else {
          return G__8323__8324.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8323__8324.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8323__8324)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8323__8324)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8329__8330 = s;
  if(G__8329__8330) {
    if(function() {
      var or__3824__auto____8331 = G__8329__8330.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8331) {
        return or__3824__auto____8331
      }else {
        return G__8329__8330.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8329__8330.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8329__8330)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8329__8330)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8334 = goog.isString(x);
  if(and__3822__auto____8334) {
    return!function() {
      var or__3824__auto____8335 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8335) {
        return or__3824__auto____8335
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8334
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8337 = goog.isString(x);
  if(and__3822__auto____8337) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8337
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8339 = goog.isString(x);
  if(and__3822__auto____8339) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8339
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8344 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8344) {
    return or__3824__auto____8344
  }else {
    var G__8345__8346 = f;
    if(G__8345__8346) {
      if(function() {
        var or__3824__auto____8347 = G__8345__8346.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8347) {
          return or__3824__auto____8347
        }else {
          return G__8345__8346.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8345__8346.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8345__8346)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8345__8346)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8351 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8351) {
    var and__3822__auto____8352 = !isNaN(n);
    if(and__3822__auto____8352) {
      var and__3822__auto____8353 = !(n === Infinity);
      if(and__3822__auto____8353) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3822__auto____8353
      }
    }else {
      return and__3822__auto____8352
    }
  }else {
    return and__3822__auto____8351
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3822__auto____8356 = !(coll == null);
    if(and__3822__auto____8356) {
      var and__3822__auto____8357 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8357) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8357
      }
    }else {
      return and__3822__auto____8356
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8366__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8362 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8363 = more;
        while(true) {
          var x__8364 = cljs.core.first.call(null, xs__8363);
          var etc__8365 = cljs.core.next.call(null, xs__8363);
          if(cljs.core.truth_(xs__8363)) {
            if(cljs.core.contains_QMARK_.call(null, s__8362, x__8364)) {
              return false
            }else {
              var G__8367 = cljs.core.conj.call(null, s__8362, x__8364);
              var G__8368 = etc__8365;
              s__8362 = G__8367;
              xs__8363 = G__8368;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8366 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8366__delegate.call(this, x, y, more)
    };
    G__8366.cljs$lang$maxFixedArity = 2;
    G__8366.cljs$lang$applyTo = function(arglist__8369) {
      var x = cljs.core.first(arglist__8369);
      var y = cljs.core.first(cljs.core.next(arglist__8369));
      var more = cljs.core.rest(cljs.core.next(arglist__8369));
      return G__8366__delegate(x, y, more)
    };
    G__8366.cljs$lang$arity$variadic = G__8366__delegate;
    return G__8366
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8373__8374 = x;
            if(G__8373__8374) {
              if(function() {
                var or__3824__auto____8375 = G__8373__8374.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3824__auto____8375) {
                  return or__3824__auto____8375
                }else {
                  return G__8373__8374.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                if(!G__8373__8374.cljs$lang$protocol_mask$partition1$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8373__8374)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8373__8374)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8380 = cljs.core.count.call(null, xs);
    var yl__8381 = cljs.core.count.call(null, ys);
    if(xl__8380 < yl__8381) {
      return-1
    }else {
      if(xl__8380 > yl__8381) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8380, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8382 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8383 = d__8382 === 0;
        if(and__3822__auto____8383) {
          return n + 1 < len
        }else {
          return and__3822__auto____8383
        }
      }()) {
        var G__8384 = xs;
        var G__8385 = ys;
        var G__8386 = len;
        var G__8387 = n + 1;
        xs = G__8384;
        ys = G__8385;
        len = G__8386;
        n = G__8387;
        continue
      }else {
        return d__8382
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8389 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8389)) {
        return r__8389
      }else {
        if(cljs.core.truth_(r__8389)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8391 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8391, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8391)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8397 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8397) {
      var s__8398 = temp__3971__auto____8397;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8398), cljs.core.next.call(null, s__8398))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8399 = val;
    var coll__8400 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8400) {
        var nval__8401 = f.call(null, val__8399, cljs.core.first.call(null, coll__8400));
        if(cljs.core.reduced_QMARK_.call(null, nval__8401)) {
          return cljs.core.deref.call(null, nval__8401)
        }else {
          var G__8402 = nval__8401;
          var G__8403 = cljs.core.next.call(null, coll__8400);
          val__8399 = G__8402;
          coll__8400 = G__8403;
          continue
        }
      }else {
        return val__8399
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8405 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8405);
  return cljs.core.vec.call(null, a__8405)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8412__8413 = coll;
      if(G__8412__8413) {
        if(function() {
          var or__3824__auto____8414 = G__8412__8413.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8414) {
            return or__3824__auto____8414
          }else {
            return G__8412__8413.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8412__8413.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8412__8413)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8412__8413)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8415__8416 = coll;
      if(G__8415__8416) {
        if(function() {
          var or__3824__auto____8417 = G__8415__8416.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8417) {
            return or__3824__auto____8417
          }else {
            return G__8415__8416.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8415__8416.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8415__8416)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8415__8416)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8418__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8418 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8418__delegate.call(this, x, y, more)
    };
    G__8418.cljs$lang$maxFixedArity = 2;
    G__8418.cljs$lang$applyTo = function(arglist__8419) {
      var x = cljs.core.first(arglist__8419);
      var y = cljs.core.first(cljs.core.next(arglist__8419));
      var more = cljs.core.rest(cljs.core.next(arglist__8419));
      return G__8418__delegate(x, y, more)
    };
    G__8418.cljs$lang$arity$variadic = G__8418__delegate;
    return G__8418
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8420__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8420 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8420__delegate.call(this, x, y, more)
    };
    G__8420.cljs$lang$maxFixedArity = 2;
    G__8420.cljs$lang$applyTo = function(arglist__8421) {
      var x = cljs.core.first(arglist__8421);
      var y = cljs.core.first(cljs.core.next(arglist__8421));
      var more = cljs.core.rest(cljs.core.next(arglist__8421));
      return G__8420__delegate(x, y, more)
    };
    G__8420.cljs$lang$arity$variadic = G__8420__delegate;
    return G__8420
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8422__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8422 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8422__delegate.call(this, x, y, more)
    };
    G__8422.cljs$lang$maxFixedArity = 2;
    G__8422.cljs$lang$applyTo = function(arglist__8423) {
      var x = cljs.core.first(arglist__8423);
      var y = cljs.core.first(cljs.core.next(arglist__8423));
      var more = cljs.core.rest(cljs.core.next(arglist__8423));
      return G__8422__delegate(x, y, more)
    };
    G__8422.cljs$lang$arity$variadic = G__8422__delegate;
    return G__8422
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8424__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8424 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8424__delegate.call(this, x, y, more)
    };
    G__8424.cljs$lang$maxFixedArity = 2;
    G__8424.cljs$lang$applyTo = function(arglist__8425) {
      var x = cljs.core.first(arglist__8425);
      var y = cljs.core.first(cljs.core.next(arglist__8425));
      var more = cljs.core.rest(cljs.core.next(arglist__8425));
      return G__8424__delegate(x, y, more)
    };
    G__8424.cljs$lang$arity$variadic = G__8424__delegate;
    return G__8424
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8426__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8427 = y;
            var G__8428 = cljs.core.first.call(null, more);
            var G__8429 = cljs.core.next.call(null, more);
            x = G__8427;
            y = G__8428;
            more = G__8429;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8426 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8426__delegate.call(this, x, y, more)
    };
    G__8426.cljs$lang$maxFixedArity = 2;
    G__8426.cljs$lang$applyTo = function(arglist__8430) {
      var x = cljs.core.first(arglist__8430);
      var y = cljs.core.first(cljs.core.next(arglist__8430));
      var more = cljs.core.rest(cljs.core.next(arglist__8430));
      return G__8426__delegate(x, y, more)
    };
    G__8426.cljs$lang$arity$variadic = G__8426__delegate;
    return G__8426
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8431__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8432 = y;
            var G__8433 = cljs.core.first.call(null, more);
            var G__8434 = cljs.core.next.call(null, more);
            x = G__8432;
            y = G__8433;
            more = G__8434;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8431 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8431__delegate.call(this, x, y, more)
    };
    G__8431.cljs$lang$maxFixedArity = 2;
    G__8431.cljs$lang$applyTo = function(arglist__8435) {
      var x = cljs.core.first(arglist__8435);
      var y = cljs.core.first(cljs.core.next(arglist__8435));
      var more = cljs.core.rest(cljs.core.next(arglist__8435));
      return G__8431__delegate(x, y, more)
    };
    G__8431.cljs$lang$arity$variadic = G__8431__delegate;
    return G__8431
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8436__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8437 = y;
            var G__8438 = cljs.core.first.call(null, more);
            var G__8439 = cljs.core.next.call(null, more);
            x = G__8437;
            y = G__8438;
            more = G__8439;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8436 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8436__delegate.call(this, x, y, more)
    };
    G__8436.cljs$lang$maxFixedArity = 2;
    G__8436.cljs$lang$applyTo = function(arglist__8440) {
      var x = cljs.core.first(arglist__8440);
      var y = cljs.core.first(cljs.core.next(arglist__8440));
      var more = cljs.core.rest(cljs.core.next(arglist__8440));
      return G__8436__delegate(x, y, more)
    };
    G__8436.cljs$lang$arity$variadic = G__8436__delegate;
    return G__8436
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8441__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8442 = y;
            var G__8443 = cljs.core.first.call(null, more);
            var G__8444 = cljs.core.next.call(null, more);
            x = G__8442;
            y = G__8443;
            more = G__8444;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8441 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8441__delegate.call(this, x, y, more)
    };
    G__8441.cljs$lang$maxFixedArity = 2;
    G__8441.cljs$lang$applyTo = function(arglist__8445) {
      var x = cljs.core.first(arglist__8445);
      var y = cljs.core.first(cljs.core.next(arglist__8445));
      var more = cljs.core.rest(cljs.core.next(arglist__8445));
      return G__8441__delegate(x, y, more)
    };
    G__8441.cljs$lang$arity$variadic = G__8441__delegate;
    return G__8441
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8446__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8446 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8446__delegate.call(this, x, y, more)
    };
    G__8446.cljs$lang$maxFixedArity = 2;
    G__8446.cljs$lang$applyTo = function(arglist__8447) {
      var x = cljs.core.first(arglist__8447);
      var y = cljs.core.first(cljs.core.next(arglist__8447));
      var more = cljs.core.rest(cljs.core.next(arglist__8447));
      return G__8446__delegate(x, y, more)
    };
    G__8446.cljs$lang$arity$variadic = G__8446__delegate;
    return G__8446
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8448__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8448 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8448__delegate.call(this, x, y, more)
    };
    G__8448.cljs$lang$maxFixedArity = 2;
    G__8448.cljs$lang$applyTo = function(arglist__8449) {
      var x = cljs.core.first(arglist__8449);
      var y = cljs.core.first(cljs.core.next(arglist__8449));
      var more = cljs.core.rest(cljs.core.next(arglist__8449));
      return G__8448__delegate(x, y, more)
    };
    G__8448.cljs$lang$arity$variadic = G__8448__delegate;
    return G__8448
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8451 = n % d;
  return cljs.core.fix.call(null, (n - rem__8451) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8453 = cljs.core.quot.call(null, n, d);
  return n - d * q__8453
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8456 = v - (v >> 1 & 1431655765);
  var v__8457 = (v__8456 & 858993459) + (v__8456 >> 2 & 858993459);
  return(v__8457 + (v__8457 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8458__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8459 = y;
            var G__8460 = cljs.core.first.call(null, more);
            var G__8461 = cljs.core.next.call(null, more);
            x = G__8459;
            y = G__8460;
            more = G__8461;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8458 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8458__delegate.call(this, x, y, more)
    };
    G__8458.cljs$lang$maxFixedArity = 2;
    G__8458.cljs$lang$applyTo = function(arglist__8462) {
      var x = cljs.core.first(arglist__8462);
      var y = cljs.core.first(cljs.core.next(arglist__8462));
      var more = cljs.core.rest(cljs.core.next(arglist__8462));
      return G__8458__delegate(x, y, more)
    };
    G__8458.cljs$lang$arity$variadic = G__8458__delegate;
    return G__8458
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8466 = n;
  var xs__8467 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8468 = xs__8467;
      if(and__3822__auto____8468) {
        return n__8466 > 0
      }else {
        return and__3822__auto____8468
      }
    }())) {
      var G__8469 = n__8466 - 1;
      var G__8470 = cljs.core.next.call(null, xs__8467);
      n__8466 = G__8469;
      xs__8467 = G__8470;
      continue
    }else {
      return xs__8467
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8471__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8472 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8473 = cljs.core.next.call(null, more);
            sb = G__8472;
            more = G__8473;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8471 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8471__delegate.call(this, x, ys)
    };
    G__8471.cljs$lang$maxFixedArity = 1;
    G__8471.cljs$lang$applyTo = function(arglist__8474) {
      var x = cljs.core.first(arglist__8474);
      var ys = cljs.core.rest(arglist__8474);
      return G__8471__delegate(x, ys)
    };
    G__8471.cljs$lang$arity$variadic = G__8471__delegate;
    return G__8471
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8475__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8476 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8477 = cljs.core.next.call(null, more);
            sb = G__8476;
            more = G__8477;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8475 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8475__delegate.call(this, x, ys)
    };
    G__8475.cljs$lang$maxFixedArity = 1;
    G__8475.cljs$lang$applyTo = function(arglist__8478) {
      var x = cljs.core.first(arglist__8478);
      var ys = cljs.core.rest(arglist__8478);
      return G__8475__delegate(x, ys)
    };
    G__8475.cljs$lang$arity$variadic = G__8475__delegate;
    return G__8475
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__8482 = cljs.core.map.call(null, function(x) {
      if(function() {
        var or__3824__auto____8481 = cljs.core.keyword_QMARK_.call(null, x);
        if(or__3824__auto____8481) {
          return or__3824__auto____8481
        }else {
          return cljs.core.symbol_QMARK_.call(null, x)
        }
      }()) {
        return[cljs.core.str(x)].join("")
      }else {
        return x
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__8482)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__8483) {
    var fmt = cljs.core.first(arglist__8483);
    var args = cljs.core.rest(arglist__8483);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8486 = cljs.core.seq.call(null, x);
    var ys__8487 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8486 == null) {
        return ys__8487 == null
      }else {
        if(ys__8487 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8486), cljs.core.first.call(null, ys__8487))) {
            var G__8488 = cljs.core.next.call(null, xs__8486);
            var G__8489 = cljs.core.next.call(null, ys__8487);
            xs__8486 = G__8488;
            ys__8487 = G__8489;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8490_SHARP_, p2__8491_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8490_SHARP_, cljs.core.hash.call(null, p2__8491_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__8495 = 0;
  var s__8496 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8496) {
      var e__8497 = cljs.core.first.call(null, s__8496);
      var G__8498 = (h__8495 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8497)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8497)))) % 4503599627370496;
      var G__8499 = cljs.core.next.call(null, s__8496);
      h__8495 = G__8498;
      s__8496 = G__8499;
      continue
    }else {
      return h__8495
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8503 = 0;
  var s__8504 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8504) {
      var e__8505 = cljs.core.first.call(null, s__8504);
      var G__8506 = (h__8503 + cljs.core.hash.call(null, e__8505)) % 4503599627370496;
      var G__8507 = cljs.core.next.call(null, s__8504);
      h__8503 = G__8506;
      s__8504 = G__8507;
      continue
    }else {
      return h__8503
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8515__8516 = cljs.core.seq.call(null, fn_map);
  while(true) {
    if(G__8515__8516) {
      var vec__8517__8518 = cljs.core.first.call(null, G__8515__8516);
      var key_name__8519 = cljs.core.nth.call(null, vec__8517__8518, 0, null);
      var f__8520 = cljs.core.nth.call(null, vec__8517__8518, 1, null);
      var str_name__8521 = cljs.core.name.call(null, key_name__8519);
      obj[str_name__8521] = f__8520;
      var G__8522 = cljs.core.next.call(null, G__8515__8516);
      G__8515__8516 = G__8522;
      continue
    }else {
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8523 = this;
  var h__2247__auto____8524 = this__8523.__hash;
  if(!(h__2247__auto____8524 == null)) {
    return h__2247__auto____8524
  }else {
    var h__2247__auto____8525 = cljs.core.hash_coll.call(null, coll);
    this__8523.__hash = h__2247__auto____8525;
    return h__2247__auto____8525
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8526 = this;
  if(this__8526.count === 1) {
    return null
  }else {
    return this__8526.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8527 = this;
  return new cljs.core.List(this__8527.meta, o, coll, this__8527.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8528 = this;
  var this__8529 = this;
  return cljs.core.pr_str.call(null, this__8529)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8530 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8531 = this;
  return this__8531.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8532 = this;
  return this__8532.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8533 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8534 = this;
  return this__8534.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8535 = this;
  if(this__8535.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8535.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8536 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8537 = this;
  return new cljs.core.List(meta, this__8537.first, this__8537.rest, this__8537.count, this__8537.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8538 = this;
  return this__8538.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8539 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8540 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8541 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8542 = this;
  return new cljs.core.List(this__8542.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8543 = this;
  var this__8544 = this;
  return cljs.core.pr_str.call(null, this__8544)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8545 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8546 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8547 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8548 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8549 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8550 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8551 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8552 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8553 = this;
  return this__8553.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8554 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8558__8559 = coll;
  if(G__8558__8559) {
    if(function() {
      var or__3824__auto____8560 = G__8558__8559.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8560) {
        return or__3824__auto____8560
      }else {
        return G__8558__8559.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8558__8559.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8558__8559)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8558__8559)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8561__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8561 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8561__delegate.call(this, x, y, z, items)
    };
    G__8561.cljs$lang$maxFixedArity = 3;
    G__8561.cljs$lang$applyTo = function(arglist__8562) {
      var x = cljs.core.first(arglist__8562);
      var y = cljs.core.first(cljs.core.next(arglist__8562));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8562)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8562)));
      return G__8561__delegate(x, y, z, items)
    };
    G__8561.cljs$lang$arity$variadic = G__8561__delegate;
    return G__8561
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8563 = this;
  var h__2247__auto____8564 = this__8563.__hash;
  if(!(h__2247__auto____8564 == null)) {
    return h__2247__auto____8564
  }else {
    var h__2247__auto____8565 = cljs.core.hash_coll.call(null, coll);
    this__8563.__hash = h__2247__auto____8565;
    return h__2247__auto____8565
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8566 = this;
  if(this__8566.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8566.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8567 = this;
  return new cljs.core.Cons(null, o, coll, this__8567.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8568 = this;
  var this__8569 = this;
  return cljs.core.pr_str.call(null, this__8569)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8570 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8571 = this;
  return this__8571.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8572 = this;
  if(this__8572.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8572.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8573 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8574 = this;
  return new cljs.core.Cons(meta, this__8574.first, this__8574.rest, this__8574.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8575 = this;
  return this__8575.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8576 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8576.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8581 = coll == null;
    if(or__3824__auto____8581) {
      return or__3824__auto____8581
    }else {
      var G__8582__8583 = coll;
      if(G__8582__8583) {
        if(function() {
          var or__3824__auto____8584 = G__8582__8583.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8584) {
            return or__3824__auto____8584
          }else {
            return G__8582__8583.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8582__8583.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8582__8583)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8582__8583)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8588__8589 = x;
  if(G__8588__8589) {
    if(function() {
      var or__3824__auto____8590 = G__8588__8589.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8590) {
        return or__3824__auto____8590
      }else {
        return G__8588__8589.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8588__8589.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8588__8589)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8588__8589)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8591 = null;
  var G__8591__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8591__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8591 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8591__2.call(this, string, f);
      case 3:
        return G__8591__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8591
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8592 = null;
  var G__8592__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8592__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8592 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8592__2.call(this, string, k);
      case 3:
        return G__8592__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8592
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8593 = null;
  var G__8593__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8593__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8593 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8593__2.call(this, string, n);
      case 3:
        return G__8593__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8593
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8605 = null;
  var G__8605__2 = function(this_sym8596, coll) {
    var this__8598 = this;
    var this_sym8596__8599 = this;
    var ___8600 = this_sym8596__8599;
    if(coll == null) {
      return null
    }else {
      var strobj__8601 = coll.strobj;
      if(strobj__8601 == null) {
        return cljs.core._lookup.call(null, coll, this__8598.k, null)
      }else {
        return strobj__8601[this__8598.k]
      }
    }
  };
  var G__8605__3 = function(this_sym8597, coll, not_found) {
    var this__8598 = this;
    var this_sym8597__8602 = this;
    var ___8603 = this_sym8597__8602;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8598.k, not_found)
    }
  };
  G__8605 = function(this_sym8597, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8605__2.call(this, this_sym8597, coll);
      case 3:
        return G__8605__3.call(this, this_sym8597, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8605
}();
cljs.core.Keyword.prototype.apply = function(this_sym8594, args8595) {
  var this__8604 = this;
  return this_sym8594.call.apply(this_sym8594, [this_sym8594].concat(args8595.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8614 = null;
  var G__8614__2 = function(this_sym8608, coll) {
    var this_sym8608__8610 = this;
    var this__8611 = this_sym8608__8610;
    return cljs.core._lookup.call(null, coll, this__8611.toString(), null)
  };
  var G__8614__3 = function(this_sym8609, coll, not_found) {
    var this_sym8609__8612 = this;
    var this__8613 = this_sym8609__8612;
    return cljs.core._lookup.call(null, coll, this__8613.toString(), not_found)
  };
  G__8614 = function(this_sym8609, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8614__2.call(this, this_sym8609, coll);
      case 3:
        return G__8614__3.call(this, this_sym8609, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8614
}();
String.prototype.apply = function(this_sym8606, args8607) {
  return this_sym8606.call.apply(this_sym8606, [this_sym8606].concat(args8607.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8616 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8616
  }else {
    lazy_seq.x = x__8616.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8617 = this;
  var h__2247__auto____8618 = this__8617.__hash;
  if(!(h__2247__auto____8618 == null)) {
    return h__2247__auto____8618
  }else {
    var h__2247__auto____8619 = cljs.core.hash_coll.call(null, coll);
    this__8617.__hash = h__2247__auto____8619;
    return h__2247__auto____8619
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8620 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8621 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8622 = this;
  var this__8623 = this;
  return cljs.core.pr_str.call(null, this__8623)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8624 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8625 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8626 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8627 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8628 = this;
  return new cljs.core.LazySeq(meta, this__8628.realized, this__8628.x, this__8628.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8629 = this;
  return this__8629.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8630 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8630.meta)
};
cljs.core.LazySeq;
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8631 = this;
  return this__8631.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8632 = this;
  var ___8633 = this;
  this__8632.buf[this__8632.end] = o;
  return this__8632.end = this__8632.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8634 = this;
  var ___8635 = this;
  var ret__8636 = new cljs.core.ArrayChunk(this__8634.buf, 0, this__8634.end);
  this__8634.buf = null;
  return ret__8636
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8637 = this;
  return cljs.core.array_reduce.call(null, this__8637.arr, f, this__8637.arr[this__8637.off], this__8637.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8638 = this;
  return cljs.core.array_reduce.call(null, this__8638.arr, f, start, this__8638.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8639 = this;
  if(this__8639.off === this__8639.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8639.arr, this__8639.off + 1, this__8639.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8640 = this;
  return this__8640.arr[this__8640.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8641 = this;
  if(function() {
    var and__3822__auto____8642 = i >= 0;
    if(and__3822__auto____8642) {
      return i < this__8641.end - this__8641.off
    }else {
      return and__3822__auto____8642
    }
  }()) {
    return this__8641.arr[this__8641.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8643 = this;
  return this__8643.end - this__8643.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850604;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8644 = this;
  var h__2247__auto____8645 = this__8644.__hash;
  if(!(h__2247__auto____8645 == null)) {
    return h__2247__auto____8645
  }else {
    var h__2247__auto____8646 = cljs.core.hash_coll.call(null, coll);
    this__8644.__hash = h__2247__auto____8646;
    return h__2247__auto____8646
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8647 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8648 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8649 = this;
  return cljs.core._nth.call(null, this__8649.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8650 = this;
  if(cljs.core._count.call(null, this__8650.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8650.chunk), this__8650.more, this__8650.meta, null)
  }else {
    if(this__8650.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8650.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8651 = this;
  if(this__8651.more == null) {
    return null
  }else {
    return this__8651.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8652 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8653 = this;
  return new cljs.core.ChunkedCons(this__8653.chunk, this__8653.more, m, this__8653.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8654 = this;
  return this__8654.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8655 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8655.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8656 = this;
  return this__8656.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8657 = this;
  if(this__8657.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8657.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8661__8662 = s;
    if(G__8661__8662) {
      if(function() {
        var or__3824__auto____8663 = G__8661__8662.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3824__auto____8663) {
          return or__3824__auto____8663
        }else {
          return G__8661__8662.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        if(!G__8661__8662.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8661__8662)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8661__8662)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8666 = [];
  var s__8667 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8667)) {
      ary__8666.push(cljs.core.first.call(null, s__8667));
      var G__8668 = cljs.core.next.call(null, s__8667);
      s__8667 = G__8668;
      continue
    }else {
      return ary__8666
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8672 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8673 = 0;
  var xs__8674 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8674) {
      ret__8672[i__8673] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8674));
      var G__8675 = i__8673 + 1;
      var G__8676 = cljs.core.next.call(null, xs__8674);
      i__8673 = G__8675;
      xs__8674 = G__8676;
      continue
    }else {
    }
    break
  }
  return ret__8672
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8684 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8685 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8686 = 0;
      var s__8687 = s__8685;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8688 = s__8687;
          if(and__3822__auto____8688) {
            return i__8686 < size
          }else {
            return and__3822__auto____8688
          }
        }())) {
          a__8684[i__8686] = cljs.core.first.call(null, s__8687);
          var G__8691 = i__8686 + 1;
          var G__8692 = cljs.core.next.call(null, s__8687);
          i__8686 = G__8691;
          s__8687 = G__8692;
          continue
        }else {
          return a__8684
        }
        break
      }
    }else {
      var n__2593__auto____8689 = size;
      var i__8690 = 0;
      while(true) {
        if(i__8690 < n__2593__auto____8689) {
          a__8684[i__8690] = init_val_or_seq;
          var G__8693 = i__8690 + 1;
          i__8690 = G__8693;
          continue
        }else {
        }
        break
      }
      return a__8684
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8701 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8702 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8703 = 0;
      var s__8704 = s__8702;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8705 = s__8704;
          if(and__3822__auto____8705) {
            return i__8703 < size
          }else {
            return and__3822__auto____8705
          }
        }())) {
          a__8701[i__8703] = cljs.core.first.call(null, s__8704);
          var G__8708 = i__8703 + 1;
          var G__8709 = cljs.core.next.call(null, s__8704);
          i__8703 = G__8708;
          s__8704 = G__8709;
          continue
        }else {
          return a__8701
        }
        break
      }
    }else {
      var n__2593__auto____8706 = size;
      var i__8707 = 0;
      while(true) {
        if(i__8707 < n__2593__auto____8706) {
          a__8701[i__8707] = init_val_or_seq;
          var G__8710 = i__8707 + 1;
          i__8707 = G__8710;
          continue
        }else {
        }
        break
      }
      return a__8701
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8718 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8719 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8720 = 0;
      var s__8721 = s__8719;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8722 = s__8721;
          if(and__3822__auto____8722) {
            return i__8720 < size
          }else {
            return and__3822__auto____8722
          }
        }())) {
          a__8718[i__8720] = cljs.core.first.call(null, s__8721);
          var G__8725 = i__8720 + 1;
          var G__8726 = cljs.core.next.call(null, s__8721);
          i__8720 = G__8725;
          s__8721 = G__8726;
          continue
        }else {
          return a__8718
        }
        break
      }
    }else {
      var n__2593__auto____8723 = size;
      var i__8724 = 0;
      while(true) {
        if(i__8724 < n__2593__auto____8723) {
          a__8718[i__8724] = init_val_or_seq;
          var G__8727 = i__8724 + 1;
          i__8724 = G__8727;
          continue
        }else {
        }
        break
      }
      return a__8718
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8732 = s;
    var i__8733 = n;
    var sum__8734 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8735 = i__8733 > 0;
        if(and__3822__auto____8735) {
          return cljs.core.seq.call(null, s__8732)
        }else {
          return and__3822__auto____8735
        }
      }())) {
        var G__8736 = cljs.core.next.call(null, s__8732);
        var G__8737 = i__8733 - 1;
        var G__8738 = sum__8734 + 1;
        s__8732 = G__8736;
        i__8733 = G__8737;
        sum__8734 = G__8738;
        continue
      }else {
        return sum__8734
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8743 = cljs.core.seq.call(null, x);
      if(s__8743) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8743)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8743), concat.call(null, cljs.core.chunk_rest.call(null, s__8743), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8743), concat.call(null, cljs.core.rest.call(null, s__8743), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8747__delegate = function(x, y, zs) {
      var cat__8746 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8745 = cljs.core.seq.call(null, xys);
          if(xys__8745) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8745)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8745), cat.call(null, cljs.core.chunk_rest.call(null, xys__8745), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8745), cat.call(null, cljs.core.rest.call(null, xys__8745), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8746.call(null, concat.call(null, x, y), zs)
    };
    var G__8747 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8747__delegate.call(this, x, y, zs)
    };
    G__8747.cljs$lang$maxFixedArity = 2;
    G__8747.cljs$lang$applyTo = function(arglist__8748) {
      var x = cljs.core.first(arglist__8748);
      var y = cljs.core.first(cljs.core.next(arglist__8748));
      var zs = cljs.core.rest(cljs.core.next(arglist__8748));
      return G__8747__delegate(x, y, zs)
    };
    G__8747.cljs$lang$arity$variadic = G__8747__delegate;
    return G__8747
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8749__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8749 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8749__delegate.call(this, a, b, c, d, more)
    };
    G__8749.cljs$lang$maxFixedArity = 4;
    G__8749.cljs$lang$applyTo = function(arglist__8750) {
      var a = cljs.core.first(arglist__8750);
      var b = cljs.core.first(cljs.core.next(arglist__8750));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8750)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8750))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8750))));
      return G__8749__delegate(a, b, c, d, more)
    };
    G__8749.cljs$lang$arity$variadic = G__8749__delegate;
    return G__8749
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8792 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8793 = cljs.core._first.call(null, args__8792);
    var args__8794 = cljs.core._rest.call(null, args__8792);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8793)
      }else {
        return f.call(null, a__8793)
      }
    }else {
      var b__8795 = cljs.core._first.call(null, args__8794);
      var args__8796 = cljs.core._rest.call(null, args__8794);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8793, b__8795)
        }else {
          return f.call(null, a__8793, b__8795)
        }
      }else {
        var c__8797 = cljs.core._first.call(null, args__8796);
        var args__8798 = cljs.core._rest.call(null, args__8796);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8793, b__8795, c__8797)
          }else {
            return f.call(null, a__8793, b__8795, c__8797)
          }
        }else {
          var d__8799 = cljs.core._first.call(null, args__8798);
          var args__8800 = cljs.core._rest.call(null, args__8798);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8793, b__8795, c__8797, d__8799)
            }else {
              return f.call(null, a__8793, b__8795, c__8797, d__8799)
            }
          }else {
            var e__8801 = cljs.core._first.call(null, args__8800);
            var args__8802 = cljs.core._rest.call(null, args__8800);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8793, b__8795, c__8797, d__8799, e__8801)
              }else {
                return f.call(null, a__8793, b__8795, c__8797, d__8799, e__8801)
              }
            }else {
              var f__8803 = cljs.core._first.call(null, args__8802);
              var args__8804 = cljs.core._rest.call(null, args__8802);
              if(argc === 6) {
                if(f__8803.cljs$lang$arity$6) {
                  return f__8803.cljs$lang$arity$6(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803)
                }else {
                  return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803)
                }
              }else {
                var g__8805 = cljs.core._first.call(null, args__8804);
                var args__8806 = cljs.core._rest.call(null, args__8804);
                if(argc === 7) {
                  if(f__8803.cljs$lang$arity$7) {
                    return f__8803.cljs$lang$arity$7(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805)
                  }else {
                    return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805)
                  }
                }else {
                  var h__8807 = cljs.core._first.call(null, args__8806);
                  var args__8808 = cljs.core._rest.call(null, args__8806);
                  if(argc === 8) {
                    if(f__8803.cljs$lang$arity$8) {
                      return f__8803.cljs$lang$arity$8(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807)
                    }else {
                      return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807)
                    }
                  }else {
                    var i__8809 = cljs.core._first.call(null, args__8808);
                    var args__8810 = cljs.core._rest.call(null, args__8808);
                    if(argc === 9) {
                      if(f__8803.cljs$lang$arity$9) {
                        return f__8803.cljs$lang$arity$9(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809)
                      }else {
                        return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809)
                      }
                    }else {
                      var j__8811 = cljs.core._first.call(null, args__8810);
                      var args__8812 = cljs.core._rest.call(null, args__8810);
                      if(argc === 10) {
                        if(f__8803.cljs$lang$arity$10) {
                          return f__8803.cljs$lang$arity$10(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811)
                        }else {
                          return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811)
                        }
                      }else {
                        var k__8813 = cljs.core._first.call(null, args__8812);
                        var args__8814 = cljs.core._rest.call(null, args__8812);
                        if(argc === 11) {
                          if(f__8803.cljs$lang$arity$11) {
                            return f__8803.cljs$lang$arity$11(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813)
                          }else {
                            return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813)
                          }
                        }else {
                          var l__8815 = cljs.core._first.call(null, args__8814);
                          var args__8816 = cljs.core._rest.call(null, args__8814);
                          if(argc === 12) {
                            if(f__8803.cljs$lang$arity$12) {
                              return f__8803.cljs$lang$arity$12(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815)
                            }else {
                              return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815)
                            }
                          }else {
                            var m__8817 = cljs.core._first.call(null, args__8816);
                            var args__8818 = cljs.core._rest.call(null, args__8816);
                            if(argc === 13) {
                              if(f__8803.cljs$lang$arity$13) {
                                return f__8803.cljs$lang$arity$13(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817)
                              }else {
                                return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817)
                              }
                            }else {
                              var n__8819 = cljs.core._first.call(null, args__8818);
                              var args__8820 = cljs.core._rest.call(null, args__8818);
                              if(argc === 14) {
                                if(f__8803.cljs$lang$arity$14) {
                                  return f__8803.cljs$lang$arity$14(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819)
                                }else {
                                  return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819)
                                }
                              }else {
                                var o__8821 = cljs.core._first.call(null, args__8820);
                                var args__8822 = cljs.core._rest.call(null, args__8820);
                                if(argc === 15) {
                                  if(f__8803.cljs$lang$arity$15) {
                                    return f__8803.cljs$lang$arity$15(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821)
                                  }else {
                                    return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821)
                                  }
                                }else {
                                  var p__8823 = cljs.core._first.call(null, args__8822);
                                  var args__8824 = cljs.core._rest.call(null, args__8822);
                                  if(argc === 16) {
                                    if(f__8803.cljs$lang$arity$16) {
                                      return f__8803.cljs$lang$arity$16(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823)
                                    }else {
                                      return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823)
                                    }
                                  }else {
                                    var q__8825 = cljs.core._first.call(null, args__8824);
                                    var args__8826 = cljs.core._rest.call(null, args__8824);
                                    if(argc === 17) {
                                      if(f__8803.cljs$lang$arity$17) {
                                        return f__8803.cljs$lang$arity$17(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825)
                                      }else {
                                        return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825)
                                      }
                                    }else {
                                      var r__8827 = cljs.core._first.call(null, args__8826);
                                      var args__8828 = cljs.core._rest.call(null, args__8826);
                                      if(argc === 18) {
                                        if(f__8803.cljs$lang$arity$18) {
                                          return f__8803.cljs$lang$arity$18(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825, r__8827)
                                        }else {
                                          return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825, r__8827)
                                        }
                                      }else {
                                        var s__8829 = cljs.core._first.call(null, args__8828);
                                        var args__8830 = cljs.core._rest.call(null, args__8828);
                                        if(argc === 19) {
                                          if(f__8803.cljs$lang$arity$19) {
                                            return f__8803.cljs$lang$arity$19(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825, r__8827, s__8829)
                                          }else {
                                            return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825, r__8827, s__8829)
                                          }
                                        }else {
                                          var t__8831 = cljs.core._first.call(null, args__8830);
                                          var args__8832 = cljs.core._rest.call(null, args__8830);
                                          if(argc === 20) {
                                            if(f__8803.cljs$lang$arity$20) {
                                              return f__8803.cljs$lang$arity$20(a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825, r__8827, s__8829, t__8831)
                                            }else {
                                              return f__8803.call(null, a__8793, b__8795, c__8797, d__8799, e__8801, f__8803, g__8805, h__8807, i__8809, j__8811, k__8813, l__8815, m__8817, n__8819, o__8821, p__8823, q__8825, r__8827, s__8829, t__8831)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8847 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__8848 = cljs.core.bounded_count.call(null, args, fixed_arity__8847 + 1);
      if(bc__8848 <= fixed_arity__8847) {
        return cljs.core.apply_to.call(null, f, bc__8848, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8849 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8850 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__8851 = cljs.core.bounded_count.call(null, arglist__8849, fixed_arity__8850 + 1);
      if(bc__8851 <= fixed_arity__8850) {
        return cljs.core.apply_to.call(null, f, bc__8851, arglist__8849)
      }else {
        return f.cljs$lang$applyTo(arglist__8849)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8849))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8852 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8853 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__8854 = cljs.core.bounded_count.call(null, arglist__8852, fixed_arity__8853 + 1);
      if(bc__8854 <= fixed_arity__8853) {
        return cljs.core.apply_to.call(null, f, bc__8854, arglist__8852)
      }else {
        return f.cljs$lang$applyTo(arglist__8852)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8852))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8855 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8856 = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc__8857 = cljs.core.bounded_count.call(null, arglist__8855, fixed_arity__8856 + 1);
      if(bc__8857 <= fixed_arity__8856) {
        return cljs.core.apply_to.call(null, f, bc__8857, arglist__8855)
      }else {
        return f.cljs$lang$applyTo(arglist__8855)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8855))
    }
  };
  var apply__6 = function() {
    var G__8861__delegate = function(f, a, b, c, d, args) {
      var arglist__8858 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8859 = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc__8860 = cljs.core.bounded_count.call(null, arglist__8858, fixed_arity__8859 + 1);
        if(bc__8860 <= fixed_arity__8859) {
          return cljs.core.apply_to.call(null, f, bc__8860, arglist__8858)
        }else {
          return f.cljs$lang$applyTo(arglist__8858)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8858))
      }
    };
    var G__8861 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8861__delegate.call(this, f, a, b, c, d, args)
    };
    G__8861.cljs$lang$maxFixedArity = 5;
    G__8861.cljs$lang$applyTo = function(arglist__8862) {
      var f = cljs.core.first(arglist__8862);
      var a = cljs.core.first(cljs.core.next(arglist__8862));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8862)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8862))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8862)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8862)))));
      return G__8861__delegate(f, a, b, c, d, args)
    };
    G__8861.cljs$lang$arity$variadic = G__8861__delegate;
    return G__8861
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8863) {
    var obj = cljs.core.first(arglist__8863);
    var f = cljs.core.first(cljs.core.next(arglist__8863));
    var args = cljs.core.rest(cljs.core.next(arglist__8863));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8864__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8864 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8864__delegate.call(this, x, y, more)
    };
    G__8864.cljs$lang$maxFixedArity = 2;
    G__8864.cljs$lang$applyTo = function(arglist__8865) {
      var x = cljs.core.first(arglist__8865);
      var y = cljs.core.first(cljs.core.next(arglist__8865));
      var more = cljs.core.rest(cljs.core.next(arglist__8865));
      return G__8864__delegate(x, y, more)
    };
    G__8864.cljs$lang$arity$variadic = G__8864__delegate;
    return G__8864
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8866 = pred;
        var G__8867 = cljs.core.next.call(null, coll);
        pred = G__8866;
        coll = G__8867;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8869 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8869)) {
        return or__3824__auto____8869
      }else {
        var G__8870 = pred;
        var G__8871 = cljs.core.next.call(null, coll);
        pred = G__8870;
        coll = G__8871;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8872 = null;
    var G__8872__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8872__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8872__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8872__3 = function() {
      var G__8873__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8873 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8873__delegate.call(this, x, y, zs)
      };
      G__8873.cljs$lang$maxFixedArity = 2;
      G__8873.cljs$lang$applyTo = function(arglist__8874) {
        var x = cljs.core.first(arglist__8874);
        var y = cljs.core.first(cljs.core.next(arglist__8874));
        var zs = cljs.core.rest(cljs.core.next(arglist__8874));
        return G__8873__delegate(x, y, zs)
      };
      G__8873.cljs$lang$arity$variadic = G__8873__delegate;
      return G__8873
    }();
    G__8872 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8872__0.call(this);
        case 1:
          return G__8872__1.call(this, x);
        case 2:
          return G__8872__2.call(this, x, y);
        default:
          return G__8872__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8872.cljs$lang$maxFixedArity = 2;
    G__8872.cljs$lang$applyTo = G__8872__3.cljs$lang$applyTo;
    return G__8872
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8875__delegate = function(args) {
      return x
    };
    var G__8875 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8875__delegate.call(this, args)
    };
    G__8875.cljs$lang$maxFixedArity = 0;
    G__8875.cljs$lang$applyTo = function(arglist__8876) {
      var args = cljs.core.seq(arglist__8876);
      return G__8875__delegate(args)
    };
    G__8875.cljs$lang$arity$variadic = G__8875__delegate;
    return G__8875
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8883 = null;
      var G__8883__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8883__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8883__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8883__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8883__4 = function() {
        var G__8884__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8884 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8884__delegate.call(this, x, y, z, args)
        };
        G__8884.cljs$lang$maxFixedArity = 3;
        G__8884.cljs$lang$applyTo = function(arglist__8885) {
          var x = cljs.core.first(arglist__8885);
          var y = cljs.core.first(cljs.core.next(arglist__8885));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8885)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8885)));
          return G__8884__delegate(x, y, z, args)
        };
        G__8884.cljs$lang$arity$variadic = G__8884__delegate;
        return G__8884
      }();
      G__8883 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8883__0.call(this);
          case 1:
            return G__8883__1.call(this, x);
          case 2:
            return G__8883__2.call(this, x, y);
          case 3:
            return G__8883__3.call(this, x, y, z);
          default:
            return G__8883__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8883.cljs$lang$maxFixedArity = 3;
      G__8883.cljs$lang$applyTo = G__8883__4.cljs$lang$applyTo;
      return G__8883
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8886 = null;
      var G__8886__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8886__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8886__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8886__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8886__4 = function() {
        var G__8887__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8887 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8887__delegate.call(this, x, y, z, args)
        };
        G__8887.cljs$lang$maxFixedArity = 3;
        G__8887.cljs$lang$applyTo = function(arglist__8888) {
          var x = cljs.core.first(arglist__8888);
          var y = cljs.core.first(cljs.core.next(arglist__8888));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8888)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8888)));
          return G__8887__delegate(x, y, z, args)
        };
        G__8887.cljs$lang$arity$variadic = G__8887__delegate;
        return G__8887
      }();
      G__8886 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8886__0.call(this);
          case 1:
            return G__8886__1.call(this, x);
          case 2:
            return G__8886__2.call(this, x, y);
          case 3:
            return G__8886__3.call(this, x, y, z);
          default:
            return G__8886__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8886.cljs$lang$maxFixedArity = 3;
      G__8886.cljs$lang$applyTo = G__8886__4.cljs$lang$applyTo;
      return G__8886
    }()
  };
  var comp__4 = function() {
    var G__8889__delegate = function(f1, f2, f3, fs) {
      var fs__8880 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8890__delegate = function(args) {
          var ret__8881 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8880), args);
          var fs__8882 = cljs.core.next.call(null, fs__8880);
          while(true) {
            if(fs__8882) {
              var G__8891 = cljs.core.first.call(null, fs__8882).call(null, ret__8881);
              var G__8892 = cljs.core.next.call(null, fs__8882);
              ret__8881 = G__8891;
              fs__8882 = G__8892;
              continue
            }else {
              return ret__8881
            }
            break
          }
        };
        var G__8890 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8890__delegate.call(this, args)
        };
        G__8890.cljs$lang$maxFixedArity = 0;
        G__8890.cljs$lang$applyTo = function(arglist__8893) {
          var args = cljs.core.seq(arglist__8893);
          return G__8890__delegate(args)
        };
        G__8890.cljs$lang$arity$variadic = G__8890__delegate;
        return G__8890
      }()
    };
    var G__8889 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8889__delegate.call(this, f1, f2, f3, fs)
    };
    G__8889.cljs$lang$maxFixedArity = 3;
    G__8889.cljs$lang$applyTo = function(arglist__8894) {
      var f1 = cljs.core.first(arglist__8894);
      var f2 = cljs.core.first(cljs.core.next(arglist__8894));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8894)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8894)));
      return G__8889__delegate(f1, f2, f3, fs)
    };
    G__8889.cljs$lang$arity$variadic = G__8889__delegate;
    return G__8889
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8895__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8895 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8895__delegate.call(this, args)
      };
      G__8895.cljs$lang$maxFixedArity = 0;
      G__8895.cljs$lang$applyTo = function(arglist__8896) {
        var args = cljs.core.seq(arglist__8896);
        return G__8895__delegate(args)
      };
      G__8895.cljs$lang$arity$variadic = G__8895__delegate;
      return G__8895
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8897__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8897 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8897__delegate.call(this, args)
      };
      G__8897.cljs$lang$maxFixedArity = 0;
      G__8897.cljs$lang$applyTo = function(arglist__8898) {
        var args = cljs.core.seq(arglist__8898);
        return G__8897__delegate(args)
      };
      G__8897.cljs$lang$arity$variadic = G__8897__delegate;
      return G__8897
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8899__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8899 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8899__delegate.call(this, args)
      };
      G__8899.cljs$lang$maxFixedArity = 0;
      G__8899.cljs$lang$applyTo = function(arglist__8900) {
        var args = cljs.core.seq(arglist__8900);
        return G__8899__delegate(args)
      };
      G__8899.cljs$lang$arity$variadic = G__8899__delegate;
      return G__8899
    }()
  };
  var partial__5 = function() {
    var G__8901__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8902__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8902 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8902__delegate.call(this, args)
        };
        G__8902.cljs$lang$maxFixedArity = 0;
        G__8902.cljs$lang$applyTo = function(arglist__8903) {
          var args = cljs.core.seq(arglist__8903);
          return G__8902__delegate(args)
        };
        G__8902.cljs$lang$arity$variadic = G__8902__delegate;
        return G__8902
      }()
    };
    var G__8901 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8901__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8901.cljs$lang$maxFixedArity = 4;
    G__8901.cljs$lang$applyTo = function(arglist__8904) {
      var f = cljs.core.first(arglist__8904);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8904));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8904)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8904))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8904))));
      return G__8901__delegate(f, arg1, arg2, arg3, more)
    };
    G__8901.cljs$lang$arity$variadic = G__8901__delegate;
    return G__8901
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8905 = null;
      var G__8905__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8905__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8905__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8905__4 = function() {
        var G__8906__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8906 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8906__delegate.call(this, a, b, c, ds)
        };
        G__8906.cljs$lang$maxFixedArity = 3;
        G__8906.cljs$lang$applyTo = function(arglist__8907) {
          var a = cljs.core.first(arglist__8907);
          var b = cljs.core.first(cljs.core.next(arglist__8907));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8907)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8907)));
          return G__8906__delegate(a, b, c, ds)
        };
        G__8906.cljs$lang$arity$variadic = G__8906__delegate;
        return G__8906
      }();
      G__8905 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8905__1.call(this, a);
          case 2:
            return G__8905__2.call(this, a, b);
          case 3:
            return G__8905__3.call(this, a, b, c);
          default:
            return G__8905__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8905.cljs$lang$maxFixedArity = 3;
      G__8905.cljs$lang$applyTo = G__8905__4.cljs$lang$applyTo;
      return G__8905
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8908 = null;
      var G__8908__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8908__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8908__4 = function() {
        var G__8909__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8909 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8909__delegate.call(this, a, b, c, ds)
        };
        G__8909.cljs$lang$maxFixedArity = 3;
        G__8909.cljs$lang$applyTo = function(arglist__8910) {
          var a = cljs.core.first(arglist__8910);
          var b = cljs.core.first(cljs.core.next(arglist__8910));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8910)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8910)));
          return G__8909__delegate(a, b, c, ds)
        };
        G__8909.cljs$lang$arity$variadic = G__8909__delegate;
        return G__8909
      }();
      G__8908 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8908__2.call(this, a, b);
          case 3:
            return G__8908__3.call(this, a, b, c);
          default:
            return G__8908__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8908.cljs$lang$maxFixedArity = 3;
      G__8908.cljs$lang$applyTo = G__8908__4.cljs$lang$applyTo;
      return G__8908
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8911 = null;
      var G__8911__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8911__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8911__4 = function() {
        var G__8912__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8912 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8912__delegate.call(this, a, b, c, ds)
        };
        G__8912.cljs$lang$maxFixedArity = 3;
        G__8912.cljs$lang$applyTo = function(arglist__8913) {
          var a = cljs.core.first(arglist__8913);
          var b = cljs.core.first(cljs.core.next(arglist__8913));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8913)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8913)));
          return G__8912__delegate(a, b, c, ds)
        };
        G__8912.cljs$lang$arity$variadic = G__8912__delegate;
        return G__8912
      }();
      G__8911 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8911__2.call(this, a, b);
          case 3:
            return G__8911__3.call(this, a, b, c);
          default:
            return G__8911__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8911.cljs$lang$maxFixedArity = 3;
      G__8911.cljs$lang$applyTo = G__8911__4.cljs$lang$applyTo;
      return G__8911
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8929 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8937 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8937) {
        var s__8938 = temp__3974__auto____8937;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8938)) {
          var c__8939 = cljs.core.chunk_first.call(null, s__8938);
          var size__8940 = cljs.core.count.call(null, c__8939);
          var b__8941 = cljs.core.chunk_buffer.call(null, size__8940);
          var n__2593__auto____8942 = size__8940;
          var i__8943 = 0;
          while(true) {
            if(i__8943 < n__2593__auto____8942) {
              cljs.core.chunk_append.call(null, b__8941, f.call(null, idx + i__8943, cljs.core._nth.call(null, c__8939, i__8943)));
              var G__8944 = i__8943 + 1;
              i__8943 = G__8944;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8941), mapi.call(null, idx + size__8940, cljs.core.chunk_rest.call(null, s__8938)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8938)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8938)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8929.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8954 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8954) {
      var s__8955 = temp__3974__auto____8954;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8955)) {
        var c__8956 = cljs.core.chunk_first.call(null, s__8955);
        var size__8957 = cljs.core.count.call(null, c__8956);
        var b__8958 = cljs.core.chunk_buffer.call(null, size__8957);
        var n__2593__auto____8959 = size__8957;
        var i__8960 = 0;
        while(true) {
          if(i__8960 < n__2593__auto____8959) {
            var x__8961 = f.call(null, cljs.core._nth.call(null, c__8956, i__8960));
            if(x__8961 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8958, x__8961)
            }
            var G__8963 = i__8960 + 1;
            i__8960 = G__8963;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8958), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8955)))
      }else {
        var x__8962 = f.call(null, cljs.core.first.call(null, s__8955));
        if(x__8962 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8955))
        }else {
          return cljs.core.cons.call(null, x__8962, keep.call(null, f, cljs.core.rest.call(null, s__8955)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8989 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8999 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8999) {
        var s__9000 = temp__3974__auto____8999;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9000)) {
          var c__9001 = cljs.core.chunk_first.call(null, s__9000);
          var size__9002 = cljs.core.count.call(null, c__9001);
          var b__9003 = cljs.core.chunk_buffer.call(null, size__9002);
          var n__2593__auto____9004 = size__9002;
          var i__9005 = 0;
          while(true) {
            if(i__9005 < n__2593__auto____9004) {
              var x__9006 = f.call(null, idx + i__9005, cljs.core._nth.call(null, c__9001, i__9005));
              if(x__9006 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9003, x__9006)
              }
              var G__9008 = i__9005 + 1;
              i__9005 = G__9008;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9003), keepi.call(null, idx + size__9002, cljs.core.chunk_rest.call(null, s__9000)))
        }else {
          var x__9007 = f.call(null, idx, cljs.core.first.call(null, s__9000));
          if(x__9007 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9000))
          }else {
            return cljs.core.cons.call(null, x__9007, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9000)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8989.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9094 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9094)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9094
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9095 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9095)) {
            var and__3822__auto____9096 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9096)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9096
            }
          }else {
            return and__3822__auto____9095
          }
        }())
      };
      var ep1__4 = function() {
        var G__9165__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9097 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9097)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9097
            }
          }())
        };
        var G__9165 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9165__delegate.call(this, x, y, z, args)
        };
        G__9165.cljs$lang$maxFixedArity = 3;
        G__9165.cljs$lang$applyTo = function(arglist__9166) {
          var x = cljs.core.first(arglist__9166);
          var y = cljs.core.first(cljs.core.next(arglist__9166));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9166)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9166)));
          return G__9165__delegate(x, y, z, args)
        };
        G__9165.cljs$lang$arity$variadic = G__9165__delegate;
        return G__9165
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9109 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9109)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9109
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9110 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9110)) {
            var and__3822__auto____9111 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9111)) {
              var and__3822__auto____9112 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9112)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9112
              }
            }else {
              return and__3822__auto____9111
            }
          }else {
            return and__3822__auto____9110
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9113 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9113)) {
            var and__3822__auto____9114 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9114)) {
              var and__3822__auto____9115 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9115)) {
                var and__3822__auto____9116 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9116)) {
                  var and__3822__auto____9117 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9117)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9117
                  }
                }else {
                  return and__3822__auto____9116
                }
              }else {
                return and__3822__auto____9115
              }
            }else {
              return and__3822__auto____9114
            }
          }else {
            return and__3822__auto____9113
          }
        }())
      };
      var ep2__4 = function() {
        var G__9167__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9118 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9118)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8964_SHARP_) {
                var and__3822__auto____9119 = p1.call(null, p1__8964_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9119)) {
                  return p2.call(null, p1__8964_SHARP_)
                }else {
                  return and__3822__auto____9119
                }
              }, args)
            }else {
              return and__3822__auto____9118
            }
          }())
        };
        var G__9167 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9167__delegate.call(this, x, y, z, args)
        };
        G__9167.cljs$lang$maxFixedArity = 3;
        G__9167.cljs$lang$applyTo = function(arglist__9168) {
          var x = cljs.core.first(arglist__9168);
          var y = cljs.core.first(cljs.core.next(arglist__9168));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9168)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9168)));
          return G__9167__delegate(x, y, z, args)
        };
        G__9167.cljs$lang$arity$variadic = G__9167__delegate;
        return G__9167
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9138 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9138)) {
            var and__3822__auto____9139 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9139)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9139
            }
          }else {
            return and__3822__auto____9138
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9140 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9140)) {
            var and__3822__auto____9141 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9141)) {
              var and__3822__auto____9142 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9142)) {
                var and__3822__auto____9143 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9143)) {
                  var and__3822__auto____9144 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9144)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9144
                  }
                }else {
                  return and__3822__auto____9143
                }
              }else {
                return and__3822__auto____9142
              }
            }else {
              return and__3822__auto____9141
            }
          }else {
            return and__3822__auto____9140
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9145 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9145)) {
            var and__3822__auto____9146 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9146)) {
              var and__3822__auto____9147 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9147)) {
                var and__3822__auto____9148 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9148)) {
                  var and__3822__auto____9149 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9149)) {
                    var and__3822__auto____9150 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9150)) {
                      var and__3822__auto____9151 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9151)) {
                        var and__3822__auto____9152 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9152)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9152
                        }
                      }else {
                        return and__3822__auto____9151
                      }
                    }else {
                      return and__3822__auto____9150
                    }
                  }else {
                    return and__3822__auto____9149
                  }
                }else {
                  return and__3822__auto____9148
                }
              }else {
                return and__3822__auto____9147
              }
            }else {
              return and__3822__auto____9146
            }
          }else {
            return and__3822__auto____9145
          }
        }())
      };
      var ep3__4 = function() {
        var G__9169__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9153 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9153)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8965_SHARP_) {
                var and__3822__auto____9154 = p1.call(null, p1__8965_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9154)) {
                  var and__3822__auto____9155 = p2.call(null, p1__8965_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9155)) {
                    return p3.call(null, p1__8965_SHARP_)
                  }else {
                    return and__3822__auto____9155
                  }
                }else {
                  return and__3822__auto____9154
                }
              }, args)
            }else {
              return and__3822__auto____9153
            }
          }())
        };
        var G__9169 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9169__delegate.call(this, x, y, z, args)
        };
        G__9169.cljs$lang$maxFixedArity = 3;
        G__9169.cljs$lang$applyTo = function(arglist__9170) {
          var x = cljs.core.first(arglist__9170);
          var y = cljs.core.first(cljs.core.next(arglist__9170));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9170)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9170)));
          return G__9169__delegate(x, y, z, args)
        };
        G__9169.cljs$lang$arity$variadic = G__9169__delegate;
        return G__9169
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9171__delegate = function(p1, p2, p3, ps) {
      var ps__9156 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8966_SHARP_) {
            return p1__8966_SHARP_.call(null, x)
          }, ps__9156)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8967_SHARP_) {
            var and__3822__auto____9161 = p1__8967_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9161)) {
              return p1__8967_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9161
            }
          }, ps__9156)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8968_SHARP_) {
            var and__3822__auto____9162 = p1__8968_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9162)) {
              var and__3822__auto____9163 = p1__8968_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9163)) {
                return p1__8968_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9163
              }
            }else {
              return and__3822__auto____9162
            }
          }, ps__9156)
        };
        var epn__4 = function() {
          var G__9172__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9164 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9164)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8969_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8969_SHARP_, args)
                }, ps__9156)
              }else {
                return and__3822__auto____9164
              }
            }())
          };
          var G__9172 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9172__delegate.call(this, x, y, z, args)
          };
          G__9172.cljs$lang$maxFixedArity = 3;
          G__9172.cljs$lang$applyTo = function(arglist__9173) {
            var x = cljs.core.first(arglist__9173);
            var y = cljs.core.first(cljs.core.next(arglist__9173));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9173)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9173)));
            return G__9172__delegate(x, y, z, args)
          };
          G__9172.cljs$lang$arity$variadic = G__9172__delegate;
          return G__9172
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9171 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9171__delegate.call(this, p1, p2, p3, ps)
    };
    G__9171.cljs$lang$maxFixedArity = 3;
    G__9171.cljs$lang$applyTo = function(arglist__9174) {
      var p1 = cljs.core.first(arglist__9174);
      var p2 = cljs.core.first(cljs.core.next(arglist__9174));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9174)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9174)));
      return G__9171__delegate(p1, p2, p3, ps)
    };
    G__9171.cljs$lang$arity$variadic = G__9171__delegate;
    return G__9171
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9255 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9255)) {
          return or__3824__auto____9255
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9256 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9256)) {
          return or__3824__auto____9256
        }else {
          var or__3824__auto____9257 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9257)) {
            return or__3824__auto____9257
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9326__delegate = function(x, y, z, args) {
          var or__3824__auto____9258 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9258)) {
            return or__3824__auto____9258
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9326 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9326__delegate.call(this, x, y, z, args)
        };
        G__9326.cljs$lang$maxFixedArity = 3;
        G__9326.cljs$lang$applyTo = function(arglist__9327) {
          var x = cljs.core.first(arglist__9327);
          var y = cljs.core.first(cljs.core.next(arglist__9327));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9327)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9327)));
          return G__9326__delegate(x, y, z, args)
        };
        G__9326.cljs$lang$arity$variadic = G__9326__delegate;
        return G__9326
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9270 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9270)) {
          return or__3824__auto____9270
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9271 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9271)) {
          return or__3824__auto____9271
        }else {
          var or__3824__auto____9272 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9272)) {
            return or__3824__auto____9272
          }else {
            var or__3824__auto____9273 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9273)) {
              return or__3824__auto____9273
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9274 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9274)) {
          return or__3824__auto____9274
        }else {
          var or__3824__auto____9275 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9275)) {
            return or__3824__auto____9275
          }else {
            var or__3824__auto____9276 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9276)) {
              return or__3824__auto____9276
            }else {
              var or__3824__auto____9277 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9277)) {
                return or__3824__auto____9277
              }else {
                var or__3824__auto____9278 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9278)) {
                  return or__3824__auto____9278
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9328__delegate = function(x, y, z, args) {
          var or__3824__auto____9279 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9279)) {
            return or__3824__auto____9279
          }else {
            return cljs.core.some.call(null, function(p1__9009_SHARP_) {
              var or__3824__auto____9280 = p1.call(null, p1__9009_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9280)) {
                return or__3824__auto____9280
              }else {
                return p2.call(null, p1__9009_SHARP_)
              }
            }, args)
          }
        };
        var G__9328 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9328__delegate.call(this, x, y, z, args)
        };
        G__9328.cljs$lang$maxFixedArity = 3;
        G__9328.cljs$lang$applyTo = function(arglist__9329) {
          var x = cljs.core.first(arglist__9329);
          var y = cljs.core.first(cljs.core.next(arglist__9329));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9329)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9329)));
          return G__9328__delegate(x, y, z, args)
        };
        G__9328.cljs$lang$arity$variadic = G__9328__delegate;
        return G__9328
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9299 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9299)) {
          return or__3824__auto____9299
        }else {
          var or__3824__auto____9300 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9300)) {
            return or__3824__auto____9300
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9301 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9301)) {
          return or__3824__auto____9301
        }else {
          var or__3824__auto____9302 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9302)) {
            return or__3824__auto____9302
          }else {
            var or__3824__auto____9303 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9303)) {
              return or__3824__auto____9303
            }else {
              var or__3824__auto____9304 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9304)) {
                return or__3824__auto____9304
              }else {
                var or__3824__auto____9305 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9305)) {
                  return or__3824__auto____9305
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9306 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9306)) {
          return or__3824__auto____9306
        }else {
          var or__3824__auto____9307 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9307)) {
            return or__3824__auto____9307
          }else {
            var or__3824__auto____9308 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9308)) {
              return or__3824__auto____9308
            }else {
              var or__3824__auto____9309 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9309)) {
                return or__3824__auto____9309
              }else {
                var or__3824__auto____9310 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9310)) {
                  return or__3824__auto____9310
                }else {
                  var or__3824__auto____9311 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9311)) {
                    return or__3824__auto____9311
                  }else {
                    var or__3824__auto____9312 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9312)) {
                      return or__3824__auto____9312
                    }else {
                      var or__3824__auto____9313 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9313)) {
                        return or__3824__auto____9313
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9330__delegate = function(x, y, z, args) {
          var or__3824__auto____9314 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9314)) {
            return or__3824__auto____9314
          }else {
            return cljs.core.some.call(null, function(p1__9010_SHARP_) {
              var or__3824__auto____9315 = p1.call(null, p1__9010_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9315)) {
                return or__3824__auto____9315
              }else {
                var or__3824__auto____9316 = p2.call(null, p1__9010_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9316)) {
                  return or__3824__auto____9316
                }else {
                  return p3.call(null, p1__9010_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9330 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9330__delegate.call(this, x, y, z, args)
        };
        G__9330.cljs$lang$maxFixedArity = 3;
        G__9330.cljs$lang$applyTo = function(arglist__9331) {
          var x = cljs.core.first(arglist__9331);
          var y = cljs.core.first(cljs.core.next(arglist__9331));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9331)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9331)));
          return G__9330__delegate(x, y, z, args)
        };
        G__9330.cljs$lang$arity$variadic = G__9330__delegate;
        return G__9330
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9332__delegate = function(p1, p2, p3, ps) {
      var ps__9317 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9011_SHARP_) {
            return p1__9011_SHARP_.call(null, x)
          }, ps__9317)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9012_SHARP_) {
            var or__3824__auto____9322 = p1__9012_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9322)) {
              return or__3824__auto____9322
            }else {
              return p1__9012_SHARP_.call(null, y)
            }
          }, ps__9317)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9013_SHARP_) {
            var or__3824__auto____9323 = p1__9013_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9323)) {
              return or__3824__auto____9323
            }else {
              var or__3824__auto____9324 = p1__9013_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9324)) {
                return or__3824__auto____9324
              }else {
                return p1__9013_SHARP_.call(null, z)
              }
            }
          }, ps__9317)
        };
        var spn__4 = function() {
          var G__9333__delegate = function(x, y, z, args) {
            var or__3824__auto____9325 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9325)) {
              return or__3824__auto____9325
            }else {
              return cljs.core.some.call(null, function(p1__9014_SHARP_) {
                return cljs.core.some.call(null, p1__9014_SHARP_, args)
              }, ps__9317)
            }
          };
          var G__9333 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9333__delegate.call(this, x, y, z, args)
          };
          G__9333.cljs$lang$maxFixedArity = 3;
          G__9333.cljs$lang$applyTo = function(arglist__9334) {
            var x = cljs.core.first(arglist__9334);
            var y = cljs.core.first(cljs.core.next(arglist__9334));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9334)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9334)));
            return G__9333__delegate(x, y, z, args)
          };
          G__9333.cljs$lang$arity$variadic = G__9333__delegate;
          return G__9333
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9332 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9332__delegate.call(this, p1, p2, p3, ps)
    };
    G__9332.cljs$lang$maxFixedArity = 3;
    G__9332.cljs$lang$applyTo = function(arglist__9335) {
      var p1 = cljs.core.first(arglist__9335);
      var p2 = cljs.core.first(cljs.core.next(arglist__9335));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9335)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9335)));
      return G__9332__delegate(p1, p2, p3, ps)
    };
    G__9332.cljs$lang$arity$variadic = G__9332__delegate;
    return G__9332
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9354 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9354) {
        var s__9355 = temp__3974__auto____9354;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9355)) {
          var c__9356 = cljs.core.chunk_first.call(null, s__9355);
          var size__9357 = cljs.core.count.call(null, c__9356);
          var b__9358 = cljs.core.chunk_buffer.call(null, size__9357);
          var n__2593__auto____9359 = size__9357;
          var i__9360 = 0;
          while(true) {
            if(i__9360 < n__2593__auto____9359) {
              cljs.core.chunk_append.call(null, b__9358, f.call(null, cljs.core._nth.call(null, c__9356, i__9360)));
              var G__9372 = i__9360 + 1;
              i__9360 = G__9372;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9358), map.call(null, f, cljs.core.chunk_rest.call(null, s__9355)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9355)), map.call(null, f, cljs.core.rest.call(null, s__9355)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9361 = cljs.core.seq.call(null, c1);
      var s2__9362 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9363 = s1__9361;
        if(and__3822__auto____9363) {
          return s2__9362
        }else {
          return and__3822__auto____9363
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9361), cljs.core.first.call(null, s2__9362)), map.call(null, f, cljs.core.rest.call(null, s1__9361), cljs.core.rest.call(null, s2__9362)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9364 = cljs.core.seq.call(null, c1);
      var s2__9365 = cljs.core.seq.call(null, c2);
      var s3__9366 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9367 = s1__9364;
        if(and__3822__auto____9367) {
          var and__3822__auto____9368 = s2__9365;
          if(and__3822__auto____9368) {
            return s3__9366
          }else {
            return and__3822__auto____9368
          }
        }else {
          return and__3822__auto____9367
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9364), cljs.core.first.call(null, s2__9365), cljs.core.first.call(null, s3__9366)), map.call(null, f, cljs.core.rest.call(null, s1__9364), cljs.core.rest.call(null, s2__9365), cljs.core.rest.call(null, s3__9366)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9373__delegate = function(f, c1, c2, c3, colls) {
      var step__9371 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9370 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9370)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9370), step.call(null, map.call(null, cljs.core.rest, ss__9370)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9175_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9175_SHARP_)
      }, step__9371.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9373 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9373__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9373.cljs$lang$maxFixedArity = 4;
    G__9373.cljs$lang$applyTo = function(arglist__9374) {
      var f = cljs.core.first(arglist__9374);
      var c1 = cljs.core.first(cljs.core.next(arglist__9374));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9374)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9374))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9374))));
      return G__9373__delegate(f, c1, c2, c3, colls)
    };
    G__9373.cljs$lang$arity$variadic = G__9373__delegate;
    return G__9373
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9377 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9377) {
        var s__9378 = temp__3974__auto____9377;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9378), take.call(null, n - 1, cljs.core.rest.call(null, s__9378)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9384 = function(n, coll) {
    while(true) {
      var s__9382 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9383 = n > 0;
        if(and__3822__auto____9383) {
          return s__9382
        }else {
          return and__3822__auto____9383
        }
      }())) {
        var G__9385 = n - 1;
        var G__9386 = cljs.core.rest.call(null, s__9382);
        n = G__9385;
        coll = G__9386;
        continue
      }else {
        return s__9382
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9384.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9389 = cljs.core.seq.call(null, coll);
  var lead__9390 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9390) {
      var G__9391 = cljs.core.next.call(null, s__9389);
      var G__9392 = cljs.core.next.call(null, lead__9390);
      s__9389 = G__9391;
      lead__9390 = G__9392;
      continue
    }else {
      return s__9389
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9398 = function(pred, coll) {
    while(true) {
      var s__9396 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9397 = s__9396;
        if(and__3822__auto____9397) {
          return pred.call(null, cljs.core.first.call(null, s__9396))
        }else {
          return and__3822__auto____9397
        }
      }())) {
        var G__9399 = pred;
        var G__9400 = cljs.core.rest.call(null, s__9396);
        pred = G__9399;
        coll = G__9400;
        continue
      }else {
        return s__9396
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9398.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9403 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9403) {
      var s__9404 = temp__3974__auto____9403;
      return cljs.core.concat.call(null, s__9404, cycle.call(null, s__9404))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9409 = cljs.core.seq.call(null, c1);
      var s2__9410 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9411 = s1__9409;
        if(and__3822__auto____9411) {
          return s2__9410
        }else {
          return and__3822__auto____9411
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9409), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9410), interleave.call(null, cljs.core.rest.call(null, s1__9409), cljs.core.rest.call(null, s2__9410))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9413__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9412 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9412)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9412), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9412)))
        }else {
          return null
        }
      }, null)
    };
    var G__9413 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9413__delegate.call(this, c1, c2, colls)
    };
    G__9413.cljs$lang$maxFixedArity = 2;
    G__9413.cljs$lang$applyTo = function(arglist__9414) {
      var c1 = cljs.core.first(arglist__9414);
      var c2 = cljs.core.first(cljs.core.next(arglist__9414));
      var colls = cljs.core.rest(cljs.core.next(arglist__9414));
      return G__9413__delegate(c1, c2, colls)
    };
    G__9413.cljs$lang$arity$variadic = G__9413__delegate;
    return G__9413
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9424 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9422 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9422) {
        var coll__9423 = temp__3971__auto____9422;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9423), cat.call(null, cljs.core.rest.call(null, coll__9423), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9424.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9425__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9425 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9425__delegate.call(this, f, coll, colls)
    };
    G__9425.cljs$lang$maxFixedArity = 2;
    G__9425.cljs$lang$applyTo = function(arglist__9426) {
      var f = cljs.core.first(arglist__9426);
      var coll = cljs.core.first(cljs.core.next(arglist__9426));
      var colls = cljs.core.rest(cljs.core.next(arglist__9426));
      return G__9425__delegate(f, coll, colls)
    };
    G__9425.cljs$lang$arity$variadic = G__9425__delegate;
    return G__9425
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9436 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9436) {
      var s__9437 = temp__3974__auto____9436;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9437)) {
        var c__9438 = cljs.core.chunk_first.call(null, s__9437);
        var size__9439 = cljs.core.count.call(null, c__9438);
        var b__9440 = cljs.core.chunk_buffer.call(null, size__9439);
        var n__2593__auto____9441 = size__9439;
        var i__9442 = 0;
        while(true) {
          if(i__9442 < n__2593__auto____9441) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9438, i__9442)))) {
              cljs.core.chunk_append.call(null, b__9440, cljs.core._nth.call(null, c__9438, i__9442))
            }else {
            }
            var G__9445 = i__9442 + 1;
            i__9442 = G__9445;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9440), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9437)))
      }else {
        var f__9443 = cljs.core.first.call(null, s__9437);
        var r__9444 = cljs.core.rest.call(null, s__9437);
        if(cljs.core.truth_(pred.call(null, f__9443))) {
          return cljs.core.cons.call(null, f__9443, filter.call(null, pred, r__9444))
        }else {
          return filter.call(null, pred, r__9444)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9448 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9448.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9446_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9446_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9452__9453 = to;
    if(G__9452__9453) {
      if(function() {
        var or__3824__auto____9454 = G__9452__9453.cljs$lang$protocol_mask$partition1$ & 4;
        if(or__3824__auto____9454) {
          return or__3824__auto____9454
        }else {
          return G__9452__9453.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9452__9453.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9452__9453)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9452__9453)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9455__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9455 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9455__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9455.cljs$lang$maxFixedArity = 4;
    G__9455.cljs$lang$applyTo = function(arglist__9456) {
      var f = cljs.core.first(arglist__9456);
      var c1 = cljs.core.first(cljs.core.next(arglist__9456));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9456)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9456))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9456))));
      return G__9455__delegate(f, c1, c2, c3, colls)
    };
    G__9455.cljs$lang$arity$variadic = G__9455__delegate;
    return G__9455
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9463 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9463) {
        var s__9464 = temp__3974__auto____9463;
        var p__9465 = cljs.core.take.call(null, n, s__9464);
        if(n === cljs.core.count.call(null, p__9465)) {
          return cljs.core.cons.call(null, p__9465, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9464)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9466 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9466) {
        var s__9467 = temp__3974__auto____9466;
        var p__9468 = cljs.core.take.call(null, n, s__9467);
        if(n === cljs.core.count.call(null, p__9468)) {
          return cljs.core.cons.call(null, p__9468, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9467)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9468, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9473 = cljs.core.lookup_sentinel;
    var m__9474 = m;
    var ks__9475 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9475) {
        var m__9476 = cljs.core._lookup.call(null, m__9474, cljs.core.first.call(null, ks__9475), sentinel__9473);
        if(sentinel__9473 === m__9476) {
          return not_found
        }else {
          var G__9477 = sentinel__9473;
          var G__9478 = m__9476;
          var G__9479 = cljs.core.next.call(null, ks__9475);
          sentinel__9473 = G__9477;
          m__9474 = G__9478;
          ks__9475 = G__9479;
          continue
        }
      }else {
        return m__9474
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9480, v) {
  var vec__9485__9486 = p__9480;
  var k__9487 = cljs.core.nth.call(null, vec__9485__9486, 0, null);
  var ks__9488 = cljs.core.nthnext.call(null, vec__9485__9486, 1);
  if(cljs.core.truth_(ks__9488)) {
    return cljs.core.assoc.call(null, m, k__9487, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9487, null), ks__9488, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9487, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9489, f, args) {
    var vec__9494__9495 = p__9489;
    var k__9496 = cljs.core.nth.call(null, vec__9494__9495, 0, null);
    var ks__9497 = cljs.core.nthnext.call(null, vec__9494__9495, 1);
    if(cljs.core.truth_(ks__9497)) {
      return cljs.core.assoc.call(null, m, k__9496, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9496, null), ks__9497, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9496, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9496, null), args))
    }
  };
  var update_in = function(m, p__9489, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9489, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9498) {
    var m = cljs.core.first(arglist__9498);
    var p__9489 = cljs.core.first(cljs.core.next(arglist__9498));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9498)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9498)));
    return update_in__delegate(m, p__9489, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
goog.provide("cljs.core.Vector");
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9501 = this;
  var h__2247__auto____9502 = this__9501.__hash;
  if(!(h__2247__auto____9502 == null)) {
    return h__2247__auto____9502
  }else {
    var h__2247__auto____9503 = cljs.core.hash_coll.call(null, coll);
    this__9501.__hash = h__2247__auto____9503;
    return h__2247__auto____9503
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9504 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9505 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9506 = this;
  var new_array__9507 = this__9506.array.slice();
  new_array__9507[k] = v;
  return new cljs.core.Vector(this__9506.meta, new_array__9507, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9538 = null;
  var G__9538__2 = function(this_sym9508, k) {
    var this__9510 = this;
    var this_sym9508__9511 = this;
    var coll__9512 = this_sym9508__9511;
    return coll__9512.cljs$core$ILookup$_lookup$arity$2(coll__9512, k)
  };
  var G__9538__3 = function(this_sym9509, k, not_found) {
    var this__9510 = this;
    var this_sym9509__9513 = this;
    var coll__9514 = this_sym9509__9513;
    return coll__9514.cljs$core$ILookup$_lookup$arity$3(coll__9514, k, not_found)
  };
  G__9538 = function(this_sym9509, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9538__2.call(this, this_sym9509, k);
      case 3:
        return G__9538__3.call(this, this_sym9509, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9538
}();
cljs.core.Vector.prototype.apply = function(this_sym9499, args9500) {
  var this__9515 = this;
  return this_sym9499.call.apply(this_sym9499, [this_sym9499].concat(args9500.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9516 = this;
  var new_array__9517 = this__9516.array.slice();
  new_array__9517.push(o);
  return new cljs.core.Vector(this__9516.meta, new_array__9517, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9518 = this;
  var this__9519 = this;
  return cljs.core.pr_str.call(null, this__9519)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9520 = this;
  return cljs.core.ci_reduce.call(null, this__9520.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9521 = this;
  return cljs.core.ci_reduce.call(null, this__9521.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9522 = this;
  if(this__9522.array.length > 0) {
    var vector_seq__9523 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9522.array.length) {
          return cljs.core.cons.call(null, this__9522.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9523.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9524 = this;
  return this__9524.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9525 = this;
  var count__9526 = this__9525.array.length;
  if(count__9526 > 0) {
    return this__9525.array[count__9526 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9527 = this;
  if(this__9527.array.length > 0) {
    var new_array__9528 = this__9527.array.slice();
    new_array__9528.pop();
    return new cljs.core.Vector(this__9527.meta, new_array__9528, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9529 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9530 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9531 = this;
  return new cljs.core.Vector(meta, this__9531.array, this__9531.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9532 = this;
  return this__9532.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9533 = this;
  if(function() {
    var and__3822__auto____9534 = 0 <= n;
    if(and__3822__auto____9534) {
      return n < this__9533.array.length
    }else {
      return and__3822__auto____9534
    }
  }()) {
    return this__9533.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9535 = this;
  if(function() {
    var and__3822__auto____9536 = 0 <= n;
    if(and__3822__auto____9536) {
      return n < this__9535.array.length
    }else {
      return and__3822__auto____9536
    }
  }()) {
    return this__9535.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9537 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9537.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2368__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__2368__auto__, writer__2369__auto__) {
  return cljs.core._write.call(null, writer__2369__auto__, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9540 = pv.cnt;
  if(cnt__9540 < 32) {
    return 0
  }else {
    return cnt__9540 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9546 = level;
  var ret__9547 = node;
  while(true) {
    if(ll__9546 === 0) {
      return ret__9547
    }else {
      var embed__9548 = ret__9547;
      var r__9549 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9550 = cljs.core.pv_aset.call(null, r__9549, 0, embed__9548);
      var G__9551 = ll__9546 - 5;
      var G__9552 = r__9549;
      ll__9546 = G__9551;
      ret__9547 = G__9552;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9558 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9559 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9558, subidx__9559, tailnode);
    return ret__9558
  }else {
    var child__9560 = cljs.core.pv_aget.call(null, parent, subidx__9559);
    if(!(child__9560 == null)) {
      var node_to_insert__9561 = push_tail.call(null, pv, level - 5, child__9560, tailnode);
      cljs.core.pv_aset.call(null, ret__9558, subidx__9559, node_to_insert__9561);
      return ret__9558
    }else {
      var node_to_insert__9562 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9558, subidx__9559, node_to_insert__9562);
      return ret__9558
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9566 = 0 <= i;
    if(and__3822__auto____9566) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9566
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9567 = pv.root;
      var level__9568 = pv.shift;
      while(true) {
        if(level__9568 > 0) {
          var G__9569 = cljs.core.pv_aget.call(null, node__9567, i >>> level__9568 & 31);
          var G__9570 = level__9568 - 5;
          node__9567 = G__9569;
          level__9568 = G__9570;
          continue
        }else {
          return node__9567.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9573 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9573, i & 31, val);
    return ret__9573
  }else {
    var subidx__9574 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9573, subidx__9574, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9574), i, val));
    return ret__9573
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9580 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9581 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9580));
    if(function() {
      var and__3822__auto____9582 = new_child__9581 == null;
      if(and__3822__auto____9582) {
        return subidx__9580 === 0
      }else {
        return and__3822__auto____9582
      }
    }()) {
      return null
    }else {
      var ret__9583 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9583, subidx__9580, new_child__9581);
      return ret__9583
    }
  }else {
    if(subidx__9580 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9584 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9584, subidx__9580, null);
        return ret__9584
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9587 = this;
  return new cljs.core.TransientVector(this__9587.cnt, this__9587.shift, cljs.core.tv_editable_root.call(null, this__9587.root), cljs.core.tv_editable_tail.call(null, this__9587.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9588 = this;
  var h__2247__auto____9589 = this__9588.__hash;
  if(!(h__2247__auto____9589 == null)) {
    return h__2247__auto____9589
  }else {
    var h__2247__auto____9590 = cljs.core.hash_coll.call(null, coll);
    this__9588.__hash = h__2247__auto____9590;
    return h__2247__auto____9590
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9591 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9592 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9593 = this;
  if(function() {
    var and__3822__auto____9594 = 0 <= k;
    if(and__3822__auto____9594) {
      return k < this__9593.cnt
    }else {
      return and__3822__auto____9594
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9595 = this__9593.tail.slice();
      new_tail__9595[k & 31] = v;
      return new cljs.core.PersistentVector(this__9593.meta, this__9593.cnt, this__9593.shift, this__9593.root, new_tail__9595, null)
    }else {
      return new cljs.core.PersistentVector(this__9593.meta, this__9593.cnt, this__9593.shift, cljs.core.do_assoc.call(null, coll, this__9593.shift, this__9593.root, k, v), this__9593.tail, null)
    }
  }else {
    if(k === this__9593.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9593.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9643 = null;
  var G__9643__2 = function(this_sym9596, k) {
    var this__9598 = this;
    var this_sym9596__9599 = this;
    var coll__9600 = this_sym9596__9599;
    return coll__9600.cljs$core$ILookup$_lookup$arity$2(coll__9600, k)
  };
  var G__9643__3 = function(this_sym9597, k, not_found) {
    var this__9598 = this;
    var this_sym9597__9601 = this;
    var coll__9602 = this_sym9597__9601;
    return coll__9602.cljs$core$ILookup$_lookup$arity$3(coll__9602, k, not_found)
  };
  G__9643 = function(this_sym9597, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9643__2.call(this, this_sym9597, k);
      case 3:
        return G__9643__3.call(this, this_sym9597, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9643
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9585, args9586) {
  var this__9603 = this;
  return this_sym9585.call.apply(this_sym9585, [this_sym9585].concat(args9586.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9604 = this;
  var step_init__9605 = [0, init];
  var i__9606 = 0;
  while(true) {
    if(i__9606 < this__9604.cnt) {
      var arr__9607 = cljs.core.array_for.call(null, v, i__9606);
      var len__9608 = arr__9607.length;
      var init__9612 = function() {
        var j__9609 = 0;
        var init__9610 = step_init__9605[1];
        while(true) {
          if(j__9609 < len__9608) {
            var init__9611 = f.call(null, init__9610, j__9609 + i__9606, arr__9607[j__9609]);
            if(cljs.core.reduced_QMARK_.call(null, init__9611)) {
              return init__9611
            }else {
              var G__9644 = j__9609 + 1;
              var G__9645 = init__9611;
              j__9609 = G__9644;
              init__9610 = G__9645;
              continue
            }
          }else {
            step_init__9605[0] = len__9608;
            step_init__9605[1] = init__9610;
            return init__9610
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9612)) {
        return cljs.core.deref.call(null, init__9612)
      }else {
        var G__9646 = i__9606 + step_init__9605[0];
        i__9606 = G__9646;
        continue
      }
    }else {
      return step_init__9605[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9613 = this;
  if(this__9613.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9614 = this__9613.tail.slice();
    new_tail__9614.push(o);
    return new cljs.core.PersistentVector(this__9613.meta, this__9613.cnt + 1, this__9613.shift, this__9613.root, new_tail__9614, null)
  }else {
    var root_overflow_QMARK___9615 = this__9613.cnt >>> 5 > 1 << this__9613.shift;
    var new_shift__9616 = root_overflow_QMARK___9615 ? this__9613.shift + 5 : this__9613.shift;
    var new_root__9618 = root_overflow_QMARK___9615 ? function() {
      var n_r__9617 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9617, 0, this__9613.root);
      cljs.core.pv_aset.call(null, n_r__9617, 1, cljs.core.new_path.call(null, null, this__9613.shift, new cljs.core.VectorNode(null, this__9613.tail)));
      return n_r__9617
    }() : cljs.core.push_tail.call(null, coll, this__9613.shift, this__9613.root, new cljs.core.VectorNode(null, this__9613.tail));
    return new cljs.core.PersistentVector(this__9613.meta, this__9613.cnt + 1, new_shift__9616, new_root__9618, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9619 = this;
  if(this__9619.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9619.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9620 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9621 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9622 = this;
  var this__9623 = this;
  return cljs.core.pr_str.call(null, this__9623)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9624 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9625 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9626 = this;
  if(this__9626.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9627 = this;
  return this__9627.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9628 = this;
  if(this__9628.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9628.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9629 = this;
  if(this__9629.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9629.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9629.meta)
    }else {
      if(1 < this__9629.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9629.meta, this__9629.cnt - 1, this__9629.shift, this__9629.root, this__9629.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9630 = cljs.core.array_for.call(null, coll, this__9629.cnt - 2);
          var nr__9631 = cljs.core.pop_tail.call(null, coll, this__9629.shift, this__9629.root);
          var new_root__9632 = nr__9631 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9631;
          var cnt_1__9633 = this__9629.cnt - 1;
          if(function() {
            var and__3822__auto____9634 = 5 < this__9629.shift;
            if(and__3822__auto____9634) {
              return cljs.core.pv_aget.call(null, new_root__9632, 1) == null
            }else {
              return and__3822__auto____9634
            }
          }()) {
            return new cljs.core.PersistentVector(this__9629.meta, cnt_1__9633, this__9629.shift - 5, cljs.core.pv_aget.call(null, new_root__9632, 0), new_tail__9630, null)
          }else {
            return new cljs.core.PersistentVector(this__9629.meta, cnt_1__9633, this__9629.shift, new_root__9632, new_tail__9630, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9635 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9636 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9637 = this;
  return new cljs.core.PersistentVector(meta, this__9637.cnt, this__9637.shift, this__9637.root, this__9637.tail, this__9637.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9638 = this;
  return this__9638.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9639 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9640 = this;
  if(function() {
    var and__3822__auto____9641 = 0 <= n;
    if(and__3822__auto____9641) {
      return n < this__9640.cnt
    }else {
      return and__3822__auto____9641
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9642 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9642.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9647 = xs.length;
  var xs__9648 = no_clone === true ? xs : xs.slice();
  if(l__9647 < 32) {
    return new cljs.core.PersistentVector(null, l__9647, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9648, null)
  }else {
    var node__9649 = xs__9648.slice(0, 32);
    var v__9650 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9649, null);
    var i__9651 = 32;
    var out__9652 = cljs.core._as_transient.call(null, v__9650);
    while(true) {
      if(i__9651 < l__9647) {
        var G__9653 = i__9651 + 1;
        var G__9654 = cljs.core.conj_BANG_.call(null, out__9652, xs__9648[i__9651]);
        i__9651 = G__9653;
        out__9652 = G__9654;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9652)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9655) {
    var args = cljs.core.seq(arglist__9655);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31719660;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9656 = this;
  var h__2247__auto____9657 = this__9656.__hash;
  if(!(h__2247__auto____9657 == null)) {
    return h__2247__auto____9657
  }else {
    var h__2247__auto____9658 = cljs.core.hash_coll.call(null, coll);
    this__9656.__hash = h__2247__auto____9658;
    return h__2247__auto____9658
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9659 = this;
  if(this__9659.off + 1 < this__9659.node.length) {
    var s__9660 = cljs.core.chunked_seq.call(null, this__9659.vec, this__9659.node, this__9659.i, this__9659.off + 1);
    if(s__9660 == null) {
      return null
    }else {
      return s__9660
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9661 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9662 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9663 = this;
  return this__9663.node[this__9663.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9664 = this;
  if(this__9664.off + 1 < this__9664.node.length) {
    var s__9665 = cljs.core.chunked_seq.call(null, this__9664.vec, this__9664.node, this__9664.i, this__9664.off + 1);
    if(s__9665 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9665
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9666 = this;
  var l__9667 = this__9666.node.length;
  var s__9668 = this__9666.i + l__9667 < cljs.core._count.call(null, this__9666.vec) ? cljs.core.chunked_seq.call(null, this__9666.vec, this__9666.i + l__9667, 0) : null;
  if(s__9668 == null) {
    return null
  }else {
    return s__9668
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9669 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9670 = this;
  return cljs.core.chunked_seq.call(null, this__9670.vec, this__9670.node, this__9670.i, this__9670.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9671 = this;
  return this__9671.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9672 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9672.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9673 = this;
  return cljs.core.array_chunk.call(null, this__9673.node, this__9673.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9674 = this;
  var l__9675 = this__9674.node.length;
  var s__9676 = this__9674.i + l__9675 < cljs.core._count.call(null, this__9674.vec) ? cljs.core.chunked_seq.call(null, this__9674.vec, this__9674.i + l__9675, 0) : null;
  if(s__9676 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9676
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9679 = this;
  var h__2247__auto____9680 = this__9679.__hash;
  if(!(h__2247__auto____9680 == null)) {
    return h__2247__auto____9680
  }else {
    var h__2247__auto____9681 = cljs.core.hash_coll.call(null, coll);
    this__9679.__hash = h__2247__auto____9681;
    return h__2247__auto____9681
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9682 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9683 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9684 = this;
  var v_pos__9685 = this__9684.start + key;
  return new cljs.core.Subvec(this__9684.meta, cljs.core._assoc.call(null, this__9684.v, v_pos__9685, val), this__9684.start, this__9684.end > v_pos__9685 + 1 ? this__9684.end : v_pos__9685 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9711 = null;
  var G__9711__2 = function(this_sym9686, k) {
    var this__9688 = this;
    var this_sym9686__9689 = this;
    var coll__9690 = this_sym9686__9689;
    return coll__9690.cljs$core$ILookup$_lookup$arity$2(coll__9690, k)
  };
  var G__9711__3 = function(this_sym9687, k, not_found) {
    var this__9688 = this;
    var this_sym9687__9691 = this;
    var coll__9692 = this_sym9687__9691;
    return coll__9692.cljs$core$ILookup$_lookup$arity$3(coll__9692, k, not_found)
  };
  G__9711 = function(this_sym9687, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9711__2.call(this, this_sym9687, k);
      case 3:
        return G__9711__3.call(this, this_sym9687, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9711
}();
cljs.core.Subvec.prototype.apply = function(this_sym9677, args9678) {
  var this__9693 = this;
  return this_sym9677.call.apply(this_sym9677, [this_sym9677].concat(args9678.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9694 = this;
  return new cljs.core.Subvec(this__9694.meta, cljs.core._assoc_n.call(null, this__9694.v, this__9694.end, o), this__9694.start, this__9694.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9695 = this;
  var this__9696 = this;
  return cljs.core.pr_str.call(null, this__9696)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9697 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9698 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9699 = this;
  var subvec_seq__9700 = function subvec_seq(i) {
    if(i === this__9699.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9699.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9700.call(null, this__9699.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9701 = this;
  return this__9701.end - this__9701.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9702 = this;
  return cljs.core._nth.call(null, this__9702.v, this__9702.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9703 = this;
  if(this__9703.start === this__9703.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9703.meta, this__9703.v, this__9703.start, this__9703.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9704 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9705 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9706 = this;
  return new cljs.core.Subvec(meta, this__9706.v, this__9706.start, this__9706.end, this__9706.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9707 = this;
  return this__9707.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9708 = this;
  return cljs.core._nth.call(null, this__9708.v, this__9708.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9709 = this;
  return cljs.core._nth.call(null, this__9709.v, this__9709.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9710 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9710.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9713 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9713, 0, tl.length);
  return ret__9713
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9717 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9718 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9717, subidx__9718, level === 5 ? tail_node : function() {
    var child__9719 = cljs.core.pv_aget.call(null, ret__9717, subidx__9718);
    if(!(child__9719 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9719, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9717
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9724 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9725 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9726 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9724, subidx__9725));
    if(function() {
      var and__3822__auto____9727 = new_child__9726 == null;
      if(and__3822__auto____9727) {
        return subidx__9725 === 0
      }else {
        return and__3822__auto____9727
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9724, subidx__9725, new_child__9726);
      return node__9724
    }
  }else {
    if(subidx__9725 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9724, subidx__9725, null);
        return node__9724
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9732 = 0 <= i;
    if(and__3822__auto____9732) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9732
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9733 = tv.root;
      var node__9734 = root__9733;
      var level__9735 = tv.shift;
      while(true) {
        if(level__9735 > 0) {
          var G__9736 = cljs.core.tv_ensure_editable.call(null, root__9733.edit, cljs.core.pv_aget.call(null, node__9734, i >>> level__9735 & 31));
          var G__9737 = level__9735 - 5;
          node__9734 = G__9736;
          level__9735 = G__9737;
          continue
        }else {
          return node__9734.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9777 = null;
  var G__9777__2 = function(this_sym9740, k) {
    var this__9742 = this;
    var this_sym9740__9743 = this;
    var coll__9744 = this_sym9740__9743;
    return coll__9744.cljs$core$ILookup$_lookup$arity$2(coll__9744, k)
  };
  var G__9777__3 = function(this_sym9741, k, not_found) {
    var this__9742 = this;
    var this_sym9741__9745 = this;
    var coll__9746 = this_sym9741__9745;
    return coll__9746.cljs$core$ILookup$_lookup$arity$3(coll__9746, k, not_found)
  };
  G__9777 = function(this_sym9741, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9777__2.call(this, this_sym9741, k);
      case 3:
        return G__9777__3.call(this, this_sym9741, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9777
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9738, args9739) {
  var this__9747 = this;
  return this_sym9738.call.apply(this_sym9738, [this_sym9738].concat(args9739.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9748 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9749 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9750 = this;
  if(this__9750.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9751 = this;
  if(function() {
    var and__3822__auto____9752 = 0 <= n;
    if(and__3822__auto____9752) {
      return n < this__9751.cnt
    }else {
      return and__3822__auto____9752
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9753 = this;
  if(this__9753.root.edit) {
    return this__9753.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9754 = this;
  if(this__9754.root.edit) {
    if(function() {
      var and__3822__auto____9755 = 0 <= n;
      if(and__3822__auto____9755) {
        return n < this__9754.cnt
      }else {
        return and__3822__auto____9755
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9754.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9760 = function go(level, node) {
          var node__9758 = cljs.core.tv_ensure_editable.call(null, this__9754.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9758, n & 31, val);
            return node__9758
          }else {
            var subidx__9759 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9758, subidx__9759, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9758, subidx__9759)));
            return node__9758
          }
        }.call(null, this__9754.shift, this__9754.root);
        this__9754.root = new_root__9760;
        return tcoll
      }
    }else {
      if(n === this__9754.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9754.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9761 = this;
  if(this__9761.root.edit) {
    if(this__9761.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9761.cnt) {
        this__9761.cnt = 0;
        return tcoll
      }else {
        if((this__9761.cnt - 1 & 31) > 0) {
          this__9761.cnt = this__9761.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9762 = cljs.core.editable_array_for.call(null, tcoll, this__9761.cnt - 2);
            var new_root__9764 = function() {
              var nr__9763 = cljs.core.tv_pop_tail.call(null, tcoll, this__9761.shift, this__9761.root);
              if(!(nr__9763 == null)) {
                return nr__9763
              }else {
                return new cljs.core.VectorNode(this__9761.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9765 = 5 < this__9761.shift;
              if(and__3822__auto____9765) {
                return cljs.core.pv_aget.call(null, new_root__9764, 1) == null
              }else {
                return and__3822__auto____9765
              }
            }()) {
              var new_root__9766 = cljs.core.tv_ensure_editable.call(null, this__9761.root.edit, cljs.core.pv_aget.call(null, new_root__9764, 0));
              this__9761.root = new_root__9766;
              this__9761.shift = this__9761.shift - 5;
              this__9761.cnt = this__9761.cnt - 1;
              this__9761.tail = new_tail__9762;
              return tcoll
            }else {
              this__9761.root = new_root__9764;
              this__9761.cnt = this__9761.cnt - 1;
              this__9761.tail = new_tail__9762;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9767 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9768 = this;
  if(this__9768.root.edit) {
    if(this__9768.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9768.tail[this__9768.cnt & 31] = o;
      this__9768.cnt = this__9768.cnt + 1;
      return tcoll
    }else {
      var tail_node__9769 = new cljs.core.VectorNode(this__9768.root.edit, this__9768.tail);
      var new_tail__9770 = cljs.core.make_array.call(null, 32);
      new_tail__9770[0] = o;
      this__9768.tail = new_tail__9770;
      if(this__9768.cnt >>> 5 > 1 << this__9768.shift) {
        var new_root_array__9771 = cljs.core.make_array.call(null, 32);
        var new_shift__9772 = this__9768.shift + 5;
        new_root_array__9771[0] = this__9768.root;
        new_root_array__9771[1] = cljs.core.new_path.call(null, this__9768.root.edit, this__9768.shift, tail_node__9769);
        this__9768.root = new cljs.core.VectorNode(this__9768.root.edit, new_root_array__9771);
        this__9768.shift = new_shift__9772;
        this__9768.cnt = this__9768.cnt + 1;
        return tcoll
      }else {
        var new_root__9773 = cljs.core.tv_push_tail.call(null, tcoll, this__9768.shift, this__9768.root, tail_node__9769);
        this__9768.root = new_root__9773;
        this__9768.cnt = this__9768.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9774 = this;
  if(this__9774.root.edit) {
    this__9774.root.edit = null;
    var len__9775 = this__9774.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9776 = cljs.core.make_array.call(null, len__9775);
    cljs.core.array_copy.call(null, this__9774.tail, 0, trimmed_tail__9776, 0, len__9775);
    return new cljs.core.PersistentVector(null, this__9774.cnt, this__9774.shift, this__9774.root, trimmed_tail__9776, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9778 = this;
  var h__2247__auto____9779 = this__9778.__hash;
  if(!(h__2247__auto____9779 == null)) {
    return h__2247__auto____9779
  }else {
    var h__2247__auto____9780 = cljs.core.hash_coll.call(null, coll);
    this__9778.__hash = h__2247__auto____9780;
    return h__2247__auto____9780
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9781 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9782 = this;
  var this__9783 = this;
  return cljs.core.pr_str.call(null, this__9783)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9784 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9785 = this;
  return cljs.core._first.call(null, this__9785.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9786 = this;
  var temp__3971__auto____9787 = cljs.core.next.call(null, this__9786.front);
  if(temp__3971__auto____9787) {
    var f1__9788 = temp__3971__auto____9787;
    return new cljs.core.PersistentQueueSeq(this__9786.meta, f1__9788, this__9786.rear, null)
  }else {
    if(this__9786.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9786.meta, this__9786.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9789 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9790 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9790.front, this__9790.rear, this__9790.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9791 = this;
  return this__9791.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9792 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9792.meta)
};
cljs.core.PersistentQueueSeq;
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9793 = this;
  var h__2247__auto____9794 = this__9793.__hash;
  if(!(h__2247__auto____9794 == null)) {
    return h__2247__auto____9794
  }else {
    var h__2247__auto____9795 = cljs.core.hash_coll.call(null, coll);
    this__9793.__hash = h__2247__auto____9795;
    return h__2247__auto____9795
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9796 = this;
  if(cljs.core.truth_(this__9796.front)) {
    return new cljs.core.PersistentQueue(this__9796.meta, this__9796.count + 1, this__9796.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9797 = this__9796.rear;
      if(cljs.core.truth_(or__3824__auto____9797)) {
        return or__3824__auto____9797
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9796.meta, this__9796.count + 1, cljs.core.conj.call(null, this__9796.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9798 = this;
  var this__9799 = this;
  return cljs.core.pr_str.call(null, this__9799)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9800 = this;
  var rear__9801 = cljs.core.seq.call(null, this__9800.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9802 = this__9800.front;
    if(cljs.core.truth_(or__3824__auto____9802)) {
      return or__3824__auto____9802
    }else {
      return rear__9801
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9800.front, cljs.core.seq.call(null, rear__9801), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9803 = this;
  return this__9803.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9804 = this;
  return cljs.core._first.call(null, this__9804.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9805 = this;
  if(cljs.core.truth_(this__9805.front)) {
    var temp__3971__auto____9806 = cljs.core.next.call(null, this__9805.front);
    if(temp__3971__auto____9806) {
      var f1__9807 = temp__3971__auto____9806;
      return new cljs.core.PersistentQueue(this__9805.meta, this__9805.count - 1, f1__9807, this__9805.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9805.meta, this__9805.count - 1, cljs.core.seq.call(null, this__9805.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9808 = this;
  return cljs.core.first.call(null, this__9808.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9809 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9810 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9811 = this;
  return new cljs.core.PersistentQueue(meta, this__9811.count, this__9811.front, this__9811.rear, this__9811.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9812 = this;
  return this__9812.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9813 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9814 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9817 = array.length;
  var i__9818 = 0;
  while(true) {
    if(i__9818 < len__9817) {
      if(k === array[i__9818]) {
        return i__9818
      }else {
        var G__9819 = i__9818 + incr;
        i__9818 = G__9819;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9822 = cljs.core.hash.call(null, a);
  var b__9823 = cljs.core.hash.call(null, b);
  if(a__9822 < b__9823) {
    return-1
  }else {
    if(a__9822 > b__9823) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9831 = m.keys;
  var len__9832 = ks__9831.length;
  var so__9833 = m.strobj;
  var out__9834 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9835 = 0;
  var out__9836 = cljs.core.transient$.call(null, out__9834);
  while(true) {
    if(i__9835 < len__9832) {
      var k__9837 = ks__9831[i__9835];
      var G__9838 = i__9835 + 1;
      var G__9839 = cljs.core.assoc_BANG_.call(null, out__9836, k__9837, so__9833[k__9837]);
      i__9835 = G__9838;
      out__9836 = G__9839;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9836, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9845 = {};
  var l__9846 = ks.length;
  var i__9847 = 0;
  while(true) {
    if(i__9847 < l__9846) {
      var k__9848 = ks[i__9847];
      new_obj__9845[k__9848] = obj[k__9848];
      var G__9849 = i__9847 + 1;
      i__9847 = G__9849;
      continue
    }else {
    }
    break
  }
  return new_obj__9845
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9852 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9853 = this;
  var h__2247__auto____9854 = this__9853.__hash;
  if(!(h__2247__auto____9854 == null)) {
    return h__2247__auto____9854
  }else {
    var h__2247__auto____9855 = cljs.core.hash_imap.call(null, coll);
    this__9853.__hash = h__2247__auto____9855;
    return h__2247__auto____9855
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9856 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9857 = this;
  if(function() {
    var and__3822__auto____9858 = goog.isString(k);
    if(and__3822__auto____9858) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9857.keys) == null)
    }else {
      return and__3822__auto____9858
    }
  }()) {
    return this__9857.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9859 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9860 = this__9859.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9860) {
        return or__3824__auto____9860
      }else {
        return this__9859.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9859.keys) == null)) {
        var new_strobj__9861 = cljs.core.obj_clone.call(null, this__9859.strobj, this__9859.keys);
        new_strobj__9861[k] = v;
        return new cljs.core.ObjMap(this__9859.meta, this__9859.keys, new_strobj__9861, this__9859.update_count + 1, null)
      }else {
        var new_strobj__9862 = cljs.core.obj_clone.call(null, this__9859.strobj, this__9859.keys);
        var new_keys__9863 = this__9859.keys.slice();
        new_strobj__9862[k] = v;
        new_keys__9863.push(k);
        return new cljs.core.ObjMap(this__9859.meta, new_keys__9863, new_strobj__9862, this__9859.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9864 = this;
  if(function() {
    var and__3822__auto____9865 = goog.isString(k);
    if(and__3822__auto____9865) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9864.keys) == null)
    }else {
      return and__3822__auto____9865
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9887 = null;
  var G__9887__2 = function(this_sym9866, k) {
    var this__9868 = this;
    var this_sym9866__9869 = this;
    var coll__9870 = this_sym9866__9869;
    return coll__9870.cljs$core$ILookup$_lookup$arity$2(coll__9870, k)
  };
  var G__9887__3 = function(this_sym9867, k, not_found) {
    var this__9868 = this;
    var this_sym9867__9871 = this;
    var coll__9872 = this_sym9867__9871;
    return coll__9872.cljs$core$ILookup$_lookup$arity$3(coll__9872, k, not_found)
  };
  G__9887 = function(this_sym9867, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9887__2.call(this, this_sym9867, k);
      case 3:
        return G__9887__3.call(this, this_sym9867, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9887
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9850, args9851) {
  var this__9873 = this;
  return this_sym9850.call.apply(this_sym9850, [this_sym9850].concat(args9851.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9874 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9875 = this;
  var this__9876 = this;
  return cljs.core.pr_str.call(null, this__9876)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9877 = this;
  if(this__9877.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9840_SHARP_) {
      return cljs.core.vector.call(null, p1__9840_SHARP_, this__9877.strobj[p1__9840_SHARP_])
    }, this__9877.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9878 = this;
  return this__9878.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9879 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9880 = this;
  return new cljs.core.ObjMap(meta, this__9880.keys, this__9880.strobj, this__9880.update_count, this__9880.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9881 = this;
  return this__9881.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9882 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9882.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9883 = this;
  if(function() {
    var and__3822__auto____9884 = goog.isString(k);
    if(and__3822__auto____9884) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9883.keys) == null)
    }else {
      return and__3822__auto____9884
    }
  }()) {
    var new_keys__9885 = this__9883.keys.slice();
    var new_strobj__9886 = cljs.core.obj_clone.call(null, this__9883.strobj, this__9883.keys);
    new_keys__9885.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9885), 1);
    cljs.core.js_delete.call(null, new_strobj__9886, k);
    return new cljs.core.ObjMap(this__9883.meta, new_keys__9885, new_strobj__9886, this__9883.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
goog.provide("cljs.core.HashMap");
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9891 = this;
  var h__2247__auto____9892 = this__9891.__hash;
  if(!(h__2247__auto____9892 == null)) {
    return h__2247__auto____9892
  }else {
    var h__2247__auto____9893 = cljs.core.hash_imap.call(null, coll);
    this__9891.__hash = h__2247__auto____9893;
    return h__2247__auto____9893
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9894 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9895 = this;
  var bucket__9896 = this__9895.hashobj[cljs.core.hash.call(null, k)];
  var i__9897 = cljs.core.truth_(bucket__9896) ? cljs.core.scan_array.call(null, 2, k, bucket__9896) : null;
  if(cljs.core.truth_(i__9897)) {
    return bucket__9896[i__9897 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9898 = this;
  var h__9899 = cljs.core.hash.call(null, k);
  var bucket__9900 = this__9898.hashobj[h__9899];
  if(cljs.core.truth_(bucket__9900)) {
    var new_bucket__9901 = bucket__9900.slice();
    var new_hashobj__9902 = goog.object.clone(this__9898.hashobj);
    new_hashobj__9902[h__9899] = new_bucket__9901;
    var temp__3971__auto____9903 = cljs.core.scan_array.call(null, 2, k, new_bucket__9901);
    if(cljs.core.truth_(temp__3971__auto____9903)) {
      var i__9904 = temp__3971__auto____9903;
      new_bucket__9901[i__9904 + 1] = v;
      return new cljs.core.HashMap(this__9898.meta, this__9898.count, new_hashobj__9902, null)
    }else {
      new_bucket__9901.push(k, v);
      return new cljs.core.HashMap(this__9898.meta, this__9898.count + 1, new_hashobj__9902, null)
    }
  }else {
    var new_hashobj__9905 = goog.object.clone(this__9898.hashobj);
    new_hashobj__9905[h__9899] = [k, v];
    return new cljs.core.HashMap(this__9898.meta, this__9898.count + 1, new_hashobj__9905, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9906 = this;
  var bucket__9907 = this__9906.hashobj[cljs.core.hash.call(null, k)];
  var i__9908 = cljs.core.truth_(bucket__9907) ? cljs.core.scan_array.call(null, 2, k, bucket__9907) : null;
  if(cljs.core.truth_(i__9908)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9933 = null;
  var G__9933__2 = function(this_sym9909, k) {
    var this__9911 = this;
    var this_sym9909__9912 = this;
    var coll__9913 = this_sym9909__9912;
    return coll__9913.cljs$core$ILookup$_lookup$arity$2(coll__9913, k)
  };
  var G__9933__3 = function(this_sym9910, k, not_found) {
    var this__9911 = this;
    var this_sym9910__9914 = this;
    var coll__9915 = this_sym9910__9914;
    return coll__9915.cljs$core$ILookup$_lookup$arity$3(coll__9915, k, not_found)
  };
  G__9933 = function(this_sym9910, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9933__2.call(this, this_sym9910, k);
      case 3:
        return G__9933__3.call(this, this_sym9910, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9933
}();
cljs.core.HashMap.prototype.apply = function(this_sym9889, args9890) {
  var this__9916 = this;
  return this_sym9889.call.apply(this_sym9889, [this_sym9889].concat(args9890.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9917 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9918 = this;
  var this__9919 = this;
  return cljs.core.pr_str.call(null, this__9919)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9920 = this;
  if(this__9920.count > 0) {
    var hashes__9921 = cljs.core.js_keys.call(null, this__9920.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9888_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9920.hashobj[p1__9888_SHARP_]))
    }, hashes__9921)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9922 = this;
  return this__9922.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9923 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9924 = this;
  return new cljs.core.HashMap(meta, this__9924.count, this__9924.hashobj, this__9924.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9925 = this;
  return this__9925.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9926 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9926.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9927 = this;
  var h__9928 = cljs.core.hash.call(null, k);
  var bucket__9929 = this__9927.hashobj[h__9928];
  var i__9930 = cljs.core.truth_(bucket__9929) ? cljs.core.scan_array.call(null, 2, k, bucket__9929) : null;
  if(cljs.core.not.call(null, i__9930)) {
    return coll
  }else {
    var new_hashobj__9931 = goog.object.clone(this__9927.hashobj);
    if(3 > bucket__9929.length) {
      cljs.core.js_delete.call(null, new_hashobj__9931, h__9928)
    }else {
      var new_bucket__9932 = bucket__9929.slice();
      new_bucket__9932.splice(i__9930, 2);
      new_hashobj__9931[h__9928] = new_bucket__9932
    }
    return new cljs.core.HashMap(this__9927.meta, this__9927.count - 1, new_hashobj__9931, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9934 = ks.length;
  var i__9935 = 0;
  var out__9936 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9935 < len__9934) {
      var G__9937 = i__9935 + 1;
      var G__9938 = cljs.core.assoc.call(null, out__9936, ks[i__9935], vs[i__9935]);
      i__9935 = G__9937;
      out__9936 = G__9938;
      continue
    }else {
      return out__9936
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9942 = m.arr;
  var len__9943 = arr__9942.length;
  var i__9944 = 0;
  while(true) {
    if(len__9943 <= i__9944) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9942[i__9944], k)) {
        return i__9944
      }else {
        if("\ufdd0'else") {
          var G__9945 = i__9944 + 2;
          i__9944 = G__9945;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9948 = this;
  return new cljs.core.TransientArrayMap({}, this__9948.arr.length, this__9948.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9949 = this;
  var h__2247__auto____9950 = this__9949.__hash;
  if(!(h__2247__auto____9950 == null)) {
    return h__2247__auto____9950
  }else {
    var h__2247__auto____9951 = cljs.core.hash_imap.call(null, coll);
    this__9949.__hash = h__2247__auto____9951;
    return h__2247__auto____9951
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9952 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9953 = this;
  var idx__9954 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9954 === -1) {
    return not_found
  }else {
    return this__9953.arr[idx__9954 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9955 = this;
  var idx__9956 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9956 === -1) {
    if(this__9955.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9955.meta, this__9955.cnt + 1, function() {
        var G__9957__9958 = this__9955.arr.slice();
        G__9957__9958.push(k);
        G__9957__9958.push(v);
        return G__9957__9958
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9955.arr[idx__9956 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9955.meta, this__9955.cnt, function() {
          var G__9959__9960 = this__9955.arr.slice();
          G__9959__9960[idx__9956 + 1] = v;
          return G__9959__9960
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9961 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9993 = null;
  var G__9993__2 = function(this_sym9962, k) {
    var this__9964 = this;
    var this_sym9962__9965 = this;
    var coll__9966 = this_sym9962__9965;
    return coll__9966.cljs$core$ILookup$_lookup$arity$2(coll__9966, k)
  };
  var G__9993__3 = function(this_sym9963, k, not_found) {
    var this__9964 = this;
    var this_sym9963__9967 = this;
    var coll__9968 = this_sym9963__9967;
    return coll__9968.cljs$core$ILookup$_lookup$arity$3(coll__9968, k, not_found)
  };
  G__9993 = function(this_sym9963, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9993__2.call(this, this_sym9963, k);
      case 3:
        return G__9993__3.call(this, this_sym9963, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9993
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9946, args9947) {
  var this__9969 = this;
  return this_sym9946.call.apply(this_sym9946, [this_sym9946].concat(args9947.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9970 = this;
  var len__9971 = this__9970.arr.length;
  var i__9972 = 0;
  var init__9973 = init;
  while(true) {
    if(i__9972 < len__9971) {
      var init__9974 = f.call(null, init__9973, this__9970.arr[i__9972], this__9970.arr[i__9972 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9974)) {
        return cljs.core.deref.call(null, init__9974)
      }else {
        var G__9994 = i__9972 + 2;
        var G__9995 = init__9974;
        i__9972 = G__9994;
        init__9973 = G__9995;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9975 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9976 = this;
  var this__9977 = this;
  return cljs.core.pr_str.call(null, this__9977)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9978 = this;
  if(this__9978.cnt > 0) {
    var len__9979 = this__9978.arr.length;
    var array_map_seq__9980 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9979) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9978.arr[i], this__9978.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9980.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9981 = this;
  return this__9981.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9982 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9983 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9983.cnt, this__9983.arr, this__9983.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9984 = this;
  return this__9984.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9985 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9985.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9986 = this;
  var idx__9987 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9987 >= 0) {
    var len__9988 = this__9986.arr.length;
    var new_len__9989 = len__9988 - 2;
    if(new_len__9989 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9990 = cljs.core.make_array.call(null, new_len__9989);
      var s__9991 = 0;
      var d__9992 = 0;
      while(true) {
        if(s__9991 >= len__9988) {
          return new cljs.core.PersistentArrayMap(this__9986.meta, this__9986.cnt - 1, new_arr__9990, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9986.arr[s__9991])) {
            var G__9996 = s__9991 + 2;
            var G__9997 = d__9992;
            s__9991 = G__9996;
            d__9992 = G__9997;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9990[d__9992] = this__9986.arr[s__9991];
              new_arr__9990[d__9992 + 1] = this__9986.arr[s__9991 + 1];
              var G__9998 = s__9991 + 2;
              var G__9999 = d__9992 + 2;
              s__9991 = G__9998;
              d__9992 = G__9999;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10000 = cljs.core.count.call(null, ks);
  var i__10001 = 0;
  var out__10002 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10001 < len__10000) {
      var G__10003 = i__10001 + 1;
      var G__10004 = cljs.core.assoc_BANG_.call(null, out__10002, ks[i__10001], vs[i__10001]);
      i__10001 = G__10003;
      out__10002 = G__10004;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10002)
    }
    break
  }
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10005 = this;
  if(cljs.core.truth_(this__10005.editable_QMARK_)) {
    var idx__10006 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10006 >= 0) {
      this__10005.arr[idx__10006] = this__10005.arr[this__10005.len - 2];
      this__10005.arr[idx__10006 + 1] = this__10005.arr[this__10005.len - 1];
      var G__10007__10008 = this__10005.arr;
      G__10007__10008.pop();
      G__10007__10008.pop();
      G__10007__10008;
      this__10005.len = this__10005.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10009 = this;
  if(cljs.core.truth_(this__10009.editable_QMARK_)) {
    var idx__10010 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10010 === -1) {
      if(this__10009.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10009.len = this__10009.len + 2;
        this__10009.arr.push(key);
        this__10009.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10009.len, this__10009.arr), key, val)
      }
    }else {
      if(val === this__10009.arr[idx__10010 + 1]) {
        return tcoll
      }else {
        this__10009.arr[idx__10010 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10011 = this;
  if(cljs.core.truth_(this__10011.editable_QMARK_)) {
    if(function() {
      var G__10012__10013 = o;
      if(G__10012__10013) {
        if(function() {
          var or__3824__auto____10014 = G__10012__10013.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10014) {
            return or__3824__auto____10014
          }else {
            return G__10012__10013.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10012__10013.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10012__10013)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10012__10013)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10015 = cljs.core.seq.call(null, o);
      var tcoll__10016 = tcoll;
      while(true) {
        var temp__3971__auto____10017 = cljs.core.first.call(null, es__10015);
        if(cljs.core.truth_(temp__3971__auto____10017)) {
          var e__10018 = temp__3971__auto____10017;
          var G__10024 = cljs.core.next.call(null, es__10015);
          var G__10025 = tcoll__10016.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10016, cljs.core.key.call(null, e__10018), cljs.core.val.call(null, e__10018));
          es__10015 = G__10024;
          tcoll__10016 = G__10025;
          continue
        }else {
          return tcoll__10016
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10019 = this;
  if(cljs.core.truth_(this__10019.editable_QMARK_)) {
    this__10019.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10019.len, 2), this__10019.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10020 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10021 = this;
  if(cljs.core.truth_(this__10021.editable_QMARK_)) {
    var idx__10022 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10022 === -1) {
      return not_found
    }else {
      return this__10021.arr[idx__10022 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10023 = this;
  if(cljs.core.truth_(this__10023.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10023.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10028 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10029 = 0;
  while(true) {
    if(i__10029 < len) {
      var G__10030 = cljs.core.assoc_BANG_.call(null, out__10028, arr[i__10029], arr[i__10029 + 1]);
      var G__10031 = i__10029 + 2;
      out__10028 = G__10030;
      i__10029 = G__10031;
      continue
    }else {
      return out__10028
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2368__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__2368__auto__, writer__2369__auto__) {
  return cljs.core._write.call(null, writer__2369__auto__, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10036__10037 = arr.slice();
    G__10036__10037[i] = a;
    return G__10036__10037
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10038__10039 = arr.slice();
    G__10038__10039[i] = a;
    G__10038__10039[j] = b;
    return G__10038__10039
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10041 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10041, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10041, 2 * i, new_arr__10041.length - 2 * i);
  return new_arr__10041
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10044 = inode.ensure_editable(edit);
    editable__10044.arr[i] = a;
    return editable__10044
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10045 = inode.ensure_editable(edit);
    editable__10045.arr[i] = a;
    editable__10045.arr[j] = b;
    return editable__10045
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10052 = arr.length;
  var i__10053 = 0;
  var init__10054 = init;
  while(true) {
    if(i__10053 < len__10052) {
      var init__10057 = function() {
        var k__10055 = arr[i__10053];
        if(!(k__10055 == null)) {
          return f.call(null, init__10054, k__10055, arr[i__10053 + 1])
        }else {
          var node__10056 = arr[i__10053 + 1];
          if(!(node__10056 == null)) {
            return node__10056.kv_reduce(f, init__10054)
          }else {
            return init__10054
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10057)) {
        return cljs.core.deref.call(null, init__10057)
      }else {
        var G__10058 = i__10053 + 2;
        var G__10059 = init__10057;
        i__10053 = G__10058;
        init__10054 = G__10059;
        continue
      }
    }else {
      return init__10054
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10060 = this;
  var inode__10061 = this;
  if(this__10060.bitmap === bit) {
    return null
  }else {
    var editable__10062 = inode__10061.ensure_editable(e);
    var earr__10063 = editable__10062.arr;
    var len__10064 = earr__10063.length;
    editable__10062.bitmap = bit ^ editable__10062.bitmap;
    cljs.core.array_copy.call(null, earr__10063, 2 * (i + 1), earr__10063, 2 * i, len__10064 - 2 * (i + 1));
    earr__10063[len__10064 - 2] = null;
    earr__10063[len__10064 - 1] = null;
    return editable__10062
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10065 = this;
  var inode__10066 = this;
  var bit__10067 = 1 << (hash >>> shift & 31);
  var idx__10068 = cljs.core.bitmap_indexed_node_index.call(null, this__10065.bitmap, bit__10067);
  if((this__10065.bitmap & bit__10067) === 0) {
    var n__10069 = cljs.core.bit_count.call(null, this__10065.bitmap);
    if(2 * n__10069 < this__10065.arr.length) {
      var editable__10070 = inode__10066.ensure_editable(edit);
      var earr__10071 = editable__10070.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10071, 2 * idx__10068, earr__10071, 2 * (idx__10068 + 1), 2 * (n__10069 - idx__10068));
      earr__10071[2 * idx__10068] = key;
      earr__10071[2 * idx__10068 + 1] = val;
      editable__10070.bitmap = editable__10070.bitmap | bit__10067;
      return editable__10070
    }else {
      if(n__10069 >= 16) {
        var nodes__10072 = cljs.core.make_array.call(null, 32);
        var jdx__10073 = hash >>> shift & 31;
        nodes__10072[jdx__10073] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10074 = 0;
        var j__10075 = 0;
        while(true) {
          if(i__10074 < 32) {
            if((this__10065.bitmap >>> i__10074 & 1) === 0) {
              var G__10128 = i__10074 + 1;
              var G__10129 = j__10075;
              i__10074 = G__10128;
              j__10075 = G__10129;
              continue
            }else {
              nodes__10072[i__10074] = !(this__10065.arr[j__10075] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10065.arr[j__10075]), this__10065.arr[j__10075], this__10065.arr[j__10075 + 1], added_leaf_QMARK_) : this__10065.arr[j__10075 + 1];
              var G__10130 = i__10074 + 1;
              var G__10131 = j__10075 + 2;
              i__10074 = G__10130;
              j__10075 = G__10131;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10069 + 1, nodes__10072)
      }else {
        if("\ufdd0'else") {
          var new_arr__10076 = cljs.core.make_array.call(null, 2 * (n__10069 + 4));
          cljs.core.array_copy.call(null, this__10065.arr, 0, new_arr__10076, 0, 2 * idx__10068);
          new_arr__10076[2 * idx__10068] = key;
          new_arr__10076[2 * idx__10068 + 1] = val;
          cljs.core.array_copy.call(null, this__10065.arr, 2 * idx__10068, new_arr__10076, 2 * (idx__10068 + 1), 2 * (n__10069 - idx__10068));
          added_leaf_QMARK_.val = true;
          var editable__10077 = inode__10066.ensure_editable(edit);
          editable__10077.arr = new_arr__10076;
          editable__10077.bitmap = editable__10077.bitmap | bit__10067;
          return editable__10077
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10078 = this__10065.arr[2 * idx__10068];
    var val_or_node__10079 = this__10065.arr[2 * idx__10068 + 1];
    if(key_or_nil__10078 == null) {
      var n__10080 = val_or_node__10079.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10080 === val_or_node__10079) {
        return inode__10066
      }else {
        return cljs.core.edit_and_set.call(null, inode__10066, edit, 2 * idx__10068 + 1, n__10080)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10078)) {
        if(val === val_or_node__10079) {
          return inode__10066
        }else {
          return cljs.core.edit_and_set.call(null, inode__10066, edit, 2 * idx__10068 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10066, edit, 2 * idx__10068, null, 2 * idx__10068 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10078, val_or_node__10079, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10081 = this;
  var inode__10082 = this;
  return cljs.core.create_inode_seq.call(null, this__10081.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10083 = this;
  var inode__10084 = this;
  var bit__10085 = 1 << (hash >>> shift & 31);
  if((this__10083.bitmap & bit__10085) === 0) {
    return inode__10084
  }else {
    var idx__10086 = cljs.core.bitmap_indexed_node_index.call(null, this__10083.bitmap, bit__10085);
    var key_or_nil__10087 = this__10083.arr[2 * idx__10086];
    var val_or_node__10088 = this__10083.arr[2 * idx__10086 + 1];
    if(key_or_nil__10087 == null) {
      var n__10089 = val_or_node__10088.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10089 === val_or_node__10088) {
        return inode__10084
      }else {
        if(!(n__10089 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10084, edit, 2 * idx__10086 + 1, n__10089)
        }else {
          if(this__10083.bitmap === bit__10085) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10084.edit_and_remove_pair(edit, bit__10085, idx__10086)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10087)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10084.edit_and_remove_pair(edit, bit__10085, idx__10086)
      }else {
        if("\ufdd0'else") {
          return inode__10084
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10090 = this;
  var inode__10091 = this;
  if(e === this__10090.edit) {
    return inode__10091
  }else {
    var n__10092 = cljs.core.bit_count.call(null, this__10090.bitmap);
    var new_arr__10093 = cljs.core.make_array.call(null, n__10092 < 0 ? 4 : 2 * (n__10092 + 1));
    cljs.core.array_copy.call(null, this__10090.arr, 0, new_arr__10093, 0, 2 * n__10092);
    return new cljs.core.BitmapIndexedNode(e, this__10090.bitmap, new_arr__10093)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10094 = this;
  var inode__10095 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10094.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10096 = this;
  var inode__10097 = this;
  var bit__10098 = 1 << (hash >>> shift & 31);
  if((this__10096.bitmap & bit__10098) === 0) {
    return not_found
  }else {
    var idx__10099 = cljs.core.bitmap_indexed_node_index.call(null, this__10096.bitmap, bit__10098);
    var key_or_nil__10100 = this__10096.arr[2 * idx__10099];
    var val_or_node__10101 = this__10096.arr[2 * idx__10099 + 1];
    if(key_or_nil__10100 == null) {
      return val_or_node__10101.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10100)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10100, val_or_node__10101], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10102 = this;
  var inode__10103 = this;
  var bit__10104 = 1 << (hash >>> shift & 31);
  if((this__10102.bitmap & bit__10104) === 0) {
    return inode__10103
  }else {
    var idx__10105 = cljs.core.bitmap_indexed_node_index.call(null, this__10102.bitmap, bit__10104);
    var key_or_nil__10106 = this__10102.arr[2 * idx__10105];
    var val_or_node__10107 = this__10102.arr[2 * idx__10105 + 1];
    if(key_or_nil__10106 == null) {
      var n__10108 = val_or_node__10107.inode_without(shift + 5, hash, key);
      if(n__10108 === val_or_node__10107) {
        return inode__10103
      }else {
        if(!(n__10108 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10102.bitmap, cljs.core.clone_and_set.call(null, this__10102.arr, 2 * idx__10105 + 1, n__10108))
        }else {
          if(this__10102.bitmap === bit__10104) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10102.bitmap ^ bit__10104, cljs.core.remove_pair.call(null, this__10102.arr, idx__10105))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10106)) {
        return new cljs.core.BitmapIndexedNode(null, this__10102.bitmap ^ bit__10104, cljs.core.remove_pair.call(null, this__10102.arr, idx__10105))
      }else {
        if("\ufdd0'else") {
          return inode__10103
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10109 = this;
  var inode__10110 = this;
  var bit__10111 = 1 << (hash >>> shift & 31);
  var idx__10112 = cljs.core.bitmap_indexed_node_index.call(null, this__10109.bitmap, bit__10111);
  if((this__10109.bitmap & bit__10111) === 0) {
    var n__10113 = cljs.core.bit_count.call(null, this__10109.bitmap);
    if(n__10113 >= 16) {
      var nodes__10114 = cljs.core.make_array.call(null, 32);
      var jdx__10115 = hash >>> shift & 31;
      nodes__10114[jdx__10115] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10116 = 0;
      var j__10117 = 0;
      while(true) {
        if(i__10116 < 32) {
          if((this__10109.bitmap >>> i__10116 & 1) === 0) {
            var G__10132 = i__10116 + 1;
            var G__10133 = j__10117;
            i__10116 = G__10132;
            j__10117 = G__10133;
            continue
          }else {
            nodes__10114[i__10116] = !(this__10109.arr[j__10117] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10109.arr[j__10117]), this__10109.arr[j__10117], this__10109.arr[j__10117 + 1], added_leaf_QMARK_) : this__10109.arr[j__10117 + 1];
            var G__10134 = i__10116 + 1;
            var G__10135 = j__10117 + 2;
            i__10116 = G__10134;
            j__10117 = G__10135;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10113 + 1, nodes__10114)
    }else {
      var new_arr__10118 = cljs.core.make_array.call(null, 2 * (n__10113 + 1));
      cljs.core.array_copy.call(null, this__10109.arr, 0, new_arr__10118, 0, 2 * idx__10112);
      new_arr__10118[2 * idx__10112] = key;
      new_arr__10118[2 * idx__10112 + 1] = val;
      cljs.core.array_copy.call(null, this__10109.arr, 2 * idx__10112, new_arr__10118, 2 * (idx__10112 + 1), 2 * (n__10113 - idx__10112));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10109.bitmap | bit__10111, new_arr__10118)
    }
  }else {
    var key_or_nil__10119 = this__10109.arr[2 * idx__10112];
    var val_or_node__10120 = this__10109.arr[2 * idx__10112 + 1];
    if(key_or_nil__10119 == null) {
      var n__10121 = val_or_node__10120.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10121 === val_or_node__10120) {
        return inode__10110
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10109.bitmap, cljs.core.clone_and_set.call(null, this__10109.arr, 2 * idx__10112 + 1, n__10121))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10119)) {
        if(val === val_or_node__10120) {
          return inode__10110
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10109.bitmap, cljs.core.clone_and_set.call(null, this__10109.arr, 2 * idx__10112 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10109.bitmap, cljs.core.clone_and_set.call(null, this__10109.arr, 2 * idx__10112, null, 2 * idx__10112 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10119, val_or_node__10120, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10122 = this;
  var inode__10123 = this;
  var bit__10124 = 1 << (hash >>> shift & 31);
  if((this__10122.bitmap & bit__10124) === 0) {
    return not_found
  }else {
    var idx__10125 = cljs.core.bitmap_indexed_node_index.call(null, this__10122.bitmap, bit__10124);
    var key_or_nil__10126 = this__10122.arr[2 * idx__10125];
    var val_or_node__10127 = this__10122.arr[2 * idx__10125 + 1];
    if(key_or_nil__10126 == null) {
      return val_or_node__10127.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10126)) {
        return val_or_node__10127
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10143 = array_node.arr;
  var len__10144 = 2 * (array_node.cnt - 1);
  var new_arr__10145 = cljs.core.make_array.call(null, len__10144);
  var i__10146 = 0;
  var j__10147 = 1;
  var bitmap__10148 = 0;
  while(true) {
    if(i__10146 < len__10144) {
      if(function() {
        var and__3822__auto____10149 = !(i__10146 === idx);
        if(and__3822__auto____10149) {
          return!(arr__10143[i__10146] == null)
        }else {
          return and__3822__auto____10149
        }
      }()) {
        new_arr__10145[j__10147] = arr__10143[i__10146];
        var G__10150 = i__10146 + 1;
        var G__10151 = j__10147 + 2;
        var G__10152 = bitmap__10148 | 1 << i__10146;
        i__10146 = G__10150;
        j__10147 = G__10151;
        bitmap__10148 = G__10152;
        continue
      }else {
        var G__10153 = i__10146 + 1;
        var G__10154 = j__10147;
        var G__10155 = bitmap__10148;
        i__10146 = G__10153;
        j__10147 = G__10154;
        bitmap__10148 = G__10155;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10148, new_arr__10145)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10156 = this;
  var inode__10157 = this;
  var idx__10158 = hash >>> shift & 31;
  var node__10159 = this__10156.arr[idx__10158];
  if(node__10159 == null) {
    var editable__10160 = cljs.core.edit_and_set.call(null, inode__10157, edit, idx__10158, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10160.cnt = editable__10160.cnt + 1;
    return editable__10160
  }else {
    var n__10161 = node__10159.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10161 === node__10159) {
      return inode__10157
    }else {
      return cljs.core.edit_and_set.call(null, inode__10157, edit, idx__10158, n__10161)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10162 = this;
  var inode__10163 = this;
  return cljs.core.create_array_node_seq.call(null, this__10162.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10164 = this;
  var inode__10165 = this;
  var idx__10166 = hash >>> shift & 31;
  var node__10167 = this__10164.arr[idx__10166];
  if(node__10167 == null) {
    return inode__10165
  }else {
    var n__10168 = node__10167.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10168 === node__10167) {
      return inode__10165
    }else {
      if(n__10168 == null) {
        if(this__10164.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10165, edit, idx__10166)
        }else {
          var editable__10169 = cljs.core.edit_and_set.call(null, inode__10165, edit, idx__10166, n__10168);
          editable__10169.cnt = editable__10169.cnt - 1;
          return editable__10169
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10165, edit, idx__10166, n__10168)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10170 = this;
  var inode__10171 = this;
  if(e === this__10170.edit) {
    return inode__10171
  }else {
    return new cljs.core.ArrayNode(e, this__10170.cnt, this__10170.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10172 = this;
  var inode__10173 = this;
  var len__10174 = this__10172.arr.length;
  var i__10175 = 0;
  var init__10176 = init;
  while(true) {
    if(i__10175 < len__10174) {
      var node__10177 = this__10172.arr[i__10175];
      if(!(node__10177 == null)) {
        var init__10178 = node__10177.kv_reduce(f, init__10176);
        if(cljs.core.reduced_QMARK_.call(null, init__10178)) {
          return cljs.core.deref.call(null, init__10178)
        }else {
          var G__10197 = i__10175 + 1;
          var G__10198 = init__10178;
          i__10175 = G__10197;
          init__10176 = G__10198;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10176
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10179 = this;
  var inode__10180 = this;
  var idx__10181 = hash >>> shift & 31;
  var node__10182 = this__10179.arr[idx__10181];
  if(!(node__10182 == null)) {
    return node__10182.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10183 = this;
  var inode__10184 = this;
  var idx__10185 = hash >>> shift & 31;
  var node__10186 = this__10183.arr[idx__10185];
  if(!(node__10186 == null)) {
    var n__10187 = node__10186.inode_without(shift + 5, hash, key);
    if(n__10187 === node__10186) {
      return inode__10184
    }else {
      if(n__10187 == null) {
        if(this__10183.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10184, null, idx__10185)
        }else {
          return new cljs.core.ArrayNode(null, this__10183.cnt - 1, cljs.core.clone_and_set.call(null, this__10183.arr, idx__10185, n__10187))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10183.cnt, cljs.core.clone_and_set.call(null, this__10183.arr, idx__10185, n__10187))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10184
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10188 = this;
  var inode__10189 = this;
  var idx__10190 = hash >>> shift & 31;
  var node__10191 = this__10188.arr[idx__10190];
  if(node__10191 == null) {
    return new cljs.core.ArrayNode(null, this__10188.cnt + 1, cljs.core.clone_and_set.call(null, this__10188.arr, idx__10190, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10192 = node__10191.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10192 === node__10191) {
      return inode__10189
    }else {
      return new cljs.core.ArrayNode(null, this__10188.cnt, cljs.core.clone_and_set.call(null, this__10188.arr, idx__10190, n__10192))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10193 = this;
  var inode__10194 = this;
  var idx__10195 = hash >>> shift & 31;
  var node__10196 = this__10193.arr[idx__10195];
  if(!(node__10196 == null)) {
    return node__10196.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10201 = 2 * cnt;
  var i__10202 = 0;
  while(true) {
    if(i__10202 < lim__10201) {
      if(cljs.core.key_test.call(null, key, arr[i__10202])) {
        return i__10202
      }else {
        var G__10203 = i__10202 + 2;
        i__10202 = G__10203;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10204 = this;
  var inode__10205 = this;
  if(hash === this__10204.collision_hash) {
    var idx__10206 = cljs.core.hash_collision_node_find_index.call(null, this__10204.arr, this__10204.cnt, key);
    if(idx__10206 === -1) {
      if(this__10204.arr.length > 2 * this__10204.cnt) {
        var editable__10207 = cljs.core.edit_and_set.call(null, inode__10205, edit, 2 * this__10204.cnt, key, 2 * this__10204.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10207.cnt = editable__10207.cnt + 1;
        return editable__10207
      }else {
        var len__10208 = this__10204.arr.length;
        var new_arr__10209 = cljs.core.make_array.call(null, len__10208 + 2);
        cljs.core.array_copy.call(null, this__10204.arr, 0, new_arr__10209, 0, len__10208);
        new_arr__10209[len__10208] = key;
        new_arr__10209[len__10208 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10205.ensure_editable_array(edit, this__10204.cnt + 1, new_arr__10209)
      }
    }else {
      if(this__10204.arr[idx__10206 + 1] === val) {
        return inode__10205
      }else {
        return cljs.core.edit_and_set.call(null, inode__10205, edit, idx__10206 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10204.collision_hash >>> shift & 31), [null, inode__10205, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10210 = this;
  var inode__10211 = this;
  return cljs.core.create_inode_seq.call(null, this__10210.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10212 = this;
  var inode__10213 = this;
  var idx__10214 = cljs.core.hash_collision_node_find_index.call(null, this__10212.arr, this__10212.cnt, key);
  if(idx__10214 === -1) {
    return inode__10213
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10212.cnt === 1) {
      return null
    }else {
      var editable__10215 = inode__10213.ensure_editable(edit);
      var earr__10216 = editable__10215.arr;
      earr__10216[idx__10214] = earr__10216[2 * this__10212.cnt - 2];
      earr__10216[idx__10214 + 1] = earr__10216[2 * this__10212.cnt - 1];
      earr__10216[2 * this__10212.cnt - 1] = null;
      earr__10216[2 * this__10212.cnt - 2] = null;
      editable__10215.cnt = editable__10215.cnt - 1;
      return editable__10215
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10217 = this;
  var inode__10218 = this;
  if(e === this__10217.edit) {
    return inode__10218
  }else {
    var new_arr__10219 = cljs.core.make_array.call(null, 2 * (this__10217.cnt + 1));
    cljs.core.array_copy.call(null, this__10217.arr, 0, new_arr__10219, 0, 2 * this__10217.cnt);
    return new cljs.core.HashCollisionNode(e, this__10217.collision_hash, this__10217.cnt, new_arr__10219)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10220 = this;
  var inode__10221 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10220.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10222 = this;
  var inode__10223 = this;
  var idx__10224 = cljs.core.hash_collision_node_find_index.call(null, this__10222.arr, this__10222.cnt, key);
  if(idx__10224 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10222.arr[idx__10224])) {
      return cljs.core.PersistentVector.fromArray([this__10222.arr[idx__10224], this__10222.arr[idx__10224 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10225 = this;
  var inode__10226 = this;
  var idx__10227 = cljs.core.hash_collision_node_find_index.call(null, this__10225.arr, this__10225.cnt, key);
  if(idx__10227 === -1) {
    return inode__10226
  }else {
    if(this__10225.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10225.collision_hash, this__10225.cnt - 1, cljs.core.remove_pair.call(null, this__10225.arr, cljs.core.quot.call(null, idx__10227, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10228 = this;
  var inode__10229 = this;
  if(hash === this__10228.collision_hash) {
    var idx__10230 = cljs.core.hash_collision_node_find_index.call(null, this__10228.arr, this__10228.cnt, key);
    if(idx__10230 === -1) {
      var len__10231 = this__10228.arr.length;
      var new_arr__10232 = cljs.core.make_array.call(null, len__10231 + 2);
      cljs.core.array_copy.call(null, this__10228.arr, 0, new_arr__10232, 0, len__10231);
      new_arr__10232[len__10231] = key;
      new_arr__10232[len__10231 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10228.collision_hash, this__10228.cnt + 1, new_arr__10232)
    }else {
      if(cljs.core._EQ_.call(null, this__10228.arr[idx__10230], val)) {
        return inode__10229
      }else {
        return new cljs.core.HashCollisionNode(null, this__10228.collision_hash, this__10228.cnt, cljs.core.clone_and_set.call(null, this__10228.arr, idx__10230 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10228.collision_hash >>> shift & 31), [null, inode__10229])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10233 = this;
  var inode__10234 = this;
  var idx__10235 = cljs.core.hash_collision_node_find_index.call(null, this__10233.arr, this__10233.cnt, key);
  if(idx__10235 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10233.arr[idx__10235])) {
      return this__10233.arr[idx__10235 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10236 = this;
  var inode__10237 = this;
  if(e === this__10236.edit) {
    this__10236.arr = array;
    this__10236.cnt = count;
    return inode__10237
  }else {
    return new cljs.core.HashCollisionNode(this__10236.edit, this__10236.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10242 = cljs.core.hash.call(null, key1);
    if(key1hash__10242 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10242, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10243 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10242, key1, val1, added_leaf_QMARK___10243).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10243)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10244 = cljs.core.hash.call(null, key1);
    if(key1hash__10244 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10244, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10245 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10244, key1, val1, added_leaf_QMARK___10245).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10245)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10246 = this;
  var h__2247__auto____10247 = this__10246.__hash;
  if(!(h__2247__auto____10247 == null)) {
    return h__2247__auto____10247
  }else {
    var h__2247__auto____10248 = cljs.core.hash_coll.call(null, coll);
    this__10246.__hash = h__2247__auto____10248;
    return h__2247__auto____10248
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10249 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10250 = this;
  var this__10251 = this;
  return cljs.core.pr_str.call(null, this__10251)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10252 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10253 = this;
  if(this__10253.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10253.nodes[this__10253.i], this__10253.nodes[this__10253.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10253.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10254 = this;
  if(this__10254.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10254.nodes, this__10254.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10254.nodes, this__10254.i, cljs.core.next.call(null, this__10254.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10255 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10256 = this;
  return new cljs.core.NodeSeq(meta, this__10256.nodes, this__10256.i, this__10256.s, this__10256.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10257 = this;
  return this__10257.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10258 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10258.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10265 = nodes.length;
      var j__10266 = i;
      while(true) {
        if(j__10266 < len__10265) {
          if(!(nodes[j__10266] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10266, null, null)
          }else {
            var temp__3971__auto____10267 = nodes[j__10266 + 1];
            if(cljs.core.truth_(temp__3971__auto____10267)) {
              var node__10268 = temp__3971__auto____10267;
              var temp__3971__auto____10269 = node__10268.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10269)) {
                var node_seq__10270 = temp__3971__auto____10269;
                return new cljs.core.NodeSeq(null, nodes, j__10266 + 2, node_seq__10270, null)
              }else {
                var G__10271 = j__10266 + 2;
                j__10266 = G__10271;
                continue
              }
            }else {
              var G__10272 = j__10266 + 2;
              j__10266 = G__10272;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10273 = this;
  var h__2247__auto____10274 = this__10273.__hash;
  if(!(h__2247__auto____10274 == null)) {
    return h__2247__auto____10274
  }else {
    var h__2247__auto____10275 = cljs.core.hash_coll.call(null, coll);
    this__10273.__hash = h__2247__auto____10275;
    return h__2247__auto____10275
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10276 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10277 = this;
  var this__10278 = this;
  return cljs.core.pr_str.call(null, this__10278)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10279 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10280 = this;
  return cljs.core.first.call(null, this__10280.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10281 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10281.nodes, this__10281.i, cljs.core.next.call(null, this__10281.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10282 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10283 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10283.nodes, this__10283.i, this__10283.s, this__10283.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10284 = this;
  return this__10284.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10285 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10285.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10292 = nodes.length;
      var j__10293 = i;
      while(true) {
        if(j__10293 < len__10292) {
          var temp__3971__auto____10294 = nodes[j__10293];
          if(cljs.core.truth_(temp__3971__auto____10294)) {
            var nj__10295 = temp__3971__auto____10294;
            var temp__3971__auto____10296 = nj__10295.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10296)) {
              var ns__10297 = temp__3971__auto____10296;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10293 + 1, ns__10297, null)
            }else {
              var G__10298 = j__10293 + 1;
              j__10293 = G__10298;
              continue
            }
          }else {
            var G__10299 = j__10293 + 1;
            j__10293 = G__10299;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10302 = this;
  return new cljs.core.TransientHashMap({}, this__10302.root, this__10302.cnt, this__10302.has_nil_QMARK_, this__10302.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10303 = this;
  var h__2247__auto____10304 = this__10303.__hash;
  if(!(h__2247__auto____10304 == null)) {
    return h__2247__auto____10304
  }else {
    var h__2247__auto____10305 = cljs.core.hash_imap.call(null, coll);
    this__10303.__hash = h__2247__auto____10305;
    return h__2247__auto____10305
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10306 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10307 = this;
  if(k == null) {
    if(this__10307.has_nil_QMARK_) {
      return this__10307.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10307.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10307.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10308 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10309 = this__10308.has_nil_QMARK_;
      if(and__3822__auto____10309) {
        return v === this__10308.nil_val
      }else {
        return and__3822__auto____10309
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10308.meta, this__10308.has_nil_QMARK_ ? this__10308.cnt : this__10308.cnt + 1, this__10308.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10310 = new cljs.core.Box(false);
    var new_root__10311 = (this__10308.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10308.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10310);
    if(new_root__10311 === this__10308.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10308.meta, added_leaf_QMARK___10310.val ? this__10308.cnt + 1 : this__10308.cnt, new_root__10311, this__10308.has_nil_QMARK_, this__10308.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10312 = this;
  if(k == null) {
    return this__10312.has_nil_QMARK_
  }else {
    if(this__10312.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10312.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10335 = null;
  var G__10335__2 = function(this_sym10313, k) {
    var this__10315 = this;
    var this_sym10313__10316 = this;
    var coll__10317 = this_sym10313__10316;
    return coll__10317.cljs$core$ILookup$_lookup$arity$2(coll__10317, k)
  };
  var G__10335__3 = function(this_sym10314, k, not_found) {
    var this__10315 = this;
    var this_sym10314__10318 = this;
    var coll__10319 = this_sym10314__10318;
    return coll__10319.cljs$core$ILookup$_lookup$arity$3(coll__10319, k, not_found)
  };
  G__10335 = function(this_sym10314, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10335__2.call(this, this_sym10314, k);
      case 3:
        return G__10335__3.call(this, this_sym10314, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10335
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10300, args10301) {
  var this__10320 = this;
  return this_sym10300.call.apply(this_sym10300, [this_sym10300].concat(args10301.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10321 = this;
  var init__10322 = this__10321.has_nil_QMARK_ ? f.call(null, init, null, this__10321.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10322)) {
    return cljs.core.deref.call(null, init__10322)
  }else {
    if(!(this__10321.root == null)) {
      return this__10321.root.kv_reduce(f, init__10322)
    }else {
      if("\ufdd0'else") {
        return init__10322
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10323 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10324 = this;
  var this__10325 = this;
  return cljs.core.pr_str.call(null, this__10325)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10326 = this;
  if(this__10326.cnt > 0) {
    var s__10327 = !(this__10326.root == null) ? this__10326.root.inode_seq() : null;
    if(this__10326.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10326.nil_val], true), s__10327)
    }else {
      return s__10327
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10328 = this;
  return this__10328.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10329 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10330 = this;
  return new cljs.core.PersistentHashMap(meta, this__10330.cnt, this__10330.root, this__10330.has_nil_QMARK_, this__10330.nil_val, this__10330.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10331 = this;
  return this__10331.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10332 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10332.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10333 = this;
  if(k == null) {
    if(this__10333.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10333.meta, this__10333.cnt - 1, this__10333.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10333.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10334 = this__10333.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10334 === this__10333.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10333.meta, this__10333.cnt - 1, new_root__10334, this__10333.has_nil_QMARK_, this__10333.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10336 = ks.length;
  var i__10337 = 0;
  var out__10338 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10337 < len__10336) {
      var G__10339 = i__10337 + 1;
      var G__10340 = cljs.core.assoc_BANG_.call(null, out__10338, ks[i__10337], vs[i__10337]);
      i__10337 = G__10339;
      out__10338 = G__10340;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10338)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10341 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10342 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10343 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10344 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10345 = this;
  if(k == null) {
    if(this__10345.has_nil_QMARK_) {
      return this__10345.nil_val
    }else {
      return null
    }
  }else {
    if(this__10345.root == null) {
      return null
    }else {
      return this__10345.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10346 = this;
  if(k == null) {
    if(this__10346.has_nil_QMARK_) {
      return this__10346.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10346.root == null) {
      return not_found
    }else {
      return this__10346.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10347 = this;
  if(this__10347.edit) {
    return this__10347.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10348 = this;
  var tcoll__10349 = this;
  if(this__10348.edit) {
    if(function() {
      var G__10350__10351 = o;
      if(G__10350__10351) {
        if(function() {
          var or__3824__auto____10352 = G__10350__10351.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10352) {
            return or__3824__auto____10352
          }else {
            return G__10350__10351.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10350__10351.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10350__10351)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10350__10351)
      }
    }()) {
      return tcoll__10349.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10353 = cljs.core.seq.call(null, o);
      var tcoll__10354 = tcoll__10349;
      while(true) {
        var temp__3971__auto____10355 = cljs.core.first.call(null, es__10353);
        if(cljs.core.truth_(temp__3971__auto____10355)) {
          var e__10356 = temp__3971__auto____10355;
          var G__10367 = cljs.core.next.call(null, es__10353);
          var G__10368 = tcoll__10354.assoc_BANG_(cljs.core.key.call(null, e__10356), cljs.core.val.call(null, e__10356));
          es__10353 = G__10367;
          tcoll__10354 = G__10368;
          continue
        }else {
          return tcoll__10354
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10357 = this;
  var tcoll__10358 = this;
  if(this__10357.edit) {
    if(k == null) {
      if(this__10357.nil_val === v) {
      }else {
        this__10357.nil_val = v
      }
      if(this__10357.has_nil_QMARK_) {
      }else {
        this__10357.count = this__10357.count + 1;
        this__10357.has_nil_QMARK_ = true
      }
      return tcoll__10358
    }else {
      var added_leaf_QMARK___10359 = new cljs.core.Box(false);
      var node__10360 = (this__10357.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10357.root).inode_assoc_BANG_(this__10357.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10359);
      if(node__10360 === this__10357.root) {
      }else {
        this__10357.root = node__10360
      }
      if(added_leaf_QMARK___10359.val) {
        this__10357.count = this__10357.count + 1
      }else {
      }
      return tcoll__10358
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10361 = this;
  var tcoll__10362 = this;
  if(this__10361.edit) {
    if(k == null) {
      if(this__10361.has_nil_QMARK_) {
        this__10361.has_nil_QMARK_ = false;
        this__10361.nil_val = null;
        this__10361.count = this__10361.count - 1;
        return tcoll__10362
      }else {
        return tcoll__10362
      }
    }else {
      if(this__10361.root == null) {
        return tcoll__10362
      }else {
        var removed_leaf_QMARK___10363 = new cljs.core.Box(false);
        var node__10364 = this__10361.root.inode_without_BANG_(this__10361.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10363);
        if(node__10364 === this__10361.root) {
        }else {
          this__10361.root = node__10364
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10363[0])) {
          this__10361.count = this__10361.count - 1
        }else {
        }
        return tcoll__10362
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10365 = this;
  var tcoll__10366 = this;
  if(this__10365.edit) {
    this__10365.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10365.count, this__10365.root, this__10365.has_nil_QMARK_, this__10365.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10371 = node;
  var stack__10372 = stack;
  while(true) {
    if(!(t__10371 == null)) {
      var G__10373 = ascending_QMARK_ ? t__10371.left : t__10371.right;
      var G__10374 = cljs.core.conj.call(null, stack__10372, t__10371);
      t__10371 = G__10373;
      stack__10372 = G__10374;
      continue
    }else {
      return stack__10372
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850574
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10375 = this;
  var h__2247__auto____10376 = this__10375.__hash;
  if(!(h__2247__auto____10376 == null)) {
    return h__2247__auto____10376
  }else {
    var h__2247__auto____10377 = cljs.core.hash_coll.call(null, coll);
    this__10375.__hash = h__2247__auto____10377;
    return h__2247__auto____10377
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10378 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10379 = this;
  var this__10380 = this;
  return cljs.core.pr_str.call(null, this__10380)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10381 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10382 = this;
  if(this__10382.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10382.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10383 = this;
  return cljs.core.peek.call(null, this__10383.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10384 = this;
  var t__10385 = cljs.core.first.call(null, this__10384.stack);
  var next_stack__10386 = cljs.core.tree_map_seq_push.call(null, this__10384.ascending_QMARK_ ? t__10385.right : t__10385.left, cljs.core.next.call(null, this__10384.stack), this__10384.ascending_QMARK_);
  if(!(next_stack__10386 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10386, this__10384.ascending_QMARK_, this__10384.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10387 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10388 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10388.stack, this__10388.ascending_QMARK_, this__10388.cnt, this__10388.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10389 = this;
  return this__10389.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10390 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10390.meta)
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10392 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10392) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10392
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10394 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10394) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10394
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10398 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10398)) {
    return cljs.core.deref.call(null, init__10398)
  }else {
    var init__10399 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10398) : init__10398;
    if(cljs.core.reduced_QMARK_.call(null, init__10399)) {
      return cljs.core.deref.call(null, init__10399)
    }else {
      var init__10400 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10399) : init__10399;
      if(cljs.core.reduced_QMARK_.call(null, init__10400)) {
        return cljs.core.deref.call(null, init__10400)
      }else {
        return init__10400
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10403 = this;
  var h__2247__auto____10404 = this__10403.__hash;
  if(!(h__2247__auto____10404 == null)) {
    return h__2247__auto____10404
  }else {
    var h__2247__auto____10405 = cljs.core.hash_coll.call(null, coll);
    this__10403.__hash = h__2247__auto____10405;
    return h__2247__auto____10405
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10406 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10407 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10408 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10408.key, this__10408.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10456 = null;
  var G__10456__2 = function(this_sym10409, k) {
    var this__10411 = this;
    var this_sym10409__10412 = this;
    var node__10413 = this_sym10409__10412;
    return node__10413.cljs$core$ILookup$_lookup$arity$2(node__10413, k)
  };
  var G__10456__3 = function(this_sym10410, k, not_found) {
    var this__10411 = this;
    var this_sym10410__10414 = this;
    var node__10415 = this_sym10410__10414;
    return node__10415.cljs$core$ILookup$_lookup$arity$3(node__10415, k, not_found)
  };
  G__10456 = function(this_sym10410, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10456__2.call(this, this_sym10410, k);
      case 3:
        return G__10456__3.call(this, this_sym10410, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10456
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10401, args10402) {
  var this__10416 = this;
  return this_sym10401.call.apply(this_sym10401, [this_sym10401].concat(args10402.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10417 = this;
  return cljs.core.PersistentVector.fromArray([this__10417.key, this__10417.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10418 = this;
  return this__10418.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10419 = this;
  return this__10419.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10420 = this;
  var node__10421 = this;
  return ins.balance_right(node__10421)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10422 = this;
  var node__10423 = this;
  return new cljs.core.RedNode(this__10422.key, this__10422.val, this__10422.left, this__10422.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10424 = this;
  var node__10425 = this;
  return cljs.core.balance_right_del.call(null, this__10424.key, this__10424.val, this__10424.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10426 = this;
  var node__10427 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10428 = this;
  var node__10429 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10429, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10430 = this;
  var node__10431 = this;
  return cljs.core.balance_left_del.call(null, this__10430.key, this__10430.val, del, this__10430.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10432 = this;
  var node__10433 = this;
  return ins.balance_left(node__10433)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10434 = this;
  var node__10435 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10435, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10457 = null;
  var G__10457__0 = function() {
    var this__10436 = this;
    var this__10438 = this;
    return cljs.core.pr_str.call(null, this__10438)
  };
  G__10457 = function() {
    switch(arguments.length) {
      case 0:
        return G__10457__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10457
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10439 = this;
  var node__10440 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10440, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10441 = this;
  var node__10442 = this;
  return node__10442
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10443 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10444 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10445 = this;
  return cljs.core.list.call(null, this__10445.key, this__10445.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10446 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10447 = this;
  return this__10447.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10448 = this;
  return cljs.core.PersistentVector.fromArray([this__10448.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10449 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10449.key, this__10449.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10450 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10451 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10451.key, this__10451.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10452 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10453 = this;
  if(n === 0) {
    return this__10453.key
  }else {
    if(n === 1) {
      return this__10453.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10454 = this;
  if(n === 0) {
    return this__10454.key
  }else {
    if(n === 1) {
      return this__10454.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10455 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10460 = this;
  var h__2247__auto____10461 = this__10460.__hash;
  if(!(h__2247__auto____10461 == null)) {
    return h__2247__auto____10461
  }else {
    var h__2247__auto____10462 = cljs.core.hash_coll.call(null, coll);
    this__10460.__hash = h__2247__auto____10462;
    return h__2247__auto____10462
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10463 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10464 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10465 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10465.key, this__10465.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10513 = null;
  var G__10513__2 = function(this_sym10466, k) {
    var this__10468 = this;
    var this_sym10466__10469 = this;
    var node__10470 = this_sym10466__10469;
    return node__10470.cljs$core$ILookup$_lookup$arity$2(node__10470, k)
  };
  var G__10513__3 = function(this_sym10467, k, not_found) {
    var this__10468 = this;
    var this_sym10467__10471 = this;
    var node__10472 = this_sym10467__10471;
    return node__10472.cljs$core$ILookup$_lookup$arity$3(node__10472, k, not_found)
  };
  G__10513 = function(this_sym10467, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10513__2.call(this, this_sym10467, k);
      case 3:
        return G__10513__3.call(this, this_sym10467, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10513
}();
cljs.core.RedNode.prototype.apply = function(this_sym10458, args10459) {
  var this__10473 = this;
  return this_sym10458.call.apply(this_sym10458, [this_sym10458].concat(args10459.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10474 = this;
  return cljs.core.PersistentVector.fromArray([this__10474.key, this__10474.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10475 = this;
  return this__10475.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10476 = this;
  return this__10476.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10477 = this;
  var node__10478 = this;
  return new cljs.core.RedNode(this__10477.key, this__10477.val, this__10477.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10479 = this;
  var node__10480 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10481 = this;
  var node__10482 = this;
  return new cljs.core.RedNode(this__10481.key, this__10481.val, this__10481.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10483 = this;
  var node__10484 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10485 = this;
  var node__10486 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10486, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10487 = this;
  var node__10488 = this;
  return new cljs.core.RedNode(this__10487.key, this__10487.val, del, this__10487.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10489 = this;
  var node__10490 = this;
  return new cljs.core.RedNode(this__10489.key, this__10489.val, ins, this__10489.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10491 = this;
  var node__10492 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10491.left)) {
    return new cljs.core.RedNode(this__10491.key, this__10491.val, this__10491.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10491.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10491.right)) {
      return new cljs.core.RedNode(this__10491.right.key, this__10491.right.val, new cljs.core.BlackNode(this__10491.key, this__10491.val, this__10491.left, this__10491.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10491.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10492, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10514 = null;
  var G__10514__0 = function() {
    var this__10493 = this;
    var this__10495 = this;
    return cljs.core.pr_str.call(null, this__10495)
  };
  G__10514 = function() {
    switch(arguments.length) {
      case 0:
        return G__10514__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10514
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10496 = this;
  var node__10497 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10496.right)) {
    return new cljs.core.RedNode(this__10496.key, this__10496.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10496.left, null), this__10496.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10496.left)) {
      return new cljs.core.RedNode(this__10496.left.key, this__10496.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10496.left.left, null), new cljs.core.BlackNode(this__10496.key, this__10496.val, this__10496.left.right, this__10496.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10497, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10498 = this;
  var node__10499 = this;
  return new cljs.core.BlackNode(this__10498.key, this__10498.val, this__10498.left, this__10498.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10500 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10501 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10502 = this;
  return cljs.core.list.call(null, this__10502.key, this__10502.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10503 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10504 = this;
  return this__10504.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10505 = this;
  return cljs.core.PersistentVector.fromArray([this__10505.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10506 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10506.key, this__10506.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10507 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10508 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10508.key, this__10508.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10509 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10510 = this;
  if(n === 0) {
    return this__10510.key
  }else {
    if(n === 1) {
      return this__10510.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10511 = this;
  if(n === 0) {
    return this__10511.key
  }else {
    if(n === 1) {
      return this__10511.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10512 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10518 = comp.call(null, k, tree.key);
    if(c__10518 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10518 < 0) {
        var ins__10519 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10519 == null)) {
          return tree.add_left(ins__10519)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10520 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10520 == null)) {
            return tree.add_right(ins__10520)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10523 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10523)) {
            return new cljs.core.RedNode(app__10523.key, app__10523.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10523.left, null), new cljs.core.RedNode(right.key, right.val, app__10523.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10523, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10524 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10524)) {
              return new cljs.core.RedNode(app__10524.key, app__10524.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10524.left, null), new cljs.core.BlackNode(right.key, right.val, app__10524.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10524, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10530 = comp.call(null, k, tree.key);
    if(c__10530 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10530 < 0) {
        var del__10531 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____10532 = !(del__10531 == null);
          if(or__3824__auto____10532) {
            return or__3824__auto____10532
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10531, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10531, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10533 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____10534 = !(del__10533 == null);
            if(or__3824__auto____10534) {
              return or__3824__auto____10534
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10533)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10533, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10537 = tree.key;
  var c__10538 = comp.call(null, k, tk__10537);
  if(c__10538 === 0) {
    return tree.replace(tk__10537, v, tree.left, tree.right)
  }else {
    if(c__10538 < 0) {
      return tree.replace(tk__10537, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10537, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10541 = this;
  var h__2247__auto____10542 = this__10541.__hash;
  if(!(h__2247__auto____10542 == null)) {
    return h__2247__auto____10542
  }else {
    var h__2247__auto____10543 = cljs.core.hash_imap.call(null, coll);
    this__10541.__hash = h__2247__auto____10543;
    return h__2247__auto____10543
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10544 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10545 = this;
  var n__10546 = coll.entry_at(k);
  if(!(n__10546 == null)) {
    return n__10546.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10547 = this;
  var found__10548 = [null];
  var t__10549 = cljs.core.tree_map_add.call(null, this__10547.comp, this__10547.tree, k, v, found__10548);
  if(t__10549 == null) {
    var found_node__10550 = cljs.core.nth.call(null, found__10548, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10550.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10547.comp, cljs.core.tree_map_replace.call(null, this__10547.comp, this__10547.tree, k, v), this__10547.cnt, this__10547.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10547.comp, t__10549.blacken(), this__10547.cnt + 1, this__10547.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10551 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10585 = null;
  var G__10585__2 = function(this_sym10552, k) {
    var this__10554 = this;
    var this_sym10552__10555 = this;
    var coll__10556 = this_sym10552__10555;
    return coll__10556.cljs$core$ILookup$_lookup$arity$2(coll__10556, k)
  };
  var G__10585__3 = function(this_sym10553, k, not_found) {
    var this__10554 = this;
    var this_sym10553__10557 = this;
    var coll__10558 = this_sym10553__10557;
    return coll__10558.cljs$core$ILookup$_lookup$arity$3(coll__10558, k, not_found)
  };
  G__10585 = function(this_sym10553, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10585__2.call(this, this_sym10553, k);
      case 3:
        return G__10585__3.call(this, this_sym10553, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10585
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10539, args10540) {
  var this__10559 = this;
  return this_sym10539.call.apply(this_sym10539, [this_sym10539].concat(args10540.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10560 = this;
  if(!(this__10560.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10560.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10561 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10562 = this;
  if(this__10562.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10562.tree, false, this__10562.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10563 = this;
  var this__10564 = this;
  return cljs.core.pr_str.call(null, this__10564)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10565 = this;
  var coll__10566 = this;
  var t__10567 = this__10565.tree;
  while(true) {
    if(!(t__10567 == null)) {
      var c__10568 = this__10565.comp.call(null, k, t__10567.key);
      if(c__10568 === 0) {
        return t__10567
      }else {
        if(c__10568 < 0) {
          var G__10586 = t__10567.left;
          t__10567 = G__10586;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10587 = t__10567.right;
            t__10567 = G__10587;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10569 = this;
  if(this__10569.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10569.tree, ascending_QMARK_, this__10569.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10570 = this;
  if(this__10570.cnt > 0) {
    var stack__10571 = null;
    var t__10572 = this__10570.tree;
    while(true) {
      if(!(t__10572 == null)) {
        var c__10573 = this__10570.comp.call(null, k, t__10572.key);
        if(c__10573 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10571, t__10572), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10573 < 0) {
              var G__10588 = cljs.core.conj.call(null, stack__10571, t__10572);
              var G__10589 = t__10572.left;
              stack__10571 = G__10588;
              t__10572 = G__10589;
              continue
            }else {
              var G__10590 = stack__10571;
              var G__10591 = t__10572.right;
              stack__10571 = G__10590;
              t__10572 = G__10591;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10573 > 0) {
                var G__10592 = cljs.core.conj.call(null, stack__10571, t__10572);
                var G__10593 = t__10572.right;
                stack__10571 = G__10592;
                t__10572 = G__10593;
                continue
              }else {
                var G__10594 = stack__10571;
                var G__10595 = t__10572.left;
                stack__10571 = G__10594;
                t__10572 = G__10595;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10571 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10571, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10574 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10575 = this;
  return this__10575.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10576 = this;
  if(this__10576.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10576.tree, true, this__10576.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10577 = this;
  return this__10577.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10578 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10579 = this;
  return new cljs.core.PersistentTreeMap(this__10579.comp, this__10579.tree, this__10579.cnt, meta, this__10579.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10580 = this;
  return this__10580.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10581 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10581.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10582 = this;
  var found__10583 = [null];
  var t__10584 = cljs.core.tree_map_remove.call(null, this__10582.comp, this__10582.tree, k, found__10583);
  if(t__10584 == null) {
    if(cljs.core.nth.call(null, found__10583, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10582.comp, null, 0, this__10582.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10582.comp, t__10584.blacken(), this__10582.cnt - 1, this__10582.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10598 = cljs.core.seq.call(null, keyvals);
    var out__10599 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10598) {
        var G__10600 = cljs.core.nnext.call(null, in__10598);
        var G__10601 = cljs.core.assoc_BANG_.call(null, out__10599, cljs.core.first.call(null, in__10598), cljs.core.second.call(null, in__10598));
        in__10598 = G__10600;
        out__10599 = G__10601;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10599)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10602) {
    var keyvals = cljs.core.seq(arglist__10602);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10603) {
    var keyvals = cljs.core.seq(arglist__10603);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10607 = [];
    var obj__10608 = {};
    var kvs__10609 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10609) {
        ks__10607.push(cljs.core.first.call(null, kvs__10609));
        obj__10608[cljs.core.first.call(null, kvs__10609)] = cljs.core.second.call(null, kvs__10609);
        var G__10610 = cljs.core.nnext.call(null, kvs__10609);
        kvs__10609 = G__10610;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10607, obj__10608)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10611) {
    var keyvals = cljs.core.seq(arglist__10611);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10614 = cljs.core.seq.call(null, keyvals);
    var out__10615 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10614) {
        var G__10616 = cljs.core.nnext.call(null, in__10614);
        var G__10617 = cljs.core.assoc.call(null, out__10615, cljs.core.first.call(null, in__10614), cljs.core.second.call(null, in__10614));
        in__10614 = G__10616;
        out__10615 = G__10617;
        continue
      }else {
        return out__10615
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10618) {
    var keyvals = cljs.core.seq(arglist__10618);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10621 = cljs.core.seq.call(null, keyvals);
    var out__10622 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10621) {
        var G__10623 = cljs.core.nnext.call(null, in__10621);
        var G__10624 = cljs.core.assoc.call(null, out__10622, cljs.core.first.call(null, in__10621), cljs.core.second.call(null, in__10621));
        in__10621 = G__10623;
        out__10622 = G__10624;
        continue
      }else {
        return out__10622
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10625) {
    var comparator = cljs.core.first(arglist__10625);
    var keyvals = cljs.core.rest(arglist__10625);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10626_SHARP_, p2__10627_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10629 = p1__10626_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10629)) {
            return or__3824__auto____10629
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10627_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10630) {
    var maps = cljs.core.seq(arglist__10630);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10638 = function(m, e) {
        var k__10636 = cljs.core.first.call(null, e);
        var v__10637 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10636)) {
          return cljs.core.assoc.call(null, m, k__10636, f.call(null, cljs.core._lookup.call(null, m, k__10636, null), v__10637))
        }else {
          return cljs.core.assoc.call(null, m, k__10636, v__10637)
        }
      };
      var merge2__10640 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10638, function() {
          var or__3824__auto____10639 = m1;
          if(cljs.core.truth_(or__3824__auto____10639)) {
            return or__3824__auto____10639
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10640, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10641) {
    var f = cljs.core.first(arglist__10641);
    var maps = cljs.core.rest(arglist__10641);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10646 = cljs.core.ObjMap.EMPTY;
  var keys__10647 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10647) {
      var key__10648 = cljs.core.first.call(null, keys__10647);
      var entry__10649 = cljs.core._lookup.call(null, map, key__10648, "\ufdd0'cljs.core/not-found");
      var G__10650 = cljs.core.not_EQ_.call(null, entry__10649, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10646, key__10648, entry__10649) : ret__10646;
      var G__10651 = cljs.core.next.call(null, keys__10647);
      ret__10646 = G__10650;
      keys__10647 = G__10651;
      continue
    }else {
      return ret__10646
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10655 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10655.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10656 = this;
  var h__2247__auto____10657 = this__10656.__hash;
  if(!(h__2247__auto____10657 == null)) {
    return h__2247__auto____10657
  }else {
    var h__2247__auto____10658 = cljs.core.hash_iset.call(null, coll);
    this__10656.__hash = h__2247__auto____10658;
    return h__2247__auto____10658
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10659 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10660 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10660.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10681 = null;
  var G__10681__2 = function(this_sym10661, k) {
    var this__10663 = this;
    var this_sym10661__10664 = this;
    var coll__10665 = this_sym10661__10664;
    return coll__10665.cljs$core$ILookup$_lookup$arity$2(coll__10665, k)
  };
  var G__10681__3 = function(this_sym10662, k, not_found) {
    var this__10663 = this;
    var this_sym10662__10666 = this;
    var coll__10667 = this_sym10662__10666;
    return coll__10667.cljs$core$ILookup$_lookup$arity$3(coll__10667, k, not_found)
  };
  G__10681 = function(this_sym10662, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10681__2.call(this, this_sym10662, k);
      case 3:
        return G__10681__3.call(this, this_sym10662, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10681
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10653, args10654) {
  var this__10668 = this;
  return this_sym10653.call.apply(this_sym10653, [this_sym10653].concat(args10654.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10669 = this;
  return new cljs.core.PersistentHashSet(this__10669.meta, cljs.core.assoc.call(null, this__10669.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10670 = this;
  var this__10671 = this;
  return cljs.core.pr_str.call(null, this__10671)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10672 = this;
  return cljs.core.keys.call(null, this__10672.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10673 = this;
  return new cljs.core.PersistentHashSet(this__10673.meta, cljs.core.dissoc.call(null, this__10673.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10674 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10675 = this;
  var and__3822__auto____10676 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10676) {
    var and__3822__auto____10677 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10677) {
      return cljs.core.every_QMARK_.call(null, function(p1__10652_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10652_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10677
    }
  }else {
    return and__3822__auto____10676
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10678 = this;
  return new cljs.core.PersistentHashSet(meta, this__10678.hash_map, this__10678.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10679 = this;
  return this__10679.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10680 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10680.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10682 = cljs.core.count.call(null, items);
  var i__10683 = 0;
  var out__10684 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10683 < len__10682) {
      var G__10685 = i__10683 + 1;
      var G__10686 = cljs.core.conj_BANG_.call(null, out__10684, items[i__10683]);
      i__10683 = G__10685;
      out__10684 = G__10686;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10684)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10704 = null;
  var G__10704__2 = function(this_sym10690, k) {
    var this__10692 = this;
    var this_sym10690__10693 = this;
    var tcoll__10694 = this_sym10690__10693;
    if(cljs.core._lookup.call(null, this__10692.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10704__3 = function(this_sym10691, k, not_found) {
    var this__10692 = this;
    var this_sym10691__10695 = this;
    var tcoll__10696 = this_sym10691__10695;
    if(cljs.core._lookup.call(null, this__10692.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10704 = function(this_sym10691, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10704__2.call(this, this_sym10691, k);
      case 3:
        return G__10704__3.call(this, this_sym10691, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10704
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10688, args10689) {
  var this__10697 = this;
  return this_sym10688.call.apply(this_sym10688, [this_sym10688].concat(args10689.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10698 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10699 = this;
  if(cljs.core._lookup.call(null, this__10699.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10700 = this;
  return cljs.core.count.call(null, this__10700.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10701 = this;
  this__10701.transient_map = cljs.core.dissoc_BANG_.call(null, this__10701.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10702 = this;
  this__10702.transient_map = cljs.core.assoc_BANG_.call(null, this__10702.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10703 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10703.transient_map), null)
};
cljs.core.TransientHashSet;
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10707 = this;
  var h__2247__auto____10708 = this__10707.__hash;
  if(!(h__2247__auto____10708 == null)) {
    return h__2247__auto____10708
  }else {
    var h__2247__auto____10709 = cljs.core.hash_iset.call(null, coll);
    this__10707.__hash = h__2247__auto____10709;
    return h__2247__auto____10709
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10710 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10711 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10711.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10737 = null;
  var G__10737__2 = function(this_sym10712, k) {
    var this__10714 = this;
    var this_sym10712__10715 = this;
    var coll__10716 = this_sym10712__10715;
    return coll__10716.cljs$core$ILookup$_lookup$arity$2(coll__10716, k)
  };
  var G__10737__3 = function(this_sym10713, k, not_found) {
    var this__10714 = this;
    var this_sym10713__10717 = this;
    var coll__10718 = this_sym10713__10717;
    return coll__10718.cljs$core$ILookup$_lookup$arity$3(coll__10718, k, not_found)
  };
  G__10737 = function(this_sym10713, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10737__2.call(this, this_sym10713, k);
      case 3:
        return G__10737__3.call(this, this_sym10713, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10737
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10705, args10706) {
  var this__10719 = this;
  return this_sym10705.call.apply(this_sym10705, [this_sym10705].concat(args10706.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10720 = this;
  return new cljs.core.PersistentTreeSet(this__10720.meta, cljs.core.assoc.call(null, this__10720.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10721 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10721.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10722 = this;
  var this__10723 = this;
  return cljs.core.pr_str.call(null, this__10723)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10724 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10724.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10725 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10725.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10726 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10727 = this;
  return cljs.core._comparator.call(null, this__10727.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10728 = this;
  return cljs.core.keys.call(null, this__10728.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10729 = this;
  return new cljs.core.PersistentTreeSet(this__10729.meta, cljs.core.dissoc.call(null, this__10729.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10730 = this;
  return cljs.core.count.call(null, this__10730.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10731 = this;
  var and__3822__auto____10732 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10732) {
    var and__3822__auto____10733 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10733) {
      return cljs.core.every_QMARK_.call(null, function(p1__10687_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10687_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10733
    }
  }else {
    return and__3822__auto____10732
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10734 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10734.tree_map, this__10734.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10735 = this;
  return this__10735.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10736 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10736.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10742__delegate = function(keys) {
      var in__10740 = cljs.core.seq.call(null, keys);
      var out__10741 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10740)) {
          var G__10743 = cljs.core.next.call(null, in__10740);
          var G__10744 = cljs.core.conj_BANG_.call(null, out__10741, cljs.core.first.call(null, in__10740));
          in__10740 = G__10743;
          out__10741 = G__10744;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10741)
        }
        break
      }
    };
    var G__10742 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10742__delegate.call(this, keys)
    };
    G__10742.cljs$lang$maxFixedArity = 0;
    G__10742.cljs$lang$applyTo = function(arglist__10745) {
      var keys = cljs.core.seq(arglist__10745);
      return G__10742__delegate(keys)
    };
    G__10742.cljs$lang$arity$variadic = G__10742__delegate;
    return G__10742
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10746) {
    var keys = cljs.core.seq(arglist__10746);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10748) {
    var comparator = cljs.core.first(arglist__10748);
    var keys = cljs.core.rest(arglist__10748);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10754 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10755 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10755)) {
        var e__10756 = temp__3971__auto____10755;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10756))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10754, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10747_SHARP_) {
      var temp__3971__auto____10757 = cljs.core.find.call(null, smap, p1__10747_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10757)) {
        var e__10758 = temp__3971__auto____10757;
        return cljs.core.second.call(null, e__10758)
      }else {
        return p1__10747_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10788 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10781, seen) {
        while(true) {
          var vec__10782__10783 = p__10781;
          var f__10784 = cljs.core.nth.call(null, vec__10782__10783, 0, null);
          var xs__10785 = vec__10782__10783;
          var temp__3974__auto____10786 = cljs.core.seq.call(null, xs__10785);
          if(temp__3974__auto____10786) {
            var s__10787 = temp__3974__auto____10786;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10784)) {
              var G__10789 = cljs.core.rest.call(null, s__10787);
              var G__10790 = seen;
              p__10781 = G__10789;
              seen = G__10790;
              continue
            }else {
              return cljs.core.cons.call(null, f__10784, step.call(null, cljs.core.rest.call(null, s__10787), cljs.core.conj.call(null, seen, f__10784)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10788.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10793 = cljs.core.PersistentVector.EMPTY;
  var s__10794 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10794)) {
      var G__10795 = cljs.core.conj.call(null, ret__10793, cljs.core.first.call(null, s__10794));
      var G__10796 = cljs.core.next.call(null, s__10794);
      ret__10793 = G__10795;
      s__10794 = G__10796;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10793)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10799 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10799) {
        return or__3824__auto____10799
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10800 = x.lastIndexOf("/");
      if(i__10800 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10800 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10803 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10803) {
      return or__3824__auto____10803
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10804 = x.lastIndexOf("/");
    if(i__10804 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10804)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10811 = cljs.core.ObjMap.EMPTY;
  var ks__10812 = cljs.core.seq.call(null, keys);
  var vs__10813 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10814 = ks__10812;
      if(and__3822__auto____10814) {
        return vs__10813
      }else {
        return and__3822__auto____10814
      }
    }()) {
      var G__10815 = cljs.core.assoc.call(null, map__10811, cljs.core.first.call(null, ks__10812), cljs.core.first.call(null, vs__10813));
      var G__10816 = cljs.core.next.call(null, ks__10812);
      var G__10817 = cljs.core.next.call(null, vs__10813);
      map__10811 = G__10815;
      ks__10812 = G__10816;
      vs__10813 = G__10817;
      continue
    }else {
      return map__10811
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10820__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10805_SHARP_, p2__10806_SHARP_) {
        return max_key.call(null, k, p1__10805_SHARP_, p2__10806_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10820 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10820__delegate.call(this, k, x, y, more)
    };
    G__10820.cljs$lang$maxFixedArity = 3;
    G__10820.cljs$lang$applyTo = function(arglist__10821) {
      var k = cljs.core.first(arglist__10821);
      var x = cljs.core.first(cljs.core.next(arglist__10821));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10821)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10821)));
      return G__10820__delegate(k, x, y, more)
    };
    G__10820.cljs$lang$arity$variadic = G__10820__delegate;
    return G__10820
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10822__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10818_SHARP_, p2__10819_SHARP_) {
        return min_key.call(null, k, p1__10818_SHARP_, p2__10819_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10822 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10822__delegate.call(this, k, x, y, more)
    };
    G__10822.cljs$lang$maxFixedArity = 3;
    G__10822.cljs$lang$applyTo = function(arglist__10823) {
      var k = cljs.core.first(arglist__10823);
      var x = cljs.core.first(cljs.core.next(arglist__10823));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10823)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10823)));
      return G__10822__delegate(k, x, y, more)
    };
    G__10822.cljs$lang$arity$variadic = G__10822__delegate;
    return G__10822
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10826 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10826) {
        var s__10827 = temp__3974__auto____10826;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10827), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10827)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10830 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10830) {
      var s__10831 = temp__3974__auto____10830;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10831)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10831), take_while.call(null, pred, cljs.core.rest.call(null, s__10831)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10833 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10833.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10845 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10846 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10846)) {
        var vec__10847__10848 = temp__3974__auto____10846;
        var e__10849 = cljs.core.nth.call(null, vec__10847__10848, 0, null);
        var s__10850 = vec__10847__10848;
        if(cljs.core.truth_(include__10845.call(null, e__10849))) {
          return s__10850
        }else {
          return cljs.core.next.call(null, s__10850)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10845, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10851 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10851)) {
      var vec__10852__10853 = temp__3974__auto____10851;
      var e__10854 = cljs.core.nth.call(null, vec__10852__10853, 0, null);
      var s__10855 = vec__10852__10853;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10854)) ? s__10855 : cljs.core.next.call(null, s__10855))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10867 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10868 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10868)) {
        var vec__10869__10870 = temp__3974__auto____10868;
        var e__10871 = cljs.core.nth.call(null, vec__10869__10870, 0, null);
        var s__10872 = vec__10869__10870;
        if(cljs.core.truth_(include__10867.call(null, e__10871))) {
          return s__10872
        }else {
          return cljs.core.next.call(null, s__10872)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10867, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10873 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10873)) {
      var vec__10874__10875 = temp__3974__auto____10873;
      var e__10876 = cljs.core.nth.call(null, vec__10874__10875, 0, null);
      var s__10877 = vec__10874__10875;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10876)) ? s__10877 : cljs.core.next.call(null, s__10877))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10878 = this;
  var h__2247__auto____10879 = this__10878.__hash;
  if(!(h__2247__auto____10879 == null)) {
    return h__2247__auto____10879
  }else {
    var h__2247__auto____10880 = cljs.core.hash_coll.call(null, rng);
    this__10878.__hash = h__2247__auto____10880;
    return h__2247__auto____10880
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10881 = this;
  if(this__10881.step > 0) {
    if(this__10881.start + this__10881.step < this__10881.end) {
      return new cljs.core.Range(this__10881.meta, this__10881.start + this__10881.step, this__10881.end, this__10881.step, null)
    }else {
      return null
    }
  }else {
    if(this__10881.start + this__10881.step > this__10881.end) {
      return new cljs.core.Range(this__10881.meta, this__10881.start + this__10881.step, this__10881.end, this__10881.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10882 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10883 = this;
  var this__10884 = this;
  return cljs.core.pr_str.call(null, this__10884)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10885 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10886 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10887 = this;
  if(this__10887.step > 0) {
    if(this__10887.start < this__10887.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10887.start > this__10887.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10888 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10888.end - this__10888.start) / this__10888.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10889 = this;
  return this__10889.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10890 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10890.meta, this__10890.start + this__10890.step, this__10890.end, this__10890.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10891 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10892 = this;
  return new cljs.core.Range(meta, this__10892.start, this__10892.end, this__10892.step, this__10892.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10893 = this;
  return this__10893.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10894 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10894.start + n * this__10894.step
  }else {
    if(function() {
      var and__3822__auto____10895 = this__10894.start > this__10894.end;
      if(and__3822__auto____10895) {
        return this__10894.step === 0
      }else {
        return and__3822__auto____10895
      }
    }()) {
      return this__10894.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10896 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10896.start + n * this__10896.step
  }else {
    if(function() {
      var and__3822__auto____10897 = this__10896.start > this__10896.end;
      if(and__3822__auto____10897) {
        return this__10896.step === 0
      }else {
        return and__3822__auto____10897
      }
    }()) {
      return this__10896.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10898 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10898.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10901 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10901) {
      var s__10902 = temp__3974__auto____10901;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10902), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10902)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10909 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10909) {
      var s__10910 = temp__3974__auto____10909;
      var fst__10911 = cljs.core.first.call(null, s__10910);
      var fv__10912 = f.call(null, fst__10911);
      var run__10913 = cljs.core.cons.call(null, fst__10911, cljs.core.take_while.call(null, function(p1__10903_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10912, f.call(null, p1__10903_SHARP_))
      }, cljs.core.next.call(null, s__10910)));
      return cljs.core.cons.call(null, run__10913, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10913), s__10910))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10928 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10928) {
        var s__10929 = temp__3971__auto____10928;
        return reductions.call(null, f, cljs.core.first.call(null, s__10929), cljs.core.rest.call(null, s__10929))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10930 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10930) {
        var s__10931 = temp__3974__auto____10930;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10931)), cljs.core.rest.call(null, s__10931))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10934 = null;
      var G__10934__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10934__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10934__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10934__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10934__4 = function() {
        var G__10935__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10935 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10935__delegate.call(this, x, y, z, args)
        };
        G__10935.cljs$lang$maxFixedArity = 3;
        G__10935.cljs$lang$applyTo = function(arglist__10936) {
          var x = cljs.core.first(arglist__10936);
          var y = cljs.core.first(cljs.core.next(arglist__10936));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10936)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10936)));
          return G__10935__delegate(x, y, z, args)
        };
        G__10935.cljs$lang$arity$variadic = G__10935__delegate;
        return G__10935
      }();
      G__10934 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10934__0.call(this);
          case 1:
            return G__10934__1.call(this, x);
          case 2:
            return G__10934__2.call(this, x, y);
          case 3:
            return G__10934__3.call(this, x, y, z);
          default:
            return G__10934__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10934.cljs$lang$maxFixedArity = 3;
      G__10934.cljs$lang$applyTo = G__10934__4.cljs$lang$applyTo;
      return G__10934
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10937 = null;
      var G__10937__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10937__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10937__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10937__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10937__4 = function() {
        var G__10938__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10938 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10938__delegate.call(this, x, y, z, args)
        };
        G__10938.cljs$lang$maxFixedArity = 3;
        G__10938.cljs$lang$applyTo = function(arglist__10939) {
          var x = cljs.core.first(arglist__10939);
          var y = cljs.core.first(cljs.core.next(arglist__10939));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10939)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10939)));
          return G__10938__delegate(x, y, z, args)
        };
        G__10938.cljs$lang$arity$variadic = G__10938__delegate;
        return G__10938
      }();
      G__10937 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10937__0.call(this);
          case 1:
            return G__10937__1.call(this, x);
          case 2:
            return G__10937__2.call(this, x, y);
          case 3:
            return G__10937__3.call(this, x, y, z);
          default:
            return G__10937__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10937.cljs$lang$maxFixedArity = 3;
      G__10937.cljs$lang$applyTo = G__10937__4.cljs$lang$applyTo;
      return G__10937
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10940 = null;
      var G__10940__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10940__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10940__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10940__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10940__4 = function() {
        var G__10941__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10941 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10941__delegate.call(this, x, y, z, args)
        };
        G__10941.cljs$lang$maxFixedArity = 3;
        G__10941.cljs$lang$applyTo = function(arglist__10942) {
          var x = cljs.core.first(arglist__10942);
          var y = cljs.core.first(cljs.core.next(arglist__10942));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10942)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10942)));
          return G__10941__delegate(x, y, z, args)
        };
        G__10941.cljs$lang$arity$variadic = G__10941__delegate;
        return G__10941
      }();
      G__10940 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10940__0.call(this);
          case 1:
            return G__10940__1.call(this, x);
          case 2:
            return G__10940__2.call(this, x, y);
          case 3:
            return G__10940__3.call(this, x, y, z);
          default:
            return G__10940__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10940.cljs$lang$maxFixedArity = 3;
      G__10940.cljs$lang$applyTo = G__10940__4.cljs$lang$applyTo;
      return G__10940
    }()
  };
  var juxt__4 = function() {
    var G__10943__delegate = function(f, g, h, fs) {
      var fs__10933 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10944 = null;
        var G__10944__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10914_SHARP_, p2__10915_SHARP_) {
            return cljs.core.conj.call(null, p1__10914_SHARP_, p2__10915_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10933)
        };
        var G__10944__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10916_SHARP_, p2__10917_SHARP_) {
            return cljs.core.conj.call(null, p1__10916_SHARP_, p2__10917_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10933)
        };
        var G__10944__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10918_SHARP_, p2__10919_SHARP_) {
            return cljs.core.conj.call(null, p1__10918_SHARP_, p2__10919_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10933)
        };
        var G__10944__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10920_SHARP_, p2__10921_SHARP_) {
            return cljs.core.conj.call(null, p1__10920_SHARP_, p2__10921_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10933)
        };
        var G__10944__4 = function() {
          var G__10945__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10922_SHARP_, p2__10923_SHARP_) {
              return cljs.core.conj.call(null, p1__10922_SHARP_, cljs.core.apply.call(null, p2__10923_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10933)
          };
          var G__10945 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10945__delegate.call(this, x, y, z, args)
          };
          G__10945.cljs$lang$maxFixedArity = 3;
          G__10945.cljs$lang$applyTo = function(arglist__10946) {
            var x = cljs.core.first(arglist__10946);
            var y = cljs.core.first(cljs.core.next(arglist__10946));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10946)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10946)));
            return G__10945__delegate(x, y, z, args)
          };
          G__10945.cljs$lang$arity$variadic = G__10945__delegate;
          return G__10945
        }();
        G__10944 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10944__0.call(this);
            case 1:
              return G__10944__1.call(this, x);
            case 2:
              return G__10944__2.call(this, x, y);
            case 3:
              return G__10944__3.call(this, x, y, z);
            default:
              return G__10944__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10944.cljs$lang$maxFixedArity = 3;
        G__10944.cljs$lang$applyTo = G__10944__4.cljs$lang$applyTo;
        return G__10944
      }()
    };
    var G__10943 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10943__delegate.call(this, f, g, h, fs)
    };
    G__10943.cljs$lang$maxFixedArity = 3;
    G__10943.cljs$lang$applyTo = function(arglist__10947) {
      var f = cljs.core.first(arglist__10947);
      var g = cljs.core.first(cljs.core.next(arglist__10947));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10947)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10947)));
      return G__10943__delegate(f, g, h, fs)
    };
    G__10943.cljs$lang$arity$variadic = G__10943__delegate;
    return G__10943
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10950 = cljs.core.next.call(null, coll);
        coll = G__10950;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10949 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____10949) {
          return n > 0
        }else {
          return and__3822__auto____10949
        }
      }())) {
        var G__10951 = n - 1;
        var G__10952 = cljs.core.next.call(null, coll);
        n = G__10951;
        coll = G__10952;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10954 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10954), s)) {
    if(cljs.core.count.call(null, matches__10954) === 1) {
      return cljs.core.first.call(null, matches__10954)
    }else {
      return cljs.core.vec.call(null, matches__10954)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10956 = re.exec(s);
  if(matches__10956 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10956) === 1) {
      return cljs.core.first.call(null, matches__10956)
    }else {
      return cljs.core.vec.call(null, matches__10956)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10961 = cljs.core.re_find.call(null, re, s);
  var match_idx__10962 = s.search(re);
  var match_str__10963 = cljs.core.coll_QMARK_.call(null, match_data__10961) ? cljs.core.first.call(null, match_data__10961) : match_data__10961;
  var post_match__10964 = cljs.core.subs.call(null, s, match_idx__10962 + cljs.core.count.call(null, match_str__10963));
  if(cljs.core.truth_(match_data__10961)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10961, re_seq.call(null, re, post_match__10964))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10971__10972 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10973 = cljs.core.nth.call(null, vec__10971__10972, 0, null);
  var flags__10974 = cljs.core.nth.call(null, vec__10971__10972, 1, null);
  var pattern__10975 = cljs.core.nth.call(null, vec__10971__10972, 2, null);
  return new RegExp(pattern__10975, flags__10974)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10965_SHARP_) {
    return print_one.call(null, p1__10965_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var G__10979__10980 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  while(true) {
    if(G__10979__10980) {
      var o__10981 = cljs.core.first.call(null, G__10979__10980);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o__10981, writer, opts);
      var G__10982 = cljs.core.next.call(null, G__10979__10980);
      G__10979__10980 = G__10982;
      continue
    }else {
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var G__10986__10987 = cljs.core.seq.call(null, ss);
    while(true) {
      if(G__10986__10987) {
        var s__10988 = cljs.core.first.call(null, G__10986__10987);
        cljs.core._write.call(null, writer, s__10988);
        var G__10989 = cljs.core.next.call(null, G__10986__10987);
        G__10986__10987 = G__10989;
        continue
      }else {
        return null
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(goog.isDef(var_args)) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10990) {
    var writer = cljs.core.first(arglist__10990);
    var ss = cljs.core.rest(arglist__10990);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$lang$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var this__10991 = this;
  return this__10991.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var this__10992 = this;
  return null
};
cljs.core.StringBufferWriter;
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11002 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11002)) {
            var and__3822__auto____11006 = function() {
              var G__11003__11004 = obj;
              if(G__11003__11004) {
                if(function() {
                  var or__3824__auto____11005 = G__11003__11004.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11005) {
                    return or__3824__auto____11005
                  }else {
                    return G__11003__11004.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11003__11004.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11003__11004)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11003__11004)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11006)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11006
            }
          }else {
            return and__3822__auto____11002
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11007 = !(obj == null);
          if(and__3822__auto____11007) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11007
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11008__11009 = obj;
          if(G__11008__11009) {
            if(function() {
              var or__3824__auto____11010 = G__11008__11009.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11010) {
                return or__3824__auto____11010
              }else {
                return G__11008__11009.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11008__11009.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11008__11009)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11008__11009)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        if(cljs.core.truth_(function() {
          var and__3822__auto____11023 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11023)) {
            var and__3822__auto____11027 = function() {
              var G__11024__11025 = obj;
              if(G__11024__11025) {
                if(function() {
                  var or__3824__auto____11026 = G__11024__11025.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11026) {
                    return or__3824__auto____11026
                  }else {
                    return G__11024__11025.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11024__11025.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11024__11025)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11024__11025)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11027)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11027
            }
          }else {
            return and__3822__auto____11023
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(function() {
          var and__3822__auto____11028 = !(obj == null);
          if(and__3822__auto____11028) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11028
          }
        }()) {
          return obj.cljs$lang$ctorPrWriter(writer, opts)
        }else {
          if(function() {
            var G__11029__11030 = obj;
            if(G__11029__11030) {
              if(function() {
                var or__3824__auto____11031 = G__11029__11030.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if(or__3824__auto____11031) {
                  return or__3824__auto____11031
                }else {
                  return G__11029__11030.cljs$core$IPrintWithWriter$
                }
              }()) {
                return true
              }else {
                if(!G__11029__11030.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__11029__11030)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__11029__11030)
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts)
          }else {
            if(function() {
              var G__11032__11033 = obj;
              if(G__11032__11033) {
                if(function() {
                  var or__3824__auto____11034 = G__11032__11033.cljs$lang$protocol_mask$partition0$ & 536870912;
                  if(or__3824__auto____11034) {
                    return or__3824__auto____11034
                  }else {
                    return G__11032__11033.cljs$core$IPrintable$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11032__11033.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11032__11033)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11032__11033)
              }
            }()) {
              return cljs.core.apply.call(null, cljs.core.write_all, writer, cljs.core._pr_seq.call(null, obj, opts))
            }else {
              if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
              }else {
                if("\ufdd0'else") {
                  return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(obj)].join(""), ">")
                }else {
                  return null
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var G__11038__11039 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  while(true) {
    if(G__11038__11039) {
      var obj__11040 = cljs.core.first.call(null, G__11038__11039);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj__11040, writer, opts);
      var G__11041 = cljs.core.next.call(null, G__11038__11039);
      G__11038__11039 = G__11041;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb__11044 = new goog.string.StringBuffer;
  var writer__11045 = new cljs.core.StringBufferWriter(sb__11044);
  cljs.core.pr_seq_writer.call(null, objs, writer__11045, opts);
  cljs.core._flush.call(null, writer__11045);
  return sb__11044
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb__11047 = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb__11047.append("\n");
    return[cljs.core.str(sb__11047)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11048) {
    var objs = cljs.core.seq(arglist__11048);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11049) {
    var objs = cljs.core.seq(arglist__11049);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11050) {
    var objs = cljs.core.seq(arglist__11050);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11051) {
    var objs = cljs.core.seq(arglist__11051);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11052) {
    var objs = cljs.core.seq(arglist__11052);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11053) {
    var objs = cljs.core.seq(arglist__11053);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11054) {
    var objs = cljs.core.seq(arglist__11054);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11055) {
    var objs = cljs.core.seq(arglist__11055);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11056) {
    var fmt = cljs.core.first(arglist__11056);
    var args = cljs.core.rest(arglist__11056);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11057 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11057, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11058 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11058, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11059 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11059, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11060 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11060)) {
        var nspc__11061 = temp__3974__auto____11060;
        return[cljs.core.str(nspc__11061), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11062 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11062)) {
          var nspc__11063 = temp__3974__auto____11062;
          return[cljs.core.str(nspc__11063), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11064 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11064, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11066 = function(n, len) {
    var ns__11065 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11065) < len) {
        var G__11068 = [cljs.core.str("0"), cljs.core.str(ns__11065)].join("");
        ns__11065 = G__11068;
        continue
      }else {
        return ns__11065
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11066.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11066.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11066.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11066.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11066.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11066.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11067 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11067, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.HashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11069 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11069, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintWithWriter["number"] = true;
cljs.core._pr_writer["number"] = function(n, writer, opts) {
  1 / 0;
  return cljs.core._write.call(null, writer, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11070 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11070, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11071 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11071, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintWithWriter["boolean"] = true;
cljs.core._pr_writer["boolean"] = function(bool, writer, opts) {
  return cljs.core._write.call(null, writer, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintWithWriter["string"] = true;
cljs.core._pr_writer["string"] = function(obj, writer, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    cljs.core._write.call(null, writer, ":");
    var temp__3974__auto____11072 = cljs.core.namespace.call(null, obj);
    if(cljs.core.truth_(temp__3974__auto____11072)) {
      var nspc__11073 = temp__3974__auto____11072;
      cljs.core.write_all.call(null, writer, [cljs.core.str(nspc__11073)].join(""), "/")
    }else {
    }
    return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      var temp__3974__auto____11074 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11074)) {
        var nspc__11075 = temp__3974__auto____11074;
        cljs.core.write_all.call(null, writer, [cljs.core.str(nspc__11075)].join(""), "/")
      }else {
      }
      return cljs.core._write.call(null, writer, cljs.core.name.call(null, obj))
    }else {
      if("\ufdd0'else") {
        if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts))) {
          return cljs.core._write.call(null, writer, goog.string.quote(obj))
        }else {
          return cljs.core._write.call(null, writer, obj)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11076 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11076, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IPrintWithWriter["array"] = true;
cljs.core._pr_writer["array"] = function(a, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintWithWriter["function"] = true;
cljs.core._pr_writer["function"] = function(this$, writer, _) {
  return cljs.core.write_all.call(null, writer, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintWithWriter$ = true;
Date.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(d, writer, _) {
  var normalize__11078 = function(n, len) {
    var ns__11077 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11077) < len) {
        var G__11080 = [cljs.core.str("0"), cljs.core.str(ns__11077)].join("");
        ns__11077 = G__11080;
        continue
      }else {
        return ns__11077
      }
      break
    }
  };
  return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(d.getUTCFullYear())].join(""), "-", normalize__11078.call(null, d.getUTCMonth() + 1, 2), "-", normalize__11078.call(null, d.getUTCDate(), 2), "T", normalize__11078.call(null, d.getUTCHours(), 2), ":", normalize__11078.call(null, d.getUTCMinutes(), 2), ":", normalize__11078.call(null, d.getUTCSeconds(), 2), ".", normalize__11078.call(null, d.getUTCMilliseconds(), 3), "-", '00:00"')
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair__11079 = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair__11079, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11081 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11082 = this;
  var G__11083__11084 = cljs.core.seq.call(null, this__11082.watches);
  while(true) {
    if(G__11083__11084) {
      var vec__11085__11086 = cljs.core.first.call(null, G__11083__11084);
      var key__11087 = cljs.core.nth.call(null, vec__11085__11086, 0, null);
      var f__11088 = cljs.core.nth.call(null, vec__11085__11086, 1, null);
      f__11088.call(null, key__11087, this$, oldval, newval);
      var G__11096 = cljs.core.next.call(null, G__11083__11084);
      G__11083__11084 = G__11096;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11089 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11089.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11090 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11090.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var this__11091 = this;
  cljs.core._write.call(null, writer, "#<Atom: ");
  cljs.core._pr_writer.call(null, this__11091.state, writer, opts);
  return cljs.core._write.call(null, writer, ">")
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11092 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11092.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11093 = this;
  return this__11093.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11094 = this;
  return this__11094.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11095 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11108__delegate = function(x, p__11097) {
      var map__11103__11104 = p__11097;
      var map__11103__11105 = cljs.core.seq_QMARK_.call(null, map__11103__11104) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11103__11104) : map__11103__11104;
      var validator__11106 = cljs.core._lookup.call(null, map__11103__11105, "\ufdd0'validator", null);
      var meta__11107 = cljs.core._lookup.call(null, map__11103__11105, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11107, validator__11106, null)
    };
    var G__11108 = function(x, var_args) {
      var p__11097 = null;
      if(goog.isDef(var_args)) {
        p__11097 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11108__delegate.call(this, x, p__11097)
    };
    G__11108.cljs$lang$maxFixedArity = 1;
    G__11108.cljs$lang$applyTo = function(arglist__11109) {
      var x = cljs.core.first(arglist__11109);
      var p__11097 = cljs.core.rest(arglist__11109);
      return G__11108__delegate(x, p__11097)
    };
    G__11108.cljs$lang$arity$variadic = G__11108__delegate;
    return G__11108
  }();
  atom = function(x, var_args) {
    var p__11097 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11113 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11113)) {
    var validate__11114 = temp__3974__auto____11113;
    if(cljs.core.truth_(validate__11114.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6683))))].join(""));
    }
  }else {
  }
  var old_value__11115 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11115, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11116__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11116 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11116__delegate.call(this, a, f, x, y, z, more)
    };
    G__11116.cljs$lang$maxFixedArity = 5;
    G__11116.cljs$lang$applyTo = function(arglist__11117) {
      var a = cljs.core.first(arglist__11117);
      var f = cljs.core.first(cljs.core.next(arglist__11117));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11117)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11117))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11117)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11117)))));
      return G__11116__delegate(a, f, x, y, z, more)
    };
    G__11116.cljs$lang$arity$variadic = G__11116__delegate;
    return G__11116
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11118) {
    var iref = cljs.core.first(arglist__11118);
    var f = cljs.core.first(cljs.core.next(arglist__11118));
    var args = cljs.core.rest(cljs.core.next(arglist__11118));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11119 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11119.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11120 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11120.state, function(p__11121) {
    var map__11122__11123 = p__11121;
    var map__11122__11124 = cljs.core.seq_QMARK_.call(null, map__11122__11123) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11122__11123) : map__11122__11123;
    var curr_state__11125 = map__11122__11124;
    var done__11126 = cljs.core._lookup.call(null, map__11122__11124, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11126)) {
      return curr_state__11125
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11120.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11147__11148 = options;
    var map__11147__11149 = cljs.core.seq_QMARK_.call(null, map__11147__11148) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11147__11148) : map__11147__11148;
    var keywordize_keys__11150 = cljs.core._lookup.call(null, map__11147__11149, "\ufdd0'keywordize-keys", null);
    var keyfn__11151 = cljs.core.truth_(keywordize_keys__11150) ? cljs.core.keyword : cljs.core.str;
    var f__11166 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2528__auto____11165 = function iter__11159(s__11160) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11160__11163 = s__11160;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11160__11163)) {
                        var k__11164 = cljs.core.first.call(null, s__11160__11163);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11151.call(null, k__11164), thisfn.call(null, x[k__11164])], true), iter__11159.call(null, cljs.core.rest.call(null, s__11160__11163)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2528__auto____11165.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11166.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11167) {
    var x = cljs.core.first(arglist__11167);
    var options = cljs.core.rest(arglist__11167);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11172 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11176__delegate = function(args) {
      var temp__3971__auto____11173 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11172), args, null);
      if(cljs.core.truth_(temp__3971__auto____11173)) {
        var v__11174 = temp__3971__auto____11173;
        return v__11174
      }else {
        var ret__11175 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11172, cljs.core.assoc, args, ret__11175);
        return ret__11175
      }
    };
    var G__11176 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11176__delegate.call(this, args)
    };
    G__11176.cljs$lang$maxFixedArity = 0;
    G__11176.cljs$lang$applyTo = function(arglist__11177) {
      var args = cljs.core.seq(arglist__11177);
      return G__11176__delegate(args)
    };
    G__11176.cljs$lang$arity$variadic = G__11176__delegate;
    return G__11176
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11179 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11179)) {
        var G__11180 = ret__11179;
        f = G__11180;
        continue
      }else {
        return ret__11179
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11181__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11181 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11181__delegate.call(this, f, args)
    };
    G__11181.cljs$lang$maxFixedArity = 1;
    G__11181.cljs$lang$applyTo = function(arglist__11182) {
      var f = cljs.core.first(arglist__11182);
      var args = cljs.core.rest(arglist__11182);
      return G__11181__delegate(f, args)
    };
    G__11181.cljs$lang$arity$variadic = G__11181__delegate;
    return G__11181
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11184 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11184, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11184, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11193 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11193) {
      return or__3824__auto____11193
    }else {
      var or__3824__auto____11194 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11194) {
        return or__3824__auto____11194
      }else {
        var and__3822__auto____11195 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11195) {
          var and__3822__auto____11196 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11196) {
            var and__3822__auto____11197 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11197) {
              var ret__11198 = true;
              var i__11199 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11200 = cljs.core.not.call(null, ret__11198);
                  if(or__3824__auto____11200) {
                    return or__3824__auto____11200
                  }else {
                    return i__11199 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11198
                }else {
                  var G__11201 = isa_QMARK_.call(null, h, child.call(null, i__11199), parent.call(null, i__11199));
                  var G__11202 = i__11199 + 1;
                  ret__11198 = G__11201;
                  i__11199 = G__11202;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11197
            }
          }else {
            return and__3822__auto____11196
          }
        }else {
          return and__3822__auto____11195
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6967))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6971))))].join(""));
    }
    var tp__11211 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11212 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11213 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11214 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11215 = cljs.core.contains_QMARK_.call(null, tp__11211.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11213.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11213.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11211, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11214.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11212, parent, ta__11213), "\ufdd0'descendants":tf__11214.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11213, tag, td__11212)})
    }();
    if(cljs.core.truth_(or__3824__auto____11215)) {
      return or__3824__auto____11215
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11220 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11221 = cljs.core.truth_(parentMap__11220.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11220.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11222 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11221)) ? cljs.core.assoc.call(null, parentMap__11220, tag, childsParents__11221) : cljs.core.dissoc.call(null, parentMap__11220, tag);
    var deriv_seq__11223 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11203_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11203_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11203_SHARP_), cljs.core.second.call(null, p1__11203_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11222)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11220.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11204_SHARP_, p2__11205_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11204_SHARP_, p2__11205_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11223))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11231 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11233 = cljs.core.truth_(function() {
    var and__3822__auto____11232 = xprefs__11231;
    if(cljs.core.truth_(and__3822__auto____11232)) {
      return xprefs__11231.call(null, y)
    }else {
      return and__3822__auto____11232
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11233)) {
    return or__3824__auto____11233
  }else {
    var or__3824__auto____11235 = function() {
      var ps__11234 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11234) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11234), prefer_table))) {
          }else {
          }
          var G__11238 = cljs.core.rest.call(null, ps__11234);
          ps__11234 = G__11238;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11235)) {
      return or__3824__auto____11235
    }else {
      var or__3824__auto____11237 = function() {
        var ps__11236 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11236) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11236), y, prefer_table))) {
            }else {
            }
            var G__11239 = cljs.core.rest.call(null, ps__11236);
            ps__11236 = G__11239;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11237)) {
        return or__3824__auto____11237
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11241 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11241)) {
    return or__3824__auto____11241
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11259 = cljs.core.reduce.call(null, function(be, p__11251) {
    var vec__11252__11253 = p__11251;
    var k__11254 = cljs.core.nth.call(null, vec__11252__11253, 0, null);
    var ___11255 = cljs.core.nth.call(null, vec__11252__11253, 1, null);
    var e__11256 = vec__11252__11253;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11254)) {
      var be2__11258 = cljs.core.truth_(function() {
        var or__3824__auto____11257 = be == null;
        if(or__3824__auto____11257) {
          return or__3824__auto____11257
        }else {
          return cljs.core.dominates.call(null, k__11254, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11256 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11258), k__11254, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11254), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11258)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11258
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11259)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11259));
      return cljs.core.second.call(null, best_entry__11259)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11264 = mf;
    if(and__3822__auto____11264) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11264
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2431__auto____11265 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11266 = cljs.core._reset[goog.typeOf(x__2431__auto____11265)];
      if(or__3824__auto____11266) {
        return or__3824__auto____11266
      }else {
        var or__3824__auto____11267 = cljs.core._reset["_"];
        if(or__3824__auto____11267) {
          return or__3824__auto____11267
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11272 = mf;
    if(and__3822__auto____11272) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11272
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2431__auto____11273 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11274 = cljs.core._add_method[goog.typeOf(x__2431__auto____11273)];
      if(or__3824__auto____11274) {
        return or__3824__auto____11274
      }else {
        var or__3824__auto____11275 = cljs.core._add_method["_"];
        if(or__3824__auto____11275) {
          return or__3824__auto____11275
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11280 = mf;
    if(and__3822__auto____11280) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11280
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2431__auto____11281 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11282 = cljs.core._remove_method[goog.typeOf(x__2431__auto____11281)];
      if(or__3824__auto____11282) {
        return or__3824__auto____11282
      }else {
        var or__3824__auto____11283 = cljs.core._remove_method["_"];
        if(or__3824__auto____11283) {
          return or__3824__auto____11283
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11288 = mf;
    if(and__3822__auto____11288) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11288
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2431__auto____11289 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11290 = cljs.core._prefer_method[goog.typeOf(x__2431__auto____11289)];
      if(or__3824__auto____11290) {
        return or__3824__auto____11290
      }else {
        var or__3824__auto____11291 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11291) {
          return or__3824__auto____11291
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11296 = mf;
    if(and__3822__auto____11296) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11296
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2431__auto____11297 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11298 = cljs.core._get_method[goog.typeOf(x__2431__auto____11297)];
      if(or__3824__auto____11298) {
        return or__3824__auto____11298
      }else {
        var or__3824__auto____11299 = cljs.core._get_method["_"];
        if(or__3824__auto____11299) {
          return or__3824__auto____11299
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11304 = mf;
    if(and__3822__auto____11304) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11304
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2431__auto____11305 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11306 = cljs.core._methods[goog.typeOf(x__2431__auto____11305)];
      if(or__3824__auto____11306) {
        return or__3824__auto____11306
      }else {
        var or__3824__auto____11307 = cljs.core._methods["_"];
        if(or__3824__auto____11307) {
          return or__3824__auto____11307
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11312 = mf;
    if(and__3822__auto____11312) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11312
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2431__auto____11313 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11314 = cljs.core._prefers[goog.typeOf(x__2431__auto____11313)];
      if(or__3824__auto____11314) {
        return or__3824__auto____11314
      }else {
        var or__3824__auto____11315 = cljs.core._prefers["_"];
        if(or__3824__auto____11315) {
          return or__3824__auto____11315
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11320 = mf;
    if(and__3822__auto____11320) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11320
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2431__auto____11321 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11322 = cljs.core._dispatch[goog.typeOf(x__2431__auto____11321)];
      if(or__3824__auto____11322) {
        return or__3824__auto____11322
      }else {
        var or__3824__auto____11323 = cljs.core._dispatch["_"];
        if(or__3824__auto____11323) {
          return or__3824__auto____11323
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11326 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11327 = cljs.core._get_method.call(null, mf, dispatch_val__11326);
  if(cljs.core.truth_(target_fn__11327)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11326)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11327, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11328 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11329 = this;
  cljs.core.swap_BANG_.call(null, this__11329.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11329.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11329.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11329.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11330 = this;
  cljs.core.swap_BANG_.call(null, this__11330.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11330.method_cache, this__11330.method_table, this__11330.cached_hierarchy, this__11330.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11331 = this;
  cljs.core.swap_BANG_.call(null, this__11331.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11331.method_cache, this__11331.method_table, this__11331.cached_hierarchy, this__11331.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11332 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11332.cached_hierarchy), cljs.core.deref.call(null, this__11332.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11332.method_cache, this__11332.method_table, this__11332.cached_hierarchy, this__11332.hierarchy)
  }
  var temp__3971__auto____11333 = cljs.core.deref.call(null, this__11332.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11333)) {
    var target_fn__11334 = temp__3971__auto____11333;
    return target_fn__11334
  }else {
    var temp__3971__auto____11335 = cljs.core.find_and_cache_best_method.call(null, this__11332.name, dispatch_val, this__11332.hierarchy, this__11332.method_table, this__11332.prefer_table, this__11332.method_cache, this__11332.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11335)) {
      var target_fn__11336 = temp__3971__auto____11335;
      return target_fn__11336
    }else {
      return cljs.core.deref.call(null, this__11332.method_table).call(null, this__11332.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11337 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11337.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11337.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11337.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11337.method_cache, this__11337.method_table, this__11337.cached_hierarchy, this__11337.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11338 = this;
  return cljs.core.deref.call(null, this__11338.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11339 = this;
  return cljs.core.deref.call(null, this__11339.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11340 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11340.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11342__delegate = function(_, args) {
    var self__11341 = this;
    return cljs.core._dispatch.call(null, self__11341, args)
  };
  var G__11342 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11342__delegate.call(this, _, args)
  };
  G__11342.cljs$lang$maxFixedArity = 1;
  G__11342.cljs$lang$applyTo = function(arglist__11343) {
    var _ = cljs.core.first(arglist__11343);
    var args = cljs.core.rest(arglist__11343);
    return G__11342__delegate(_, args)
  };
  G__11342.cljs$lang$arity$variadic = G__11342__delegate;
  return G__11342
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11344 = this;
  return cljs.core._dispatch.call(null, self__11344, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690646016
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11345 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_11347, writer, _) {
  var this__11346 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(this__11346.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11349, _) {
  var this__11348 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11348.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11350 = this;
  var and__3822__auto____11351 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11351) {
    return this__11350.uuid === other.uuid
  }else {
    return and__3822__auto____11351
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11352 = this;
  var this__11353 = this;
  return cljs.core.pr_str.call(null, this__11353)
};
cljs.core.UUID;
goog.provide("jayq.util");
goog.require("cljs.core");
jayq.util.map__GT_js = function map__GT_js(m) {
  var out__11396 = {};
  var G__11397__11398 = cljs.core.seq.call(null, m);
  while(true) {
    if(G__11397__11398) {
      var vec__11399__11400 = cljs.core.first.call(null, G__11397__11398);
      var k__11401 = cljs.core.nth.call(null, vec__11399__11400, 0, null);
      var v__11402 = cljs.core.nth.call(null, vec__11399__11400, 1, null);
      out__11396[cljs.core.name.call(null, k__11401)] = v__11402;
      var G__11403 = cljs.core.next.call(null, G__11397__11398);
      G__11397__11398 = G__11403;
      continue
    }else {
    }
    break
  }
  return out__11396
};
jayq.util.wait = function wait(ms, func) {
  return setTimeout(func, ms)
};
jayq.util.log = function() {
  var log__delegate = function(v, text) {
    var vs__11405 = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : v;
    return console.log(vs__11405)
  };
  var log = function(v, var_args) {
    var text = null;
    if(goog.isDef(var_args)) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__11406) {
    var v = cljs.core.first(arglist__11406);
    var text = cljs.core.rest(arglist__11406);
    return log__delegate(v, text)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
jayq.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var obj__11414 = {};
        var G__11415__11416 = cljs.core.seq.call(null, x);
        while(true) {
          if(G__11415__11416) {
            var vec__11417__11418 = cljs.core.first.call(null, G__11415__11416);
            var k__11419 = cljs.core.nth.call(null, vec__11417__11418, 0, null);
            var v__11420 = cljs.core.nth.call(null, vec__11417__11418, 1, null);
            obj__11414[clj__GT_js.call(null, k__11419)] = clj__GT_js.call(null, v__11420);
            var G__11421 = cljs.core.next.call(null, G__11415__11416);
            G__11415__11416 = G__11421;
            continue
          }else {
          }
          break
        }
        return obj__11414
      }else {
        if(cljs.core.sequential_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("catb.backbone.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
catb.backbone.core.IHtml = {};
catb.backbone.core.html = function html(this$) {
  if(function() {
    var and__3822__auto____6230 = this$;
    if(and__3822__auto____6230) {
      return this$.catb$backbone$core$IHtml$html$arity$1
    }else {
      return and__3822__auto____6230
    }
  }()) {
    return this$.catb$backbone$core$IHtml$html$arity$1(this$)
  }else {
    var x__2431__auto____6231 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____6232 = catb.backbone.core.html[goog.typeOf(x__2431__auto____6231)];
      if(or__3824__auto____6232) {
        return or__3824__auto____6232
      }else {
        var or__3824__auto____6233 = catb.backbone.core.html["_"];
        if(or__3824__auto____6233) {
          return or__3824__auto____6233
        }else {
          throw cljs.core.missing_protocol.call(null, "IHtml.html", this$);
        }
      }
    }().call(null, this$)
  }
};
catb.backbone.core.html = function html(this$, content) {
  if(function() {
    var and__3822__auto____6238 = this$;
    if(and__3822__auto____6238) {
      return this$.catb$backbone$core$IHtml$html$arity$2
    }else {
      return and__3822__auto____6238
    }
  }()) {
    return this$.catb$backbone$core$IHtml$html$arity$2(this$, content)
  }else {
    var x__2431__auto____6239 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____6240 = catb.backbone.core.html[goog.typeOf(x__2431__auto____6239)];
      if(or__3824__auto____6240) {
        return or__3824__auto____6240
      }else {
        var or__3824__auto____6241 = catb.backbone.core.html["_"];
        if(or__3824__auto____6241) {
          return or__3824__auto____6241
        }else {
          throw cljs.core.missing_protocol.call(null, "IHtml.html", this$);
        }
      }
    }().call(null, this$, content)
  }
};
Backbone.View.prototype.catb$backbone$core$IHtml$ = true;
Backbone.View.prototype.catb$backbone$core$IHtml$html$arity$1 = function(this$) {
  return this$.$el.html()
};
Backbone.View.prototype.catb$backbone$core$IHtml$html$arity$2 = function(this$, content) {
  return this$.$el.html(content)
};
catb.backbone.core.get_in_STAR_ = function get_in_STAR_(model, properties) {
  var current__6244 = model;
  var properties__6245 = properties;
  while(true) {
    if(cljs.core.seq.call(null, properties__6245)) {
      var G__6246 = current__6244.get(cljs.core.name.call(null, cljs.core.first.call(null, properties__6245)));
      var G__6247 = cljs.core.rest.call(null, properties__6245);
      current__6244 = G__6246;
      properties__6245 = G__6247;
      continue
    }else {
      return current__6244
    }
    break
  }
};
catb.backbone.core.get_in = function get_in(model, properties) {
  return cljs.core.js__GT_clj.call(null, catb.backbone.core.get_in_STAR_.call(null, model, properties))
};
catb.backbone.core.new$ = function new$(type, attributes) {
  return new type(jayq.util.clj__GT_js.call(null, attributes))
};
catb.backbone.core.new_model = function new_model(attributes) {
  return new Backbone.Model(jayq.util.clj__GT_js.call(null, attributes))
};
catb.backbone.core.render = function render(view) {
  return view.render()
};
catb.backbone.core.save = function save(model, attributes, options) {
  return model.save(jayq.util.clj__GT_js.call(null, attributes), jayq.util.clj__GT_js.call(null, options))
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11360 = s;
      var limit__11361 = limit;
      var parts__11362 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11361, 1)) {
          return cljs.core.conj.call(null, parts__11362, s__11360)
        }else {
          var temp__3971__auto____11363 = cljs.core.re_find.call(null, re, s__11360);
          if(cljs.core.truth_(temp__3971__auto____11363)) {
            var m__11364 = temp__3971__auto____11363;
            var index__11365 = s__11360.indexOf(m__11364);
            var G__11366 = s__11360.substring(index__11365 + cljs.core.count.call(null, m__11364));
            var G__11367 = limit__11361 - 1;
            var G__11368 = cljs.core.conj.call(null, parts__11362, s__11360.substring(0, index__11365));
            s__11360 = G__11366;
            limit__11361 = G__11367;
            parts__11362 = G__11368;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11362, s__11360)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11372 = s.length;
  while(true) {
    if(index__11372 === 0) {
      return""
    }else {
      var ch__11373 = cljs.core._lookup.call(null, s, index__11372 - 1, null);
      if(function() {
        var or__3824__auto____11374 = cljs.core._EQ_.call(null, ch__11373, "\n");
        if(or__3824__auto____11374) {
          return or__3824__auto____11374
        }else {
          return cljs.core._EQ_.call(null, ch__11373, "\r")
        }
      }()) {
        var G__11375 = index__11372 - 1;
        index__11372 = G__11375;
        continue
      }else {
        return s.substring(0, index__11372)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11382 = new goog.string.StringBuffer;
  var length__11383 = s.length;
  var index__11384 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11383, index__11384)) {
      return buffer__11382.toString()
    }else {
      var ch__11385 = s.charAt(index__11384);
      var temp__3971__auto____11386 = cljs.core._lookup.call(null, cmap, ch__11385, null);
      if(cljs.core.truth_(temp__3971__auto____11386)) {
        var replacement__11387 = temp__3971__auto____11386;
        buffer__11382.append([cljs.core.str(replacement__11387)].join(""))
      }else {
        buffer__11382.append(ch__11385)
      }
      var G__11388 = index__11384 + 1;
      index__11384 = G__11388;
      continue
    }
    break
  }
};
goog.provide("catb.icanhaz.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("clojure.string");
goog.require("jayq.util");
catb.icanhaz.core.get = function get(template_key, variables) {
  var tname__6454 = clojure.string.replace.call(null, jayq.util.clj__GT_js.call(null, template_key), "-", "_");
  return ich[tname__6454].call(ich, jayq.util.clj__GT_js.call(null, variables))
};
goog.provide("catb.template");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("catb.icanhaz.core");
goog.require("jayq.util");
catb.template.get = function get(template, variables) {
  var entries__6223 = cljs.core.keys.call(null, cljs.core.js__GT_clj.call(null, jQuery.i18n.map));
  var texts__6224 = cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(e) {
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, e), jQuery.i18n.prop(e)], true)
  }, entries__6223));
  var augmented__6225 = cljs.core.merge.call(null, texts__6224, variables);
  return catb.icanhaz.core.get.call(null, template, augmented__6225)
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__11595 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__11595, cljs.core.remove.call(null, function(p1__11593_SHARP_) {
    return max__11595 === p1__11593_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__11599__delegate = function(s1, s2, sets) {
      var bubbled_sets__11598 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__11598), cljs.core.rest.call(null, bubbled_sets__11598))
    };
    var G__11599 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11599__delegate.call(this, s1, s2, sets)
    };
    G__11599.cljs$lang$maxFixedArity = 2;
    G__11599.cljs$lang$applyTo = function(arglist__11600) {
      var s1 = cljs.core.first(arglist__11600);
      var s2 = cljs.core.first(cljs.core.next(arglist__11600));
      var sets = cljs.core.rest(cljs.core.next(arglist__11600));
      return G__11599__delegate(s1, s2, sets)
    };
    G__11599.cljs$lang$arity$variadic = G__11599__delegate;
    return G__11599
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__11603 = s2;
        var G__11604 = s1;
        s1 = G__11603;
        s2 = G__11604;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__11605__delegate = function(s1, s2, sets) {
      var bubbled_sets__11602 = clojure.set.bubble_max_key.call(null, function(p1__11596_SHARP_) {
        return-cljs.core.count.call(null, p1__11596_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__11602), cljs.core.rest.call(null, bubbled_sets__11602))
    };
    var G__11605 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11605__delegate.call(this, s1, s2, sets)
    };
    G__11605.cljs$lang$maxFixedArity = 2;
    G__11605.cljs$lang$applyTo = function(arglist__11606) {
      var s1 = cljs.core.first(arglist__11606);
      var s2 = cljs.core.first(cljs.core.next(arglist__11606));
      var sets = cljs.core.rest(cljs.core.next(arglist__11606));
      return G__11605__delegate(s1, s2, sets)
    };
    G__11605.cljs$lang$arity$variadic = G__11605__delegate;
    return G__11605
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__11607__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__11607 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11607__delegate.call(this, s1, s2, sets)
    };
    G__11607.cljs$lang$maxFixedArity = 2;
    G__11607.cljs$lang$applyTo = function(arglist__11608) {
      var s1 = cljs.core.first(arglist__11608);
      var s2 = cljs.core.first(cljs.core.next(arglist__11608));
      var sets = cljs.core.rest(cljs.core.next(arglist__11608));
      return G__11607__delegate(s1, s2, sets)
    };
    G__11607.cljs$lang$arity$variadic = G__11607__delegate;
    return G__11607
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__11609_SHARP_) {
    return cljs.core.select_keys.call(null, p1__11609_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__11617) {
    var vec__11618__11619 = p__11617;
    var old__11620 = cljs.core.nth.call(null, vec__11618__11619, 0, null);
    var new__11621 = cljs.core.nth.call(null, vec__11618__11619, 1, null);
    if(function() {
      var and__3822__auto____11622 = cljs.core.not_EQ_.call(null, old__11620, new__11621);
      if(and__3822__auto____11622) {
        return cljs.core.contains_QMARK_.call(null, m, old__11620)
      }else {
        return and__3822__auto____11622
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__11621, cljs.core._lookup.call(null, m, old__11620, null)), old__11620)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__11610_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__11610_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__11624 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__11624, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__11624, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__11634) {
    var vec__11635__11636 = p__11634;
    var k__11637 = cljs.core.nth.call(null, vec__11635__11636, 0, null);
    var v__11638 = cljs.core.nth.call(null, vec__11635__11636, 1, null);
    return cljs.core.assoc.call(null, m, v__11638, k__11637)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____11655 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____11655) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____11655
      }
    }()) {
      var ks__11657 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__11656__11658 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__11659 = cljs.core.nth.call(null, vec__11656__11658, 0, null);
      var s__11660 = cljs.core.nth.call(null, vec__11656__11658, 1, null);
      var idx__11661 = clojure.set.index.call(null, r__11659, ks__11657);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__11662 = idx__11661.call(null, cljs.core.select_keys.call(null, x, ks__11657));
        if(cljs.core.truth_(found__11662)) {
          return cljs.core.reduce.call(null, function(p1__11625_SHARP_, p2__11626_SHARP_) {
            return cljs.core.conj.call(null, p1__11625_SHARP_, cljs.core.merge.call(null, p2__11626_SHARP_, x))
          }, ret, found__11662)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__11660)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__11663__11664 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__11665 = cljs.core.nth.call(null, vec__11663__11664, 0, null);
    var s__11666 = cljs.core.nth.call(null, vec__11663__11664, 1, null);
    var k__11667 = cljs.core.nth.call(null, vec__11663__11664, 2, null);
    var idx__11668 = clojure.set.index.call(null, r__11665, cljs.core.vals.call(null, k__11667));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__11669 = idx__11668.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__11667)), k__11667));
      if(cljs.core.truth_(found__11669)) {
        return cljs.core.reduce.call(null, function(p1__11627_SHARP_, p2__11628_SHARP_) {
          return cljs.core.conj.call(null, p1__11627_SHARP_, cljs.core.merge.call(null, p2__11628_SHARP_, x))
        }, ret, found__11669)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__11666)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____11672 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____11672) {
    return cljs.core.every_QMARK_.call(null, function(p1__11639_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__11639_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____11672
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____11674 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____11674) {
    return cljs.core.every_QMARK_.call(null, function(p1__11670_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__11670_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____11674
  }
};
goog.provide("catb.models.similarity");
goog.require("cljs.core");
goog.require("clojure.set");
catb.models.similarity.score = function score(s1, s2) {
  return cljs.core.count.call(null, clojure.set.intersection.call(null, s1, s2)) / cljs.core.count.call(null, s2)
};
catb.models.similarity.value = function value(s1, s2) {
  var s__6567 = catb.models.similarity.score.call(null, s1, s2);
  if(function() {
    var and__3822__auto____6568 = s__6567 >= 0;
    if(and__3822__auto____6568) {
      return s__6567 <= 0.2
    }else {
      return and__3822__auto____6568
    }
  }()) {
    return"\ufdd0'very-little"
  }else {
    if(function() {
      var and__3822__auto____6569 = s__6567 > 0.2;
      if(and__3822__auto____6569) {
        return s__6567 <= 0.4
      }else {
        return and__3822__auto____6569
      }
    }()) {
      return"\ufdd0'little"
    }else {
      if(function() {
        var and__3822__auto____6570 = s__6567 > 0.4;
        if(and__3822__auto____6570) {
          return s__6567 <= 0.6
        }else {
          return and__3822__auto____6570
        }
      }()) {
        return"\ufdd0'some"
      }else {
        if(function() {
          var and__3822__auto____6571 = s__6567 > 0.6;
          if(and__3822__auto____6571) {
            return s__6567 <= 0.8
          }else {
            return and__3822__auto____6571
          }
        }()) {
          return"\ufdd0'much"
        }else {
          if(function() {
            var and__3822__auto____6572 = s__6567 > 0.8;
            if(and__3822__auto____6572) {
              return s__6567 <= 1
            }else {
              return and__3822__auto____6572
            }
          }()) {
            return"\ufdd0'very-much"
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("catb.models.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("catb.models.similarity");
goog.require("clojure.set");
goog.require("jayq.util");
catb.models.core.get_stmt = function get_stmt(statements, id) {
  return statements.get(id)
};
catb.models.core.get_arg = function get_arg(args, id) {
  return args.get(id)
};
catb.models.core.get_metadata = function get_metadata(md, k) {
  return cljs.core.first.call(null, cljs.core.filter.call(null, function(m) {
    return cljs.core._EQ_.call(null, m.key, k)
  }, md.toJSON()))
};
catb.models.core.update_statements = function update_statements(m, sources, ids) {
  return cljs.core.reduce.call(null, function(m, source) {
    var v__6542 = cljs.core._lookup.call(null, m, source, cljs.core.PersistentHashSet.EMPTY);
    return cljs.core.assoc.call(null, m, source, clojure.set.union.call(null, v__6542, ids))
  }, m, cljs.core.js__GT_clj.call(null, sources))
};
catb.models.core.statements_by_sources = function statements_by_sources(args) {
  return cljs.core.reduce.call(null, function(m, arg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____6550 = arg.header;
      if(cljs.core.truth_(and__3822__auto____6550)) {
        return arg.header.source
      }else {
        return and__3822__auto____6550
      }
    }())) {
      var sources__6551 = arg.header.source;
      var premises__6552 = arg.premises;
      var conclusion__6553 = arg.conclusion;
      var conclusion_id__6554 = conclusion__6553.id;
      var premises_ids__6555 = cljs.core.set.call(null, cljs.core.map.call(null, function(p) {
        return p.statement.id
      }, premises__6552));
      var ids__6556 = cljs.core.truth_(arg.pro) ? cljs.core.conj.call(null, premises_ids__6555, conclusion_id__6554) : premises_ids__6555;
      return catb.models.core.update_statements.call(null, m, sources__6551, ids__6556)
    }else {
      return m
    }
  }, cljs.core.ObjMap.EMPTY, args)
};
catb.models.core.sources_by_similarity = function sources_by_similarity(statements, accepted) {
  return cljs.core.group_by.call(null, function(source) {
    return catb.models.similarity.value.call(null, accepted, statements.call(null, source))
  }, cljs.core.keys.call(null, statements))
};
catb.models.core.arguments_for_statement = function arguments_for_statement(issue, args) {
  var pro_statements__6559 = cljs.core.mapcat.call(null, function(proid) {
    return cljs.core.map.call(null, function(p) {
      return p.statement
    }, args.get(proid).get("premises"))
  }, issue.pro);
  var con_statements__6560 = cljs.core.mapcat.call(null, function(conid) {
    return cljs.core.map.call(null, function(p) {
      return p.statement
    }, args.get(conid).get("premises"))
  }, issue.con);
  return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.partial.call(null, catb.models.core.get_arg, args), issue.pro), cljs.core.map.call(null, cljs.core.partial.call(null, catb.models.core.get_arg, args), issue.con), cljs.core.mapcat.call(null, function(s) {
    return arguments_for_statement.call(null, s, args)
  }, pro_statements__6559), cljs.core.mapcat.call(null, function(s) {
    return arguments_for_statement.call(null, s, args)
  }, con_statements__6560))
};
goog.provide("catb.views.core");
goog.require("cljs.core");
goog.require("catb.models.core");
goog.require("jayq.util");
goog.require("catb.template");
goog.require("catb.backbone.core");
goog.require("catb.models.core");
goog.require("jayq.util");
catb.views.core.template = function template(view, template_key, variables) {
  return catb.backbone.core.html.call(null, view, catb.template.get.call(null, template_key, variables))
};
catb.views.core.json = function json(model) {
  return model.toJSON()
};
catb.views.core.score_agreed_QMARK_ = function score_agreed_QMARK_(score) {
  return score > 0.99
};
catb.views.core.agreed_QMARK_ = function agreed_QMARK_(claim, votes) {
  var vote__6575 = votes.call(null, claim.id);
  var and__3822__auto____6576 = !(vote__6575 == null);
  if(and__3822__auto____6576) {
    return catb.views.core.score_agreed_QMARK_.call(null, vote__6575)
  }else {
    return and__3822__auto____6576
  }
};
catb.views.core.disagreed_QMARK_ = function disagreed_QMARK_(claim, votes) {
  var vote__6579 = votes.call(null, claim.id);
  var and__3822__auto____6580 = !(vote__6579 == null);
  if(and__3822__auto____6580) {
    return vote__6579 < 0.01
  }else {
    return and__3822__auto____6580
  }
};
catb.views.core.prepare_claim = function prepare_claim(statement_votes, stmt) {
  var text__6584 = AGB.statement_raw_text(stmt);
  var desc__6585 = AGB.description_text(stmt.header);
  var agreement_text__6586 = cljs.core.truth_(catb.views.core.agreed_QMARK_.call(null, stmt, statement_votes)) ? jQuery.i18n.prop("sct_agree") : cljs.core.truth_(catb.views.core.disagreed_QMARK_.call(null, stmt, statement_votes)) ? jQuery.i18n.prop("sct_disagree") : "\ufdd0'else" ? "" : null;
  stmt["statement_text"] = text__6584;
  stmt["statement_description"] = desc__6585;
  stmt["agreement_text"] = agreement_text__6586;
  return stmt
};
catb.views.core.prepare_argument = function prepare_argument(arg) {
  return arg["description_text"] = AGB.description_text(arg.header)
};
catb.views.core.pro_answered = function pro_answered(claim, args, argument_votes) {
  return cljs.core.map.call(null, cljs.core.comp.call(null, catb.views.core.json, cljs.core.partial.call(null, catb.models.core.get_arg, args)), cljs.core.filter.call(null, function(id) {
    return argument_votes.call(null, id)
  }, claim.pro))
};
catb.views.core.con_answered = function con_answered(claim, args, argument_votes) {
  return cljs.core.map.call(null, cljs.core.comp.call(null, catb.views.core.json, cljs.core.partial.call(null, catb.models.core.get_arg, args)), cljs.core.filter.call(null, function(id) {
    return argument_votes.call(null, id)
  }, claim.con))
};
catb.views.core.prepare_arguments = function prepare_arguments(claim, args, argument_votes) {
  var pro_answered__6592 = catb.views.core.pro_answered.call(null, claim, args, argument_votes);
  var con_answered__6593 = catb.views.core.con_answered.call(null, claim, args, argument_votes);
  var G__6594__6595 = cljs.core.seq.call(null, cljs.core.concat.call(null, pro_answered__6592, con_answered__6593));
  while(true) {
    if(G__6594__6595) {
      var arg__6596 = cljs.core.first.call(null, G__6594__6595);
      catb.views.core.prepare_argument.call(null, arg__6596);
      var G__6597 = cljs.core.next.call(null, G__6594__6595);
      G__6594__6595 = G__6597;
      continue
    }else {
    }
    break
  }
  claim["has_pro_answered"] = cljs.core.count.call(null, pro_answered__6592) > 0;
  claim["has_con_answered"] = cljs.core.count.call(null, con_answered__6593) > 0;
  claim["pro_answered"] = jayq.util.clj__GT_js.call(null, pro_answered__6592);
  claim["con_answered"] = jayq.util.clj__GT_js.call(null, con_answered__6593);
  return claim
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____11861 = reader;
    if(and__3822__auto____11861) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____11861
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2431__auto____11862 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____11863 = cljs.reader.read_char[goog.typeOf(x__2431__auto____11862)];
      if(or__3824__auto____11863) {
        return or__3824__auto____11863
      }else {
        var or__3824__auto____11864 = cljs.reader.read_char["_"];
        if(or__3824__auto____11864) {
          return or__3824__auto____11864
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____11869 = reader;
    if(and__3822__auto____11869) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____11869
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2431__auto____11870 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____11871 = cljs.reader.unread[goog.typeOf(x__2431__auto____11870)];
      if(or__3824__auto____11871) {
        return or__3824__auto____11871
      }else {
        var or__3824__auto____11872 = cljs.reader.unread["_"];
        if(or__3824__auto____11872) {
          return or__3824__auto____11872
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
goog.provide("cljs.reader.StringPushbackReader");
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2366__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__2366__auto__, writer__2367__auto__) {
  return cljs.core._write.call(null, writer__2367__auto__, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__11873 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__11873.buffer_atom))) {
    var idx__11874 = cljs.core.deref.call(null, this__11873.index_atom);
    cljs.core.swap_BANG_.call(null, this__11873.index_atom, cljs.core.inc);
    return this__11873.s[idx__11874]
  }else {
    var buf__11875 = cljs.core.deref.call(null, this__11873.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__11873.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__11875)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__11876 = this;
  return cljs.core.swap_BANG_.call(null, this__11876.buffer_atom, function(p1__11856_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__11856_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____11878 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____11878)) {
    return or__3824__auto____11878
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____11883 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____11883) {
    return or__3824__auto____11883
  }else {
    var and__3822__auto____11885 = function() {
      var or__3824__auto____11884 = "+" === initch;
      if(or__3824__auto____11884) {
        return or__3824__auto____11884
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____11885)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__11886 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__11886);
        return next_ch__11886
      }())
    }else {
      return and__3822__auto____11885
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__11887) {
    var rdr = cljs.core.first(arglist__11887);
    var msg = cljs.core.rest(arglist__11887);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____11891 = !(ch === "#");
  if(and__3822__auto____11891) {
    var and__3822__auto____11892 = !(ch === "'");
    if(and__3822__auto____11892) {
      var and__3822__auto____11893 = !(ch === ":");
      if(and__3822__auto____11893) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____11893
      }
    }else {
      return and__3822__auto____11892
    }
  }else {
    return and__3822__auto____11891
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__11898 = new goog.string.StringBuffer(initch);
  var ch__11899 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____11900 = ch__11899 == null;
      if(or__3824__auto____11900) {
        return or__3824__auto____11900
      }else {
        var or__3824__auto____11901 = cljs.reader.whitespace_QMARK_.call(null, ch__11899);
        if(or__3824__auto____11901) {
          return or__3824__auto____11901
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__11899)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__11899);
      return sb__11898.toString()
    }else {
      var G__11902 = function() {
        sb__11898.append(ch__11899);
        return sb__11898
      }();
      var G__11903 = cljs.reader.read_char.call(null, rdr);
      sb__11898 = G__11902;
      ch__11899 = G__11903;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__11907 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____11908 = ch__11907 === "n";
      if(or__3824__auto____11908) {
        return or__3824__auto____11908
      }else {
        var or__3824__auto____11909 = ch__11907 === "r";
        if(or__3824__auto____11909) {
          return or__3824__auto____11909
        }else {
          return ch__11907 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__11911 = re.exec(s);
  if(matches__11911 == null) {
    return null
  }else {
    if(matches__11911.length === 1) {
      return matches__11911[0]
    }else {
      return matches__11911
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__11919 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__11920 = groups__11919[2];
  if(!function() {
    var or__3824__auto____11921 = group3__11920 == null;
    if(or__3824__auto____11921) {
      return or__3824__auto____11921
    }else {
      return group3__11920.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__11922 = "-" === groups__11919[1] ? -1 : 1;
    var a__11923 = cljs.core.truth_(groups__11919[3]) ? [groups__11919[3], 10] : cljs.core.truth_(groups__11919[4]) ? [groups__11919[4], 16] : cljs.core.truth_(groups__11919[5]) ? [groups__11919[5], 8] : cljs.core.truth_(groups__11919[7]) ? [groups__11919[7], parseInt(groups__11919[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__11924 = a__11923[0];
    var radix__11925 = a__11923[1];
    if(n__11924 == null) {
      return null
    }else {
      return negate__11922 * parseInt(n__11924, radix__11925)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__11929 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__11930 = groups__11929[1];
  var denominator__11931 = groups__11929[2];
  return parseInt(numinator__11930) / parseInt(denominator__11931)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__11934 = re.exec(s);
  if(function() {
    var and__3822__auto____11935 = !(matches__11934 == null);
    if(and__3822__auto____11935) {
      return matches__11934[0] === s
    }else {
      return and__3822__auto____11935
    }
  }()) {
    if(matches__11934.length === 1) {
      return matches__11934[0]
    }else {
      return matches__11934
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__11937 = parseInt(code_str, 16);
  return String.fromCharCode(code__11937)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__11940 = cljs.reader.read_char.call(null, reader);
  var mapresult__11941 = cljs.reader.escape_char_map.call(null, ch__11940);
  if(cljs.core.truth_(mapresult__11941)) {
    return mapresult__11941
  }else {
    if(ch__11940 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__11940, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__11940 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__11940, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__11940)) {
          return String.fromCharCode(ch__11940)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__11940)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__11943 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__11943))) {
      var G__11944 = cljs.reader.read_char.call(null, rdr);
      ch__11943 = G__11944;
      continue
    }else {
      return ch__11943
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__11951 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__11952 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__11952)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading")
    }
    if(delim === ch__11952) {
      return cljs.core.persistent_BANG_.call(null, a__11951)
    }else {
      var temp__3971__auto____11953 = cljs.reader.macros.call(null, ch__11952);
      if(cljs.core.truth_(temp__3971__auto____11953)) {
        var macrofn__11954 = temp__3971__auto____11953;
        var mret__11955 = macrofn__11954.call(null, rdr, ch__11952);
        var G__11957 = mret__11955 === rdr ? a__11951 : cljs.core.conj_BANG_.call(null, a__11951, mret__11955);
        a__11951 = G__11957;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__11952);
        var o__11956 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__11958 = o__11956 === rdr ? a__11951 : cljs.core.conj_BANG_.call(null, a__11951, o__11956);
        a__11951 = G__11958;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__11963 = cljs.reader.read_char.call(null, rdr);
  var dm__11964 = cljs.reader.dispatch_macros.call(null, ch__11963);
  if(cljs.core.truth_(dm__11964)) {
    return dm__11964.call(null, rdr, _)
  }else {
    var temp__3971__auto____11965 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__11963);
    if(cljs.core.truth_(temp__3971__auto____11965)) {
      var obj__11966 = temp__3971__auto____11965;
      return obj__11966
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__11963)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__11968 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__11968))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__11968)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__11975 = new goog.string.StringBuffer(initch);
  var ch__11976 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____11977 = ch__11976 == null;
      if(or__3824__auto____11977) {
        return or__3824__auto____11977
      }else {
        var or__3824__auto____11978 = cljs.reader.whitespace_QMARK_.call(null, ch__11976);
        if(or__3824__auto____11978) {
          return or__3824__auto____11978
        }else {
          return cljs.reader.macros.call(null, ch__11976)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__11976);
      var s__11979 = buffer__11975.toString();
      var or__3824__auto____11980 = cljs.reader.match_number.call(null, s__11979);
      if(cljs.core.truth_(or__3824__auto____11980)) {
        return or__3824__auto____11980
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__11979, "]")
      }
    }else {
      var G__11981 = function() {
        buffer__11975.append(ch__11976);
        return buffer__11975
      }();
      var G__11982 = cljs.reader.read_char.call(null, reader);
      buffer__11975 = G__11981;
      ch__11976 = G__11982;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__11985 = new goog.string.StringBuffer;
  var ch__11986 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__11986 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading")
    }else {
      if("\\" === ch__11986) {
        var G__11987 = function() {
          buffer__11985.append(cljs.reader.escape_char.call(null, buffer__11985, reader));
          return buffer__11985
        }();
        var G__11988 = cljs.reader.read_char.call(null, reader);
        buffer__11985 = G__11987;
        ch__11986 = G__11988;
        continue
      }else {
        if('"' === ch__11986) {
          return buffer__11985.toString()
        }else {
          if("\ufdd0'default") {
            var G__11989 = function() {
              buffer__11985.append(ch__11986);
              return buffer__11985
            }();
            var G__11990 = cljs.reader.read_char.call(null, reader);
            buffer__11985 = G__11989;
            ch__11986 = G__11990;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__11992 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__11992, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__11992, 0, token__11992.indexOf("/")), cljs.core.subs.call(null, token__11992, token__11992.indexOf("/") + 1, token__11992.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__11992, cljs.core.symbol.call(null, token__11992))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__12002 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__12003 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__12002);
  var token__12004 = a__12003[0];
  var ns__12005 = a__12003[1];
  var name__12006 = a__12003[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____12008 = function() {
      var and__3822__auto____12007 = !(void 0 === ns__12005);
      if(and__3822__auto____12007) {
        return ns__12005.substring(ns__12005.length - 2, ns__12005.length) === ":/"
      }else {
        return and__3822__auto____12007
      }
    }();
    if(cljs.core.truth_(or__3824__auto____12008)) {
      return or__3824__auto____12008
    }else {
      var or__3824__auto____12009 = name__12006[name__12006.length - 1] === ":";
      if(or__3824__auto____12009) {
        return or__3824__auto____12009
      }else {
        return!(token__12004.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__12004)
  }else {
    if(function() {
      var and__3822__auto____12010 = !(ns__12005 == null);
      if(and__3822__auto____12010) {
        return ns__12005.length > 0
      }else {
        return and__3822__auto____12010
      }
    }()) {
      return cljs.core.keyword.call(null, ns__12005.substring(0, ns__12005.indexOf("/")), name__12006)
    }else {
      return cljs.core.keyword.call(null, token__12004)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__12016 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__12016)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__12017 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__12018__12019 = o__12017;
    if(G__12018__12019) {
      if(function() {
        var or__3824__auto____12020 = G__12018__12019.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____12020) {
          return or__3824__auto____12020
        }else {
          return G__12018__12019.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12018__12019.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12018__12019)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12018__12019)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__12017, cljs.core.merge.call(null, cljs.core.meta.call(null, o__12017), m__12016))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__12024 = cljs.reader.read_char.call(null, reader);
    if(ch__12024 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__12024)) {
        var G__12027 = reader;
        var G__12028 = eof_is_error;
        var G__12029 = sentinel;
        var G__12030 = is_recursive;
        reader = G__12027;
        eof_is_error = G__12028;
        sentinel = G__12029;
        is_recursive = G__12030;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__12024)) {
          var G__12031 = cljs.reader.read_comment.call(null, reader, ch__12024);
          var G__12032 = eof_is_error;
          var G__12033 = sentinel;
          var G__12034 = is_recursive;
          reader = G__12031;
          eof_is_error = G__12032;
          sentinel = G__12033;
          is_recursive = G__12034;
          continue
        }else {
          if("\ufdd0'else") {
            var f__12025 = cljs.reader.macros.call(null, ch__12024);
            var res__12026 = cljs.core.truth_(f__12025) ? f__12025.call(null, reader, ch__12024) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__12024) ? cljs.reader.read_number.call(null, reader, ch__12024) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__12024) : null;
            if(res__12026 === reader) {
              var G__12035 = reader;
              var G__12036 = eof_is_error;
              var G__12037 = sentinel;
              var G__12038 = is_recursive;
              reader = G__12035;
              eof_is_error = G__12036;
              sentinel = G__12037;
              is_recursive = G__12038;
              continue
            }else {
              return res__12026
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__12040 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__12040, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__12042 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__12042.getLength() < width) {
            var G__12043 = b__12042.append("0");
            b__12042 = G__12043;
            continue
          }else {
            return b__12042.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____12046 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____12046)) {
    var or__3824__auto____12047 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____12047)) {
      return or__3824__auto____12047
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____12046
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__12052 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__12053 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__12053 : dim_norm__12052, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__12054 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__12056 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____12055 = low <= n;
      if(and__3822__auto____12055) {
        return n <= high
      }else {
        return and__3822__auto____12055
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____12057 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__12054, ts)));
    if(cljs.core.truth_(temp__3974__auto____12057)) {
      var vec__12058__12061 = temp__3974__auto____12057;
      var vec__12059__12062 = cljs.core.nth.call(null, vec__12058__12061, 0, null);
      var ___12063 = cljs.core.nth.call(null, vec__12059__12062, 0, null);
      var years__12064 = cljs.core.nth.call(null, vec__12059__12062, 1, null);
      var months__12065 = cljs.core.nth.call(null, vec__12059__12062, 2, null);
      var days__12066 = cljs.core.nth.call(null, vec__12059__12062, 3, null);
      var hours__12067 = cljs.core.nth.call(null, vec__12059__12062, 4, null);
      var minutes__12068 = cljs.core.nth.call(null, vec__12059__12062, 5, null);
      var seconds__12069 = cljs.core.nth.call(null, vec__12059__12062, 6, null);
      var milliseconds__12070 = cljs.core.nth.call(null, vec__12059__12062, 7, null);
      var vec__12060__12071 = cljs.core.nth.call(null, vec__12058__12061, 1, null);
      var ___12072 = cljs.core.nth.call(null, vec__12060__12071, 0, null);
      var ___12073 = cljs.core.nth.call(null, vec__12060__12071, 1, null);
      var ___12074 = cljs.core.nth.call(null, vec__12060__12071, 2, null);
      var V__12075 = vec__12058__12061;
      var vec__12076__12079 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__12051_SHARP_) {
          return parseInt(p1__12051_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__12049_SHARP_, p2__12048_SHARP_) {
        return cljs.core.update_in.call(null, p2__12048_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__12049_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__12050_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__12050_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__12075));
      var vec__12077__12080 = cljs.core.nth.call(null, vec__12076__12079, 0, null);
      var ___12081 = cljs.core.nth.call(null, vec__12077__12080, 0, null);
      var y__12082 = cljs.core.nth.call(null, vec__12077__12080, 1, null);
      var mo__12083 = cljs.core.nth.call(null, vec__12077__12080, 2, null);
      var d__12084 = cljs.core.nth.call(null, vec__12077__12080, 3, null);
      var h__12085 = cljs.core.nth.call(null, vec__12077__12080, 4, null);
      var m__12086 = cljs.core.nth.call(null, vec__12077__12080, 5, null);
      var s__12087 = cljs.core.nth.call(null, vec__12077__12080, 6, null);
      var ms__12088 = cljs.core.nth.call(null, vec__12077__12080, 7, null);
      var vec__12078__12089 = cljs.core.nth.call(null, vec__12076__12079, 1, null);
      var offset_sign__12090 = cljs.core.nth.call(null, vec__12078__12089, 0, null);
      var offset_hours__12091 = cljs.core.nth.call(null, vec__12078__12089, 1, null);
      var offset_minutes__12092 = cljs.core.nth.call(null, vec__12078__12089, 2, null);
      var offset__12093 = offset_sign__12090 * (offset_hours__12091 * 60 + offset_minutes__12092);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__12064) ? 1970 : y__12082, cljs.core.not.call(null, months__12065) ? 1 : check__12056.call(null, 1, mo__12083, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__12066) ? 1 : check__12056.call(null, 1, d__12084, cljs.reader.days_in_month.call(null, mo__12083, cljs.reader.leap_year_QMARK_.call(null, y__12082)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__12067) ? 0 : check__12056.call(null, 0, h__12085, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__12068) ? 0 : check__12056.call(null, 0, m__12086, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__12069) ? 0 : check__12056.call(null, 0, s__12087, cljs.core._EQ_.call(null, m__12086, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__12070) ? 0 : check__12056.call(null, 
      0, ms__12088, 999, "timestamp millisecond field must be in range 0..999"), offset__12093], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____12105 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____12105)) {
    var vec__12106__12107 = temp__3971__auto____12105;
    var years__12108 = cljs.core.nth.call(null, vec__12106__12107, 0, null);
    var months__12109 = cljs.core.nth.call(null, vec__12106__12107, 1, null);
    var days__12110 = cljs.core.nth.call(null, vec__12106__12107, 2, null);
    var hours__12111 = cljs.core.nth.call(null, vec__12106__12107, 3, null);
    var minutes__12112 = cljs.core.nth.call(null, vec__12106__12107, 4, null);
    var seconds__12113 = cljs.core.nth.call(null, vec__12106__12107, 5, null);
    var ms__12114 = cljs.core.nth.call(null, vec__12106__12107, 6, null);
    var offset__12115 = cljs.core.nth.call(null, vec__12106__12107, 7, null);
    return new Date(Date.UTC(years__12108, months__12109 - 1, days__12110, hours__12111, minutes__12112, seconds__12113, ms__12114) - offset__12115 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__12119 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____12120 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__12119), null);
  if(cljs.core.truth_(temp__3971__auto____12120)) {
    var pfn__12121 = temp__3971__auto____12120;
    return pfn__12121.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__12119), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__12124 = cljs.core.name.call(null, tag);
  var old_parser__12125 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__12124, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__12124, f);
  return old_parser__12125
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__12128 = cljs.core.name.call(null, tag);
  var old_parser__12129 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__12128, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__12128);
  return old_parser__12129
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
goog.require("cljs.reader");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__3971__auto____11677 = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__3971__auto____11677)) {
        var cm__11678 = temp__3971__auto____11677;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm__11678), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0'else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $__delegate = function(sel, p__11679) {
    var vec__11683__11684 = p__11679;
    var context__11685 = cljs.core.nth.call(null, vec__11683__11684, 0, null);
    if(cljs.core.not.call(null, context__11685)) {
      return jQuery(jayq.core.__GT_selector.call(null, sel))
    }else {
      return jQuery(jayq.core.__GT_selector.call(null, sel), context__11685)
    }
  };
  var $ = function(sel, var_args) {
    var p__11679 = null;
    if(goog.isDef(var_args)) {
      p__11679 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return $__delegate.call(this, sel, p__11679)
  };
  $.cljs$lang$maxFixedArity = 1;
  $.cljs$lang$applyTo = function(arglist__11686) {
    var sel = cljs.core.first(arglist__11686);
    var p__11679 = cljs.core.rest(arglist__11686);
    return $__delegate(sel, p__11679)
  };
  $.cljs$lang$arity$variadic = $__delegate;
  return $
}();
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____11687 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____11687)) {
    return or__3824__auto____11687
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jQuery.prototype.call = function() {
  var G__11688 = null;
  var G__11688__2 = function(_, k) {
    return cljs.core._lookup.call(null, this, k)
  };
  var G__11688__3 = function(_, k, not_found) {
    return cljs.core._lookup.call(null, this, k, not_found)
  };
  G__11688 = function(_, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11688__2.call(this, _, k);
      case 3:
        return G__11688__3.call(this, _, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11688
}();
jayq.core.anim = function anim(elem, props, dur) {
  return elem.animate(jayq.util.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function() {
  var text = null;
  var text__1 = function($elem) {
    return $elem.text()
  };
  var text__2 = function($elem, txt) {
    return $elem.text(txt)
  };
  text = function($elem, txt) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, $elem);
      case 2:
        return text__2.call(this, $elem, txt)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
jayq.core.css = function css($elem, opts) {
  if(cljs.core.keyword_QMARK_.call(null, opts)) {
    return $elem.css(cljs.core.name.call(null, opts))
  }else {
    return $elem.css(jayq.util.clj__GT_js.call(null, opts))
  }
};
jayq.core.attr = function() {
  var attr__delegate = function($elem, a, p__11689) {
    var vec__11694__11695 = p__11689;
    var v__11696 = cljs.core.nth.call(null, vec__11694__11695, 0, null);
    var a__11697 = cljs.core.name.call(null, a);
    if(cljs.core.not.call(null, v__11696)) {
      return $elem.attr(a__11697)
    }else {
      return $elem.attr(a__11697, v__11696)
    }
  };
  var attr = function($elem, a, var_args) {
    var p__11689 = null;
    if(goog.isDef(var_args)) {
      p__11689 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return attr__delegate.call(this, $elem, a, p__11689)
  };
  attr.cljs$lang$maxFixedArity = 2;
  attr.cljs$lang$applyTo = function(arglist__11698) {
    var $elem = cljs.core.first(arglist__11698);
    var a = cljs.core.first(cljs.core.next(arglist__11698));
    var p__11689 = cljs.core.rest(cljs.core.next(arglist__11698));
    return attr__delegate($elem, a, p__11689)
  };
  attr.cljs$lang$arity$variadic = attr__delegate;
  return attr
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a))
};
jayq.core.data = function() {
  var data__delegate = function($elem, k, p__11699) {
    var vec__11704__11705 = p__11699;
    var v__11706 = cljs.core.nth.call(null, vec__11704__11705, 0, null);
    var k__11707 = cljs.core.name.call(null, k);
    if(cljs.core.not.call(null, v__11706)) {
      return $elem.data(k__11707)
    }else {
      return $elem.data(k__11707, v__11706)
    }
  };
  var data = function($elem, k, var_args) {
    var p__11699 = null;
    if(goog.isDef(var_args)) {
      p__11699 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return data__delegate.call(this, $elem, k, p__11699)
  };
  data.cljs$lang$maxFixedArity = 2;
  data.cljs$lang$applyTo = function(arglist__11708) {
    var $elem = cljs.core.first(arglist__11708);
    var k = cljs.core.first(cljs.core.next(arglist__11708));
    var p__11699 = cljs.core.rest(cljs.core.next(arglist__11708));
    return data__delegate($elem, k, p__11699)
  };
  data.cljs$lang$arity$variadic = data__delegate;
  return data
}();
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0'keywordize-keys", true)
};
jayq.core.add_class = function add_class($elem, cl) {
  var cl__11710 = cljs.core.name.call(null, cl);
  return $elem.addClass(cl__11710)
};
jayq.core.remove_class = function remove_class($elem, cl) {
  var cl__11712 = cljs.core.name.call(null, cl);
  return $elem.removeClass(cl__11712)
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  var cl__11714 = cljs.core.name.call(null, cl);
  return $elem.toggleClass(cl__11714)
};
jayq.core.has_class = function has_class($elem, cl) {
  var cl__11716 = cljs.core.name.call(null, cl);
  return $elem.hasClass(cl__11716)
};
jayq.core.is = function is($elem, selector) {
  return $elem.is(jayq.core.__GT_selector.call(null, selector))
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content)
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content)
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content)
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.append_to = function append_to($elem, target) {
  return $elem.appendTo(jayq.core.__GT_selector.call(null, target))
};
jayq.core.prepend_to = function prepend_to($elem, target) {
  return $elem.prependTo(jayq.core.__GT_selector.call(null, target))
};
jayq.core.insert_before = function insert_before($elem, target) {
  return $elem.insertBefore(jayq.core.__GT_selector.call(null, target))
};
jayq.core.insert_after = function insert_after($elem, target) {
  return $elem.insertAfter(jayq.core.__GT_selector.call(null, target))
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__11717) {
    var vec__11722__11723 = p__11717;
    var speed__11724 = cljs.core.nth.call(null, vec__11722__11723, 0, null);
    var on_finish__11725 = cljs.core.nth.call(null, vec__11722__11723, 1, null);
    return $elem.hide(speed__11724, on_finish__11725)
  };
  var hide = function($elem, var_args) {
    var p__11717 = null;
    if(goog.isDef(var_args)) {
      p__11717 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__11717)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__11726) {
    var $elem = cljs.core.first(arglist__11726);
    var p__11717 = cljs.core.rest(arglist__11726);
    return hide__delegate($elem, p__11717)
  };
  hide.cljs$lang$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__11727) {
    var vec__11732__11733 = p__11727;
    var speed__11734 = cljs.core.nth.call(null, vec__11732__11733, 0, null);
    var on_finish__11735 = cljs.core.nth.call(null, vec__11732__11733, 1, null);
    return $elem.show(speed__11734, on_finish__11735)
  };
  var show = function($elem, var_args) {
    var p__11727 = null;
    if(goog.isDef(var_args)) {
      p__11727 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__11727)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__11736) {
    var $elem = cljs.core.first(arglist__11736);
    var p__11727 = cljs.core.rest(arglist__11736);
    return show__delegate($elem, p__11727)
  };
  show.cljs$lang$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__11737) {
    var vec__11742__11743 = p__11737;
    var speed__11744 = cljs.core.nth.call(null, vec__11742__11743, 0, null);
    var on_finish__11745 = cljs.core.nth.call(null, vec__11742__11743, 1, null);
    return $elem.toggle(speed__11744, on_finish__11745)
  };
  var toggle = function($elem, var_args) {
    var p__11737 = null;
    if(goog.isDef(var_args)) {
      p__11737 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__11737)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__11746) {
    var $elem = cljs.core.first(arglist__11746);
    var p__11737 = cljs.core.rest(arglist__11746);
    return toggle__delegate($elem, p__11737)
  };
  toggle.cljs$lang$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__11747) {
    var vec__11752__11753 = p__11747;
    var speed__11754 = cljs.core.nth.call(null, vec__11752__11753, 0, null);
    var on_finish__11755 = cljs.core.nth.call(null, vec__11752__11753, 1, null);
    return $elem.fadeOut(speed__11754, on_finish__11755)
  };
  var fade_out = function($elem, var_args) {
    var p__11747 = null;
    if(goog.isDef(var_args)) {
      p__11747 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__11747)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__11756) {
    var $elem = cljs.core.first(arglist__11756);
    var p__11747 = cljs.core.rest(arglist__11756);
    return fade_out__delegate($elem, p__11747)
  };
  fade_out.cljs$lang$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__11757) {
    var vec__11762__11763 = p__11757;
    var speed__11764 = cljs.core.nth.call(null, vec__11762__11763, 0, null);
    var on_finish__11765 = cljs.core.nth.call(null, vec__11762__11763, 1, null);
    return $elem.fadeIn(speed__11764, on_finish__11765)
  };
  var fade_in = function($elem, var_args) {
    var p__11757 = null;
    if(goog.isDef(var_args)) {
      p__11757 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__11757)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__11766) {
    var $elem = cljs.core.first(arglist__11766);
    var p__11757 = cljs.core.rest(arglist__11766);
    return fade_in__delegate($elem, p__11757)
  };
  fade_in.cljs$lang$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__11767) {
    var vec__11772__11773 = p__11767;
    var speed__11774 = cljs.core.nth.call(null, vec__11772__11773, 0, null);
    var on_finish__11775 = cljs.core.nth.call(null, vec__11772__11773, 1, null);
    return $elem.slideUp(speed__11774, on_finish__11775)
  };
  var slide_up = function($elem, var_args) {
    var p__11767 = null;
    if(goog.isDef(var_args)) {
      p__11767 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__11767)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__11776) {
    var $elem = cljs.core.first(arglist__11776);
    var p__11767 = cljs.core.rest(arglist__11776);
    return slide_up__delegate($elem, p__11767)
  };
  slide_up.cljs$lang$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__11777) {
    var vec__11782__11783 = p__11777;
    var speed__11784 = cljs.core.nth.call(null, vec__11782__11783, 0, null);
    var on_finish__11785 = cljs.core.nth.call(null, vec__11782__11783, 1, null);
    return $elem.slideDown(speed__11784, on_finish__11785)
  };
  var slide_down = function($elem, var_args) {
    var p__11777 = null;
    if(goog.isDef(var_args)) {
      p__11777 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__11777)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__11786) {
    var $elem = cljs.core.first(arglist__11786);
    var p__11777 = cljs.core.rest(arglist__11786);
    return slide_down__delegate($elem, p__11777)
  };
  slide_down.cljs$lang$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.siblings = function() {
  var siblings = null;
  var siblings__1 = function($elem) {
    return $elem.siblings()
  };
  var siblings__2 = function($elem, selector) {
    return $elem.siblings(cljs.core.name.call(null, selector))
  };
  siblings = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return siblings__1.call(this, $elem);
      case 2:
        return siblings__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  siblings.cljs$lang$arity$1 = siblings__1;
  siblings.cljs$lang$arity$2 = siblings__2;
  return siblings
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.parents = function() {
  var parents = null;
  var parents__1 = function($elem) {
    return $elem.parents()
  };
  var parents__2 = function($elem, selector) {
    return $elem.parents(cljs.core.name.call(null, selector))
  };
  parents = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, $elem);
      case 2:
        return parents__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
jayq.core.parents_until = function() {
  var parents_until = null;
  var parents_until__1 = function($elem) {
    return $elem.parentsUntil()
  };
  var parents_until__2 = function($elem, selector) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var parents_until__3 = function($elem, selector, filtr) {
    return $elem.parentsUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  parents_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return parents_until__1.call(this, $elem);
      case 2:
        return parents_until__2.call(this, $elem, selector);
      case 3:
        return parents_until__3.call(this, $elem, selector, filtr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents_until.cljs$lang$arity$1 = parents_until__1;
  parents_until.cljs$lang$arity$2 = parents_until__2;
  parents_until.cljs$lang$arity$3 = parents_until__3;
  return parents_until
}();
jayq.core.children = function() {
  var children = null;
  var children__1 = function($elem) {
    return $elem.children()
  };
  var children__2 = function($elem, selector) {
    return $elem.children(cljs.core.name.call(null, selector))
  };
  children = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return children__1.call(this, $elem);
      case 2:
        return children__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  children.cljs$lang$arity$1 = children__1;
  children.cljs$lang$arity$2 = children__2;
  return children
}();
jayq.core.next = function() {
  var next = null;
  var next__1 = function($elem) {
    return $elem.next()
  };
  var next__2 = function($elem, selector) {
    return $elem.next(cljs.core.name.call(null, selector))
  };
  next = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next__1.call(this, $elem);
      case 2:
        return next__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  next.cljs$lang$arity$1 = next__1;
  next.cljs$lang$arity$2 = next__2;
  return next
}();
jayq.core.prev = function() {
  var prev = null;
  var prev__1 = function($elem) {
    return $elem.prev()
  };
  var prev__2 = function($elem, selector) {
    return $elem.prev(cljs.core.name.call(null, selector))
  };
  prev = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev__1.call(this, $elem);
      case 2:
        return prev__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prev.cljs$lang$arity$1 = prev__1;
  prev.cljs$lang$arity$2 = prev__2;
  return prev
}();
jayq.core.next_all = function() {
  var next_all = null;
  var next_all__1 = function($elem) {
    return $elem.nextAll()
  };
  var next_all__2 = function($elem, selector) {
    return $elem.nextAll(cljs.core.name.call(null, selector))
  };
  next_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return next_all__1.call(this, $elem);
      case 2:
        return next_all__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  next_all.cljs$lang$arity$1 = next_all__1;
  next_all.cljs$lang$arity$2 = next_all__2;
  return next_all
}();
jayq.core.prev_all = function() {
  var prev_all = null;
  var prev_all__1 = function($elem) {
    return $elem.prevAll()
  };
  var prev_all__2 = function($elem, selector) {
    return $elem.prevAll(cljs.core.name.call(null, selector))
  };
  prev_all = function($elem, selector) {
    switch(arguments.length) {
      case 1:
        return prev_all__1.call(this, $elem);
      case 2:
        return prev_all__2.call(this, $elem, selector)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prev_all.cljs$lang$arity$1 = prev_all__1;
  prev_all.cljs$lang$arity$2 = prev_all__2;
  return prev_all
}();
jayq.core.next_until = function() {
  var next_until = null;
  var next_until__1 = function($elem) {
    return $elem.nextUntil()
  };
  var next_until__2 = function($elem, selector) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var next_until__3 = function($elem, selector, filtr) {
    return $elem.nextUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  next_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return next_until__1.call(this, $elem);
      case 2:
        return next_until__2.call(this, $elem, selector);
      case 3:
        return next_until__3.call(this, $elem, selector, filtr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  next_until.cljs$lang$arity$1 = next_until__1;
  next_until.cljs$lang$arity$2 = next_until__2;
  next_until.cljs$lang$arity$3 = next_until__3;
  return next_until
}();
jayq.core.prev_until = function() {
  var prev_until = null;
  var prev_until__1 = function($elem) {
    return $elem.prevUntil()
  };
  var prev_until__2 = function($elem, selector) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector))
  };
  var prev_until__3 = function($elem, selector, filtr) {
    return $elem.prevUntil(jayq.core.__GT_selector.call(null, selector), cljs.core.name.call(null, filtr))
  };
  prev_until = function($elem, selector, filtr) {
    switch(arguments.length) {
      case 1:
        return prev_until__1.call(this, $elem);
      case 2:
        return prev_until__2.call(this, $elem, selector);
      case 3:
        return prev_until__3.call(this, $elem, selector, filtr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prev_until.cljs$lang$arity$1 = prev_until__1;
  prev_until.cljs$lang$arity$2 = prev_until__2;
  prev_until.cljs$lang$arity$3 = prev_until__3;
  return prev_until
}();
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__11787) {
    var vec__11791__11792 = p__11787;
    var context__11793 = cljs.core.nth.call(null, vec__11791__11792, 0, null);
    return $elem.closest(jayq.core.__GT_selector.call(null, selector), context__11793)
  };
  var closest = function($elem, selector, var_args) {
    var p__11787 = null;
    if(goog.isDef(var_args)) {
      p__11787 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return closest__delegate.call(this, $elem, selector, p__11787)
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__11794) {
    var $elem = cljs.core.first(arglist__11794);
    var selector = cljs.core.first(cljs.core.next(arglist__11794));
    var p__11787 = cljs.core.rest(cljs.core.next(arglist__11794));
    return closest__delegate($elem, selector, p__11787)
  };
  closest.cljs$lang$arity$variadic = closest__delegate;
  return closest
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.inner = function inner($elem, v) {
  return $elem.html(v)
};
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val__delegate = function($elem, p__11795) {
    var vec__11799__11800 = p__11795;
    var v__11801 = cljs.core.nth.call(null, vec__11799__11800, 0, null);
    if(cljs.core.truth_(v__11801)) {
      return $elem.val(v__11801)
    }else {
      return $elem.val()
    }
  };
  var val = function($elem, var_args) {
    var p__11795 = null;
    if(goog.isDef(var_args)) {
      p__11795 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, $elem, p__11795)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__11802) {
    var $elem = cljs.core.first(arglist__11802);
    var p__11795 = cljs.core.rest(arglist__11802);
    return val__delegate($elem, p__11795)
  };
  val.cljs$lang$arity$variadic = val__delegate;
  return val
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize()
};
jayq.core.queue = function queue($elem, callback) {
  return $elem.queue(callback)
};
jayq.core.dequeue = function dequeue(elem) {
  return jayq.core.$.call(null, elem).dequeue()
};
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.xhr = function xhr(p__11803, content, callback) {
  var vec__11809__11810 = p__11803;
  var method__11811 = cljs.core.nth.call(null, vec__11809__11810, 0, null);
  var uri__11812 = cljs.core.nth.call(null, vec__11809__11810, 1, null);
  var params__11813 = jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'data", "\ufdd0'success"], {"\ufdd0'type":clojure.string.upper_case.call(null, cljs.core.name.call(null, method__11811)), "\ufdd0'data":jayq.util.clj__GT_js.call(null, content), "\ufdd0'success":callback}));
  return jQuery.ajax(uri__11812, params__11813)
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.util.clj__GT_js.call(null, settings))
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.util.clj__GT_js.call(null, settings))
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ajax.cljs$lang$arity$1 = ajax__1;
  ajax.cljs$lang$arity$2 = ajax__2;
  return ajax
}();
jayq.core.mimetype_converter = function mimetype_converter(s) {
  return cljs.reader.read_string.call(null, [cljs.core.str(s)].join(""))
};
jQuery.ajaxSetup(jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'accepts", "\ufdd0'contents", "\ufdd0'converters"], {"\ufdd0'accepts":cljs.core.ObjMap.fromObject(["\ufdd0'edn", "\ufdd0'clojure"], {"\ufdd0'edn":"application/edn, text/edn", "\ufdd0'clojure":"application/clojure, text/clojure"}), "\ufdd0'contents":cljs.core.ObjMap.fromObject(["clojure"], {"clojure":/edn|clojure/}), "\ufdd0'converters":cljs.core.ObjMap.fromObject(["text edn", "text clojure"], {"text edn":jayq.core.mimetype_converter, 
"text clojure":jayq.core.mimetype_converter})})));
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__11814) {
    var vec__11818__11819 = p__11814;
    var func__11820 = cljs.core.nth.call(null, vec__11818__11819, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func__11820)
  };
  var unbind = function($elem, ev, var_args) {
    var p__11814 = null;
    if(goog.isDef(var_args)) {
      p__11814 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unbind__delegate.call(this, $elem, ev, p__11814)
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__11821) {
    var $elem = cljs.core.first(arglist__11821);
    var ev = cljs.core.first(cljs.core.next(arglist__11821));
    var p__11814 = cljs.core.rest(cljs.core.next(arglist__11821));
    return unbind__delegate($elem, ev, p__11814)
  };
  unbind.cljs$lang$arity$variadic = unbind__delegate;
  return unbind
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return cljs.core.name.call(null, e)
  }else {
    if(cljs.core.map_QMARK_.call(null, e)) {
      return jayq.util.clj__GT_js.call(null, e)
    }else {
      if(cljs.core.sequential_QMARK_.call(null, e)) {
        return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Unknown event type: "), cljs.core.str(e)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__11822) {
    var vec__11828__11829 = p__11822;
    var sel__11830 = cljs.core.nth.call(null, vec__11828__11829, 0, null);
    var data__11831 = cljs.core.nth.call(null, vec__11828__11829, 1, null);
    var handler__11832 = cljs.core.nth.call(null, vec__11828__11829, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__11830), data__11831, handler__11832)
  };
  var on = function($elem, events, var_args) {
    var p__11822 = null;
    if(goog.isDef(var_args)) {
      p__11822 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__11822)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__11833) {
    var $elem = cljs.core.first(arglist__11833);
    var events = cljs.core.first(cljs.core.next(arglist__11833));
    var p__11822 = cljs.core.rest(cljs.core.next(arglist__11833));
    return on__delegate($elem, events, p__11822)
  };
  on.cljs$lang$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__11834) {
    var vec__11840__11841 = p__11834;
    var sel__11842 = cljs.core.nth.call(null, vec__11840__11841, 0, null);
    var data__11843 = cljs.core.nth.call(null, vec__11840__11841, 1, null);
    var handler__11844 = cljs.core.nth.call(null, vec__11840__11841, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__11842), data__11843, handler__11844)
  };
  var one = function($elem, events, var_args) {
    var p__11834 = null;
    if(goog.isDef(var_args)) {
      p__11834 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__11834)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__11845) {
    var $elem = cljs.core.first(arglist__11845);
    var events = cljs.core.first(cljs.core.next(arglist__11845));
    var p__11834 = cljs.core.rest(cljs.core.next(arglist__11845));
    return one__delegate($elem, events, p__11834)
  };
  one.cljs$lang$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__11846) {
    var vec__11851__11852 = p__11846;
    var sel__11853 = cljs.core.nth.call(null, vec__11851__11852, 0, null);
    var handler__11854 = cljs.core.nth.call(null, vec__11851__11852, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__11853), handler__11854)
  };
  var off = function($elem, events, var_args) {
    var p__11846 = null;
    if(goog.isDef(var_args)) {
      p__11846 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__11846)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__11855) {
    var $elem = cljs.core.first(arglist__11855);
    var events = cljs.core.first(cljs.core.next(arglist__11855));
    var p__11846 = cljs.core.rest(cljs.core.next(arglist__11855));
    return off__delegate($elem, events, p__11846)
  };
  off.cljs$lang$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
goog.provide("catb.views.pmt.vote");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("catb.backbone.core");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("jayq.util");
catb.views.pmt.vote.get_vote_score = function get_vote_score() {
  var v__7233 = jayq.core.$.call(null, "input[type=radio]:checked").val();
  var pred__7234__7237 = cljs.core._EQ_;
  var expr__7235__7238 = v__7233;
  if(pred__7234__7237.call(null, "accepted", expr__7235__7238)) {
    return 1
  }else {
    if(pred__7234__7237.call(null, "rejected", expr__7235__7238)) {
      return 0
    }else {
      if(pred__7234__7237.call(null, "undecided", expr__7235__7238)) {
        return 0.5
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__7235__7238)].join(""));
      }
    }
  }
};
catb.views.pmt.vote.send_vote = function send_vote(vote_model, id, score) {
  vote_model.set("votes", jayq.util.clj__GT_js.call(null, cljs.core.PersistentArrayMap.fromArrays([id], [score])));
  return vote_model.save()
};
catb.views.pmt.vote.vote_score = function vote_score(vote_model, id) {
  return vote_model.get("votes")[id]
};
catb.views.pmt.vote.round_score = function round_score(score) {
  return(new Number(score)).toFixed(2)
};
catb.views.pmt.vote.Vote = Backbone.View.extend({"render":function() {
  var this__7239 = this;
  var model__7240 = this__7239["model"];
  var claim__7241 = model__7240.get("claim");
  var lang__7242 = model__7240.get("lang");
  var current_case_pollid__7243 = model__7240.get("current-case-pollid");
  if(cljs.core.truth_(current_case_pollid__7243)) {
    this__7239.show_vote_results()
  }else {
    var item_selector__7209__auto____7244 = "#arguments-item";
    var claim_text__7245 = claim__7241.text[lang__7242];
    catb.views.core.template.call(null, this__7239, "\ufdd0'vote", cljs.core.ObjMap.fromObject(["\ufdd0'claim"], {"\ufdd0'claim":claim_text__7245}));
    jayq.core.attr.call(null, this__7239.$("input:radio:first"), "checked", true);
    PM.activate(item_selector__7209__auto____7244);
    PM.attach_lang_listener()
  }
  return this__7239
}, "show_vote_results":function() {
  var this__7246 = this;
  var item_selector__7209__auto____7247 = "#arguments-item";
  var model__7248 = this__7246["model"];
  var db__7249 = model__7248.get("db");
  var claim__7250 = model__7248.get("claim");
  var lang__7251 = model__7248.get("lang");
  var claim_text__7252 = claim__7250.text[lang__7251];
  PM.busy_cursor_on();
  PM.ajax_get([cljs.core.str(IMPACT.wsurl), cljs.core.str("/poll-results/"), cljs.core.str(IMPACT.debate_db), cljs.core.str("/"), cljs.core.str(IMPACT.db)].join(""), function(result) {
    var scores__7253 = cljs.core.js__GT_clj.call(null, result, "\ufdd0'keywordize-keys", true);
    PM.busy_cursor_off();
    var item_selector__7209__auto____7254 = "#arguments-item";
    catb.views.core.template.call(null, this__7246, "\ufdd0'vote-results", cljs.core.ObjMap.fromObject(["\ufdd0'db", "\ufdd0'claim", "\ufdd0'accepted_score", "\ufdd0'rejected_score", "\ufdd0'undecided_score"], {"\ufdd0'db":db__7249, "\ufdd0'claim":claim_text__7252, "\ufdd0'accepted_score":catb.views.pmt.vote.round_score.call(null, 100 * (new cljs.core.Keyword("\ufdd0'accepted")).call(null, scores__7253)), "\ufdd0'rejected_score":catb.views.pmt.vote.round_score.call(null, 100 * (new cljs.core.Keyword("\ufdd0'rejected")).call(null, 
    scores__7253)), "\ufdd0'undecided_score":catb.views.pmt.vote.round_score.call(null, 100 * (new cljs.core.Keyword("\ufdd0'undecided")).call(null, scores__7253))}));
    PM.activate(item_selector__7209__auto____7254);
    return PM.attach_lang_listener()
  }, PM.on_error);
  PM.activate(item_selector__7209__auto____7247);
  PM.attach_lang_listener();
  return this__7246
}, "vote":function() {
  var this__7255 = this;
  var item_selector__7209__auto____7256 = "#arguments-item";
  var model__7257 = this__7255["model"];
  var db__7258 = model__7257.get("db");
  var claim__7259 = model__7257.get("claim");
  (new PM.DebatePoll(jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'opinion", "\ufdd0'mainissueatompredicate", "\ufdd0'casedb", "\ufdd0'policykey", "\ufdd0'qid", "\ufdd0'issueid"], {"\ufdd0'opinion":catb.views.pmt.vote.get_vote_score.call(null), "\ufdd0'mainissueatompredicate":PM.current_mainissueatompredicate(), "\ufdd0'casedb":IMPACT.db, "\ufdd0'policykey":IMPACT.current_policy, "\ufdd0'qid":IMPACT.question, "\ufdd0'issueid":PM.current_issue().id})))).save(null, jayq.util.clj__GT_js.call(null, 
  cljs.core.ObjMap.fromObject(["\ufdd0'success", "\ufdd0'error"], {"\ufdd0'success":function(response) {
    return document.cookie = [cljs.core.str("pollid-"), cljs.core.str(IMPACT.db), cljs.core.str("="), cljs.core.str(response.id)].join("")
  }, "\ufdd0'error":PM.on_model_error})));
  catb.views.core.template.call(null, this__7255, "\ufdd0'after-vote", cljs.core.ObjMap.fromObject(["\ufdd0'db"], {"\ufdd0'db":db__7258}));
  PM.activate(item_selector__7209__auto____7256);
  PM.attach_lang_listener();
  return this__7255
}, "className":"pmt-vote", "events":{"click .show-vote-results":"show_vote_results", "click .vote-now":"vote"}});
catb.views.pmt.vote.display = function display() {
  var vote_view__7261 = catb.backbone.core.new$.call(null, catb.views.pmt.vote.Vote, cljs.core.ObjMap.fromObject(["\ufdd0'model"], {"\ufdd0'model":catb.backbone.core.new_model.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'claim", "\ufdd0'lang", "\ufdd0'db", "\ufdd0'current-case-pollid"], {"\ufdd0'claim":PM.current_issue(), "\ufdd0'lang":IMPACT.lang, "\ufdd0'db":IMPACT.db, "\ufdd0'current-case-pollid":PM.current_case_pollid()}))}));
  jayq.core.inner.call(null, jayq.core.$.call(null, "#pm"), vote_view__7261.$el);
  catb.backbone.core.render.call(null, vote_view__7261);
  return false
};
goog.exportSymbol("catb.views.pmt.vote.display", catb.views.pmt.vote.display);
goog.provide("catb.views.pmt.report");
goog.require("cljs.core");
goog.require("catb.views.pmt.vote");
goog.require("jayq.util");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("catb.backbone.core");
goog.require("catb.views.pmt.vote");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("jayq.util");
catb.views.pmt.report.Report = Backbone.View.extend({"render":function() {
  var this__7414 = this;
  PM.ajax_get([cljs.core.str(IMPACT.wsurl), cljs.core.str("/aggregated-poll-results/"), cljs.core.str(IMPACT.debate_db)].join(""), function(results) {
    var results__7415 = cljs.core.js__GT_clj.call(null, results);
    var default_values__7416 = cljs.core.reduce.call(null, function(m, id) {
      return cljs.core.assoc.call(null, m, id, 0)
    }, cljs.core.ObjMap.EMPTY, PM.get_policies_ids());
    var results__7417 = cljs.core.merge.call(null, default_values__7416, results__7415);
    var policies__7424 = cljs.core.reduce.call(null, function(policies, p__7418) {
      var vec__7419__7420 = p__7418;
      var policy_id__7421 = cljs.core.nth.call(null, vec__7419__7420, 0, null);
      var agreement__7422 = cljs.core.nth.call(null, vec__7419__7420, 1, null);
      var name__7423 = PM.get_policy_header(policy_id__7421).title;
      return cljs.core.cons.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'name", "\ufdd0'agreement", "\ufdd0'url"], {"\ufdd0'name":name__7423, "\ufdd0'agreement":catb.views.pmt.vote.round_score.call(null, 100 * agreement__7422), "\ufdd0'url":[cljs.core.str("#/"), cljs.core.str(PM.policies_url()), cljs.core.str("/"), cljs.core.str(policy_id__7421)].join("")}), policies)
    }, cljs.core.PersistentVector.EMPTY, results__7417);
    catb.views.core.template.call(null, this__7414, "\ufdd0'report", cljs.core.ObjMap.fromObject(["\ufdd0'policies"], {"\ufdd0'policies":jayq.util.clj__GT_js.call(null, policies__7424)}));
    PM.activate("#report-item");
    return PM.attach_lang_listener()
  });
  return this__7414
}, "className":"pmt-report"});
catb.views.pmt.report.display = function display() {
  var report_view__7426 = catb.backbone.core.new$.call(null, catb.views.pmt.report.Report, cljs.core.ObjMap.fromObject(["\ufdd0'model"], {"\ufdd0'model":catb.backbone.core.new_model.call(null, cljs.core.ObjMap.EMPTY)}));
  jayq.core.inner.call(null, jayq.core.$.call(null, "#pm"), report_view__7426.$el);
  catb.backbone.core.render.call(null, report_view__7426);
  return false
};
goog.exportSymbol("catb.views.pmt.report.display", catb.views.pmt.report.display);
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("catb.i18n");
goog.require("cljs.core");
catb.i18n.i18n = function i18n(k) {
  return jQuery.i18n.prop(k)
};
goog.provide("catb.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("catb.views.sct.claim_editor");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("catb.backbone.core");
goog.require("jayq.util");
goog.require("jayq.core");
goog.require("catb.views.core");
catb.views.sct.claim_editor.init_radio_buttons = function init_radio_buttons(this$, claim, statement_votes) {
  if(cljs.core.truth_(catb.views.core.agreed_QMARK_.call(null, claim, statement_votes))) {
    return jayq.core.attr.call(null, this$.$("input:radio:first"), "checked", true)
  }else {
    if(cljs.core.truth_(catb.views.core.disagreed_QMARK_.call(null, claim, statement_votes))) {
      return jayq.core.attr.call(null, this$.$("input:radio:nth(1)"), "checked", true)
    }else {
      return null
    }
  }
};
catb.views.sct.claim_editor.init_sliders = function init_sliders(this$, argument_votes, pro, con) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(arg, range) {
    var score__7112 = argument_votes.call(null, arg.id);
    return jayq.core.val.call(null, jayq.core.$.call(null, range), score__7112)
  }, cljs.core.concat.call(null, pro, con), this$.$("input[type=range]")))
};
catb.views.sct.claim_editor.update_arguments_scores = function update_arguments_scores(this$, argument_poll, pro, con) {
  cljs.core.doall.call(null, cljs.core.map.call(null, function(arg, range) {
    var weight__7115 = parseFloat(jayq.core.val.call(null, jayq.core.$.call(null, range)));
    var votes__7116 = argument_poll.get("votes");
    votes__7116[arg.id] = weight__7115;
    argument_poll.set("votes", votes__7116);
    jayq.util.log.call(null, "setting new weight for argument");
    return jayq.util.log.call(null, weight__7115)
  }, cljs.core.concat.call(null, pro, con), this$.$("input[type=range]")));
  return catb.backbone.core.save.call(null, argument_poll, null, cljs.core.ObjMap.fromObject(["\ufdd0'wait"], {"\ufdd0'wait":true}))
};
catb.views.sct.claim_editor.update_claim_score = function update_claim_score(this$, claimid, statement_poll) {
  var votes__7123 = statement_poll.get("votes");
  var pred__7124__7127 = cljs.core._EQ_;
  var expr__7125__7128 = jayq.core.val.call(null, this$.$("input:radio:checked"));
  if(pred__7124__7127.call(null, "agree", expr__7125__7128)) {
    votes__7123[claimid] = 1
  }else {
    if(pred__7124__7127.call(null, "disagree", expr__7125__7128)) {
      votes__7123[claimid] = 0
    }else {
    }
  }
  statement_poll.set("votes", votes__7123);
  return catb.backbone.core.save.call(null, statement_poll, null, cljs.core.ObjMap.fromObject(["\ufdd0'wait"], {"\ufdd0'wait":true}))
};
catb.views.sct.claim_editor.ClaimEditor = Backbone.View.extend({"render":function() {
  var this__7129 = this;
  var model__7130 = this__7129["model"];
  var claim__7131 = model__7130.get("claim");
  var arguments__7132 = model__7130.get("arguments");
  var statement_poll__7133 = model__7130.get("statement-poll");
  var argument_poll__7134 = model__7130.get("argument-poll");
  var argument_votes__7135 = catb.backbone.core.get_in.call(null, argument_poll__7134, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var statement_votes__7136 = catb.backbone.core.get_in.call(null, statement_poll__7133, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var claim__7137 = catb.views.core.json.call(null, claim__7131);
  var claim__7138 = catb.views.core.prepare_claim.call(null, statement_votes__7136, claim__7137);
  var pro__7139 = catb.views.core.pro_answered.call(null, claim__7138, arguments__7132, argument_votes__7135);
  var con__7140 = catb.views.core.con_answered.call(null, claim__7138, arguments__7132, argument_votes__7135);
  var claim__7141 = catb.views.core.prepare_arguments.call(null, claim__7138, arguments__7132, argument_votes__7135);
  catb.views.core.template.call(null, this__7129, "\ufdd0'sct-claim-editor", cljs.core.ObjMap.fromObject(["\ufdd0'claim"], {"\ufdd0'claim":claim__7141}));
  catb.views.sct.claim_editor.init_radio_buttons.call(null, this__7129, claim__7141, statement_votes__7136);
  catb.views.sct.claim_editor.init_sliders.call(null, this__7129, argument_votes__7135, pro__7139, con__7140);
  return this__7129
}, "save_score":function() {
  var this__7142 = this;
  var model__7143 = this__7142["model"];
  var claim__7144 = model__7143.get("claim");
  var arguments__7145 = model__7143.get("arguments");
  var statement_poll__7146 = model__7143.get("statement-poll");
  var argument_poll__7147 = model__7143.get("argument-poll");
  var parent__7148 = model__7143.get("parent");
  var argument_votes__7149 = catb.backbone.core.get_in.call(null, argument_poll__7147, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var statement_votes__7150 = catb.backbone.core.get_in.call(null, statement_poll__7146, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var claim__7151 = catb.views.core.json.call(null, claim__7144);
  var pro__7152 = catb.views.core.pro_answered.call(null, claim__7151, arguments__7145, argument_votes__7149);
  var con__7153 = catb.views.core.con_answered.call(null, claim__7151, arguments__7145, argument_votes__7149);
  catb.views.sct.claim_editor.update_arguments_scores.call(null, this__7142, argument_poll__7147, pro__7152, con__7153);
  catb.views.sct.claim_editor.update_claim_score.call(null, this__7142, claim__7151.id, statement_poll__7146);
  parent__7148.render();
  return this__7142
}, "className":"sct-claim-editor", "events":{"click .save":"save_score"}});
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____11579 = this$;
    if(and__3822__auto____11579) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____11579
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2431__auto____11580 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11581 = clojure.browser.event.event_types[goog.typeOf(x__2431__auto____11580)];
      if(or__3824__auto____11581) {
        return or__3824__auto____11581
      }else {
        var or__3824__auto____11582 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____11582) {
          return or__3824__auto____11582
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11583) {
    var vec__11584__11585 = p__11583;
    var k__11586 = cljs.core.nth.call(null, vec__11584__11585, 0, null);
    var v__11587 = cljs.core.nth.call(null, vec__11584__11585, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11586.toLowerCase()), v__11587], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11588) {
    var vec__11589__11590 = p__11588;
    var k__11591 = cljs.core.nth.call(null, vec__11589__11590, 0, null);
    var v__11592 = cljs.core.nth.call(null, vec__11589__11590, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11591.toLowerCase()), v__11592], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11442) {
  var vec__11443__11444 = p__11442;
  var k__11445 = cljs.core.nth.call(null, vec__11443__11444, 0, null);
  var v__11446 = cljs.core.nth.call(null, vec__11443__11444, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11445.toLowerCase()), v__11446], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____11463 = this$;
      if(and__3822__auto____11463) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____11463
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2431__auto____11464 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11465 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11464)];
        if(or__3824__auto____11465) {
          return or__3824__auto____11465
        }else {
          var or__3824__auto____11466 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11466) {
            return or__3824__auto____11466
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____11467 = this$;
      if(and__3822__auto____11467) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____11467
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2431__auto____11468 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11469 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11468)];
        if(or__3824__auto____11469) {
          return or__3824__auto____11469
        }else {
          var or__3824__auto____11470 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11470) {
            return or__3824__auto____11470
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____11471 = this$;
      if(and__3822__auto____11471) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____11471
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2431__auto____11472 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11473 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11472)];
        if(or__3824__auto____11473) {
          return or__3824__auto____11473
        }else {
          var or__3824__auto____11474 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11474) {
            return or__3824__auto____11474
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____11475 = this$;
      if(and__3822__auto____11475) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____11475
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2431__auto____11476 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11477 = clojure.browser.net.connect[goog.typeOf(x__2431__auto____11476)];
        if(or__3824__auto____11477) {
          return or__3824__auto____11477
        }else {
          var or__3824__auto____11478 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11478) {
            return or__3824__auto____11478
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____11499 = this$;
      if(and__3822__auto____11499) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____11499
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2431__auto____11500 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11501 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11500)];
        if(or__3824__auto____11501) {
          return or__3824__auto____11501
        }else {
          var or__3824__auto____11502 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11502) {
            return or__3824__auto____11502
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____11503 = this$;
      if(and__3822__auto____11503) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____11503
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2431__auto____11504 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11505 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11504)];
        if(or__3824__auto____11505) {
          return or__3824__auto____11505
        }else {
          var or__3824__auto____11506 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11506) {
            return or__3824__auto____11506
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____11507 = this$;
      if(and__3822__auto____11507) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____11507
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2431__auto____11508 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11509 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11508)];
        if(or__3824__auto____11509) {
          return or__3824__auto____11509
        }else {
          var or__3824__auto____11510 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11510) {
            return or__3824__auto____11510
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____11511 = this$;
      if(and__3822__auto____11511) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____11511
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2431__auto____11512 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11513 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11512)];
        if(or__3824__auto____11513) {
          return or__3824__auto____11513
        }else {
          var or__3824__auto____11514 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11514) {
            return or__3824__auto____11514
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____11515 = this$;
      if(and__3822__auto____11515) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____11515
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2431__auto____11516 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11517 = clojure.browser.net.transmit[goog.typeOf(x__2431__auto____11516)];
        if(or__3824__auto____11517) {
          return or__3824__auto____11517
        }else {
          var or__3824__auto____11518 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11518) {
            return or__3824__auto____11518
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____11523 = this$;
    if(and__3822__auto____11523) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____11523
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2431__auto____11524 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____11525 = clojure.browser.net.close[goog.typeOf(x__2431__auto____11524)];
      if(or__3824__auto____11525) {
        return or__3824__auto____11525
      }else {
        var or__3824__auto____11526 = clojure.browser.net.close["_"];
        if(or__3824__auto____11526) {
          return or__3824__auto____11526
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11527) {
    var vec__11528__11529 = p__11527;
    var k__11530 = cljs.core.nth.call(null, vec__11528__11529, 0, null);
    var v__11531 = cljs.core.nth.call(null, vec__11528__11529, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11530.toLowerCase()), v__11531], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11532) {
  var vec__11533__11534 = p__11532;
  var k__11535 = cljs.core.nth.call(null, vec__11533__11534, 0, null);
  var v__11536 = cljs.core.nth.call(null, vec__11533__11534, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11535.toLowerCase()), v__11536], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____11545 = this$;
      if(and__3822__auto____11545) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____11545
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2431__auto____11546 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11547 = clojure.browser.net.register_service[goog.typeOf(x__2431__auto____11546)];
        if(or__3824__auto____11547) {
          return or__3824__auto____11547
        }else {
          var or__3824__auto____11548 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11548) {
            return or__3824__auto____11548
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____11549 = this$;
      if(and__3822__auto____11549) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____11549
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2431__auto____11550 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____11551 = clojure.browser.net.register_service[goog.typeOf(x__2431__auto____11550)];
        if(or__3824__auto____11551) {
          return or__3824__auto____11551
        }else {
          var or__3824__auto____11552 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11552) {
            return or__3824__auto____11552
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____11564 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____11564)) {
      var config__11565 = temp__3974__auto____11564;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__11565))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__11566) {
      var vec__11567__11568 = p__11566;
      var k__11569 = cljs.core.nth.call(null, vec__11567__11568, 0, null);
      var v__11570 = cljs.core.nth.call(null, vec__11567__11568, 1, null);
      var temp__3971__auto____11571 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__11569, null);
      if(cljs.core.truth_(temp__3971__auto____11571)) {
        var field__11572 = temp__3971__auto____11571;
        var G__11573__11574 = sum;
        G__11573__11574[field__11572] = v__11570;
        return G__11573__11574
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("catb.views.pmt.facts");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
catb.views.pmt.facts.i = cljs.core.atom.call(null, 0);
catb.views.pmt.facts.send_answers = function send_answers(questions, on_response) {
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, catb.views.pmt.facts.i), 0)) {
    cljs.core.swap_BANG_.call(null, catb.views.pmt.facts.i, cljs.core.inc);
    PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'answers"], {"\ufdd0'answers":cljs.core.PersistentVector.fromArray([cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'values"], {"\ufdd0'id":1, "\ufdd0'values":cljs.core.PersistentVector.fromArray(["no"], true)})], true)})), on_response, IMPACT.user, IMPACT.password, PM.on_error);
    return false
  }else {
    PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'answers"], {"\ufdd0'answers":cljs.core.PersistentVector.fromArray([cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'values"], {"\ufdd0'id":2, "\ufdd0'values":cljs.core.PersistentVector.fromArray(["no"], true)})], true)})), on_response, IMPACT.user, IMPACT.password, PM.on_error);
    return false
  }
};
goog.exportSymbol("catb.views.pmt.facts.send_answers", catb.views.pmt.facts.send_answers);
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____11424 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____11424)) {
    var conn__11425 = temp__3971__auto____11424;
    return clojure.browser.net.transmit.call(null, conn__11425, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__11431 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e11429) {
      if(cljs.core.instance_QMARK_.call(null, Error, e11429)) {
        var e__11430 = e11429;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__11430), "\ufdd0'stacktrace":cljs.core.truth_(e__11430.hasOwnProperty("stack")) ? e__11430.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e11429;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__11431)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__11433 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__11433, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__11433, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____11437 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____11437)) {
    var repl_connection__11438 = temp__3971__auto____11437;
    var connection__11439 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__11439, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__11438, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11438, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__11439, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11438, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__11438, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__11439, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__11441 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__11441));
  clojure.browser.net.register_service.call(null, repl_connection__11441, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__11441, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__11441, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__11441, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("catb.repl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
catb.repl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.exportSymbol("catb.repl.connect", catb.repl.connect);
goog.provide("catb.views.pmt.questions");
goog.require("cljs.core");
goog.require("catb.i18n");
goog.require("jayq.util");
goog.require("jayq.core");
goog.require("clojure.string");
goog.require("catb.i18n");
goog.require("jayq.core");
goog.require("jayq.util");
catb.views.pmt.questions.get_radio_widget_html = function get_radio_widget_html(question) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(formalanswer, answer) {
    return cljs.core.format.call(null, '<input id="iq%s" class="radiobutton inputfield required" name="inputq%s" value="%s" type="radio"/>%s', (new cljs.core.Keyword("\ufdd0'id")).call(null, question), (new cljs.core.Keyword("\ufdd0'id")).call(null, question), formalanswer, answer)
  }, (new cljs.core.Keyword("\ufdd0'formalanswers")).call(null, question), (new cljs.core.Keyword("\ufdd0'answers")).call(null, question)))
};
catb.views.pmt.questions.get_answer_widget_html = function get_answer_widget_html(question, widget_type) {
  var pred__7159__7162 = cljs.core._EQ_;
  var expr__7160__7163 = widget_type;
  if(pred__7159__7162.call(null, "radio", expr__7160__7163)) {
    return catb.views.pmt.questions.get_radio_widget_html.call(null, question)
  }else {
    if(pred__7159__7162.call(null, "text", expr__7160__7163)) {
      return cljs.core.format.call(null, '<input class="inputfield required" type="text" name="%s" /> ', cljs.core.gensym.call(null, "text"))
    }else {
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__7160__7163)].join(""));
    }
  }
};
catb.views.pmt.questions.select_widget = function select_widget(values, names) {
  return[cljs.core.str(cljs.core.format.call(null, '<select type="select" class="combobox required"> ')), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(value, name) {
    return cljs.core.format.call(null, '<option class="dropdown-menu inputfield" value="%s">%s</option>', value, name)
  }, values, names))), cljs.core.str("</select>")].join("")
};
catb.views.pmt.questions.radio_widget = function radio_widget(values, names) {
  var inputname__7165 = cljs.core.gensym.call(null, "name");
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(value, name) {
    return cljs.core.format.call(null, '<input class="radiobutton inputfield required" name="%s" value="%s" type="radio"/>%s  ', inputname__7165, value, name)
  }, values, names))
};
catb.views.pmt.questions.get_answer_widgets_html = function get_answer_widgets_html(question) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(widget_type) {
    return catb.views.pmt.questions.get_answer_widget_html.call(null, question, widget_type)
  }, (new cljs.core.Keyword("\ufdd0'widgets")).call(null, question)))
};
catb.views.pmt.questions.replace_variables_by_widgets = function replace_variables_by_widgets(text, widgets) {
  var wid__7168 = cljs.core.atom.call(null, widgets);
  return clojure.string.replace.call(null, text, /\?\w+/, function() {
    var G__7170__delegate = function(_) {
      var w__7169 = cljs.core.first.call(null, cljs.core.deref.call(null, wid__7168));
      cljs.core.swap_BANG_.call(null, wid__7168, cljs.core.next);
      return w__7169
    };
    var G__7170 = function(var_args) {
      var _ = null;
      if(goog.isDef(var_args)) {
        _ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7170__delegate.call(this, _)
    };
    G__7170.cljs$lang$maxFixedArity = 0;
    G__7170.cljs$lang$applyTo = function(arglist__7171) {
      var _ = cljs.core.seq(arglist__7171);
      return G__7170__delegate(_)
    };
    G__7170.cljs$lang$arity$variadic = G__7170__delegate;
    return G__7170
  }())
};
catb.views.pmt.questions.get_ungrounded_question_html = function get_ungrounded_question_html(question) {
  var widgets__7174 = catb.views.pmt.questions.get_answer_widgets_html.call(null, question);
  var text_with_widgets__7175 = catb.views.pmt.questions.replace_variables_by_widgets.call(null, (new cljs.core.Keyword("\ufdd0'text")).call(null, question), widgets__7174);
  return cljs.core.format.call(null, '<div id="q%s">%s</div> ', (new cljs.core.Keyword("\ufdd0'id")).call(null, question), text_with_widgets__7175)
};
catb.views.pmt.questions.functional_QMARK_ = function functional_QMARK_(question) {
  var and__3822__auto____7177 = cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'min")).call(null, question), 1);
  if(and__3822__auto____7177) {
    return cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'max")).call(null, question), 1)
  }else {
    return and__3822__auto____7177
  }
};
catb.views.pmt.questions.get_yes_no_question_html = function get_yes_no_question_html(question) {
  return[cljs.core.str(cljs.core.format.call(null, '<div id="q%s"> ', (new cljs.core.Keyword("\ufdd0'id")).call(null, question))), cljs.core.str(clojure.string.capitalize.call(null, (new cljs.core.Keyword("\ufdd0'text")).call(null, question))), cljs.core.str(catb.views.pmt.questions.get_answer_widget_html.call(null, question, "radio")), cljs.core.str("</div>")].join("")
};
catb.views.pmt.questions.widget_for_role = function widget_for_role(question) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7179 = catb.views.pmt.questions.functional_QMARK_.call(null, question);
    if(cljs.core.truth_(and__3822__auto____7179)) {
      return cljs.core.coll_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question))
    }else {
      return and__3822__auto____7179
    }
  }())) {
    return catb.views.pmt.questions.select_widget.call(null, (new cljs.core.Keyword("\ufdd0'type")).call(null, question), (new cljs.core.Keyword("\ufdd0'typename")).call(null, question))
  }else {
    if("\ufdd0'else") {
      throw"NYI";
    }else {
      return null
    }
  }
};
catb.views.pmt.questions.get_role_question_html = function get_role_question_html(question) {
  var capitalized_text__7182 = clojure.string.capitalize.call(null, (new cljs.core.Keyword("\ufdd0'text")).call(null, question));
  var content__7183 = cljs.core.truth_((new cljs.core.Keyword("\ufdd0'yesnoquestion")).call(null, question)) ? [cljs.core.str(capitalized_text__7182), cljs.core.str(catb.views.pmt.questions.radio_widget.call(null, cljs.core.vec(["\ufdd1'yes", "\ufdd1'no", "\ufdd1'maybe"]), (new cljs.core.Keyword("\ufdd0'answers")).call(null, question)))].join("") : catb.views.pmt.questions.replace_variables_by_widgets.call(null, capitalized_text__7182, cljs.core.PersistentVector.fromArray([catb.views.pmt.questions.widget_for_role.call(null, 
  question)], true));
  return cljs.core.format.call(null, '<div id="q%s">%s</div>', (new cljs.core.Keyword("\ufdd0'id")).call(null, question), content__7183)
};
catb.views.pmt.questions.get_concept_question_html = function get_concept_question_html(question) {
  var capitalized_text__7186 = clojure.string.capitalize.call(null, (new cljs.core.Keyword("\ufdd0'text")).call(null, question));
  var content__7187 = cljs.core.truth_((new cljs.core.Keyword("\ufdd0'yesnoquestion")).call(null, question)) ? [cljs.core.str(capitalized_text__7186), cljs.core.str(catb.views.pmt.questions.radio_widget.call(null, cljs.core.vec(["\ufdd1'yes", "\ufdd1'no", "\ufdd1'maybe"]), (new cljs.core.Keyword("\ufdd0'answers")).call(null, question)))].join("") : catb.views.pmt.questions.replace_variables_by_widgets.call(null, capitalized_text__7186, cljs.core.PersistentVector.fromArray([catb.views.pmt.questions.widget_for_role.call(null, 
  question)], true));
  return cljs.core.format.call(null, '<div id="q%s">%s</div>', (new cljs.core.Keyword("\ufdd0'id")).call(null, question), content__7187)
};
catb.views.pmt.questions.get_question_html = function get_question_html(question) {
  if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'role")).call(null, question))) {
    return catb.views.pmt.questions.get_role_question_html.call(null, question)
  }else {
    if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'concept")).call(null, question))) {
      return catb.views.pmt.questions.get_concept_question_html.call(null, question)
    }else {
      if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'yesnoquestion")).call(null, question))) {
        return catb.views.pmt.questions.get_yes_no_question_html.call(null, question)
      }else {
        if("\ufdd0'else") {
          return catb.views.pmt.questions.get_ungrounded_question_html.call(null, question)
        }else {
          return null
        }
      }
    }
  }
};
catb.views.pmt.questions.set_default_value = function set_default_value(question) {
  if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'default")).call(null, question))) {
    if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'yesnoquestion")).call(null, question))) {
      var el__7190 = jayq.core.$.call(null, [cljs.core.str("#q"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, question)), cljs.core.str(" input[value='"), cljs.core.str((new cljs.core.Keyword("\ufdd0'default")).call(null, question)), cljs.core.str("']")].join(""));
      return el__7190.attr("checked", true)
    }else {
      var el__7191 = jayq.core.$.call(null, [cljs.core.str("#q"), cljs.core.str((new cljs.core.Keyword("\ufdd0'id")).call(null, question)), cljs.core.str(" select")].join(""));
      return el__7191.val((new cljs.core.Keyword("\ufdd0'default")).call(null, question))
    }
  }else {
    return null
  }
};
catb.views.pmt.questions.add_question_html = function add_question_html(question, questionslist) {
  jayq.core.append.call(null, questionslist, cljs.core.format.call(null, "<p><i>%s</i></p>", function() {
    var or__3824__auto____7193 = (new cljs.core.Keyword("\ufdd0'hint")).call(null, question);
    if(cljs.core.truth_(or__3824__auto____7193)) {
      return or__3824__auto____7193
    }else {
      return""
    }
  }()));
  jayq.core.append.call(null, questionslist, catb.views.pmt.questions.get_question_html.call(null, question));
  catb.views.pmt.questions.set_default_value.call(null, question);
  return jayq.core.append.call(null, questionslist, "<br/>")
};
catb.views.pmt.questions.add_questions_html = function add_questions_html(questions, questionslist) {
  jayq.util.log.call(null, questions);
  jayq.core.append.call(null, questionslist, cljs.core.format.call(null, "<h3>%s</h3>", cljs.core.first.call(null, questions).category_name));
  var G__7197__7198 = cljs.core.seq.call(null, questions);
  while(true) {
    if(G__7197__7198) {
      var q__7199 = cljs.core.first.call(null, G__7197__7198);
      catb.views.pmt.questions.add_question_html.call(null, cljs.core.js__GT_clj.call(null, q__7199, "\ufdd0'keywordize-keys", true), questionslist);
      var G__7200 = cljs.core.next.call(null, G__7197__7198);
      G__7197__7198 = G__7200;
      continue
    }else {
      return null
    }
    break
  }
};
catb.views.pmt.questions.add_submit_button = function add_submit_button(questionslist, onsubmit) {
  var button_id__7202 = [cljs.core.str(cljs.core.gensym.call(null, "button"))].join("");
  jayq.core.append.call(null, questionslist, cljs.core.format.call(null, '<input type="button" value="%s" id="%s"/> ', catb.i18n.i18n.call(null, "pmt_submit"), button_id__7202));
  jayq.core.append.call(null, questionslist, "<hr/>");
  return jayq.core.$.call(null, [cljs.core.str("#"), cljs.core.str(button_id__7202)].join("")).click(onsubmit)
};
catb.views.pmt.questions.show_questions = function show_questions(questions, questionslist, onsubmit) {
  catb.views.pmt.questions.add_questions_html.call(null, questions, questionslist);
  catb.views.pmt.questions.add_submit_button.call(null, questionslist, onsubmit);
  jayq.core.$.call(null, "#questionsform").validate();
  PM.scroll_to_bottom();
  return false
};
goog.exportSymbol("catb.views.pmt.questions.show_questions", catb.views.pmt.questions.show_questions);
goog.provide("catb.views.sct.comparison");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("catb.models.core");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("catb.models.core");
goog.require("catb.backbone.core");
goog.require("jayq.util");
goog.require("jayq.core");
goog.require("catb.models.core");
goog.require("catb.views.core");
catb.views.sct.comparison.build_metadata = function build_metadata(sources, metadata) {
  return cljs.core.reduce.call(null, function(m, p__7020) {
    var vec__7021__7022 = p__7020;
    var k__7023 = cljs.core.nth.call(null, vec__7021__7022, 0, null);
    var v__7024 = cljs.core.nth.call(null, vec__7021__7022, 1, null);
    jayq.util.log.call(null, "v =");
    jayq.util.log.call(null, v__7024);
    var md__7025 = cljs.core.map.call(null, cljs.core.partial.call(null, catb.models.core.get_metadata, metadata), v__7024);
    var ___7026 = jayq.util.log.call(null, "md");
    var ___7027 = jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, md__7025));
    var md_data__7028 = cljs.core.map.call(null, function(m) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'metadata_text"], {"\ufdd0'metadata_text":AGB.format_linear_metadata(m)})
    }, md__7025);
    return cljs.core.assoc.call(null, m, k__7023, md_data__7028)
  }, cljs.core.ObjMap.EMPTY, sources)
};
catb.views.sct.comparison.add_has_metadata = function add_has_metadata(metadata) {
  return cljs.core.merge.call(null, metadata, cljs.core.ObjMap.fromObject(["\ufdd0'has-very-little", "\ufdd0'has-little", "\ufdd0'has-some", "\ufdd0'has-much", "\ufdd0'has-very-much"], {"\ufdd0'has-very-little":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'very-little"), "\ufdd0'has-little":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'little"), "\ufdd0'has-some":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'some"), "\ufdd0'has-much":cljs.core.contains_QMARK_.call(null, 
  metadata, "\ufdd0'much"), "\ufdd0'has-very-much":cljs.core.contains_QMARK_.call(null, metadata, "\ufdd0'very-much")}))
};
catb.views.sct.comparison.Comparison = Backbone.View.extend({"render":function() {
  var this__7029 = this;
  var model__7030 = this__7029["model"];
  var statement_poll__7031 = model__7030.get("statement-poll");
  var statements__7032 = model__7030.get("statements");
  var arguments__7033 = model__7030.get("arguments");
  var issue__7034 = model__7030.get("issue");
  var metadata__7035 = model__7030.get("metadata");
  var votes__7036 = catb.backbone.core.get_in.call(null, statement_poll__7031, cljs.core.PersistentVector.fromArray(["\ufdd0'votes"], true));
  var accepted_statements__7042 = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.first, cljs.core.filter.call(null, function(p__7037) {
    var vec__7038__7039 = p__7037;
    var id__7040 = cljs.core.nth.call(null, vec__7038__7039, 0, null);
    var score__7041 = cljs.core.nth.call(null, vec__7038__7039, 1, null);
    return catb.views.core.score_agreed_QMARK_.call(null, score__7041)
  }, votes__7036)));
  var arguments_in_issue__7043 = catb.models.core.arguments_for_statement.call(null, issue__7034, arguments__7033);
  var statements__7044 = catb.models.core.statements_by_sources.call(null, cljs.core.map.call(null, catb.views.core.json, arguments_in_issue__7043));
  var sources__7045 = catb.models.core.sources_by_similarity.call(null, statements__7044, accepted_statements__7042);
  var variables__7046 = catb.views.sct.comparison.build_metadata.call(null, sources__7045, metadata__7035);
  var variables__7047 = catb.views.sct.comparison.add_has_metadata.call(null, variables__7046);
  jayq.util.log.call(null, "sources by similarity");
  jayq.util.log.call(null, jayq.util.clj__GT_js.call(null, sources__7045));
  catb.views.core.template.call(null, this__7029, "\ufdd0'sct-comparison", variables__7047);
  return this__7029
}, "className":"sct-comparison"});
goog.provide("catb.views.sct.summary");
goog.require("cljs.core");
goog.require("catb.models.core");
goog.require("jayq.util");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("catb.views.sct.claim_editor");
goog.require("catb.backbone.core");
goog.require("jayq.util");
goog.require("jayq.core");
goog.require("catb.models.core");
goog.require("catb.views.core");
catb.views.sct.summary.assign_claim_ids = function assign_claim_ids(this$, claims) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(claim, p) {
    return jayq.core.$.call(null, p).data("id", claim.id)
  }, claims, this$.$(".change-score")))
};
catb.views.sct.summary.Summary = Backbone.View.extend({"render":function() {
  var this__7091 = this;
  var model__7092 = this__7091["model"];
  var statements__7093 = model__7092.get("statements");
  var votes__7094 = catb.backbone.core.get_in.call(null, model__7092, cljs.core.PersistentVector.fromArray(["\ufdd0'statement-poll", "\ufdd0'votes"], true));
  var votes__7095 = cljs.core.js__GT_clj.call(null, votes__7094);
  var claims_ids__7096 = cljs.core.keys.call(null, votes__7095);
  var claims__7097 = cljs.core.map.call(null, cljs.core.comp.call(null, catb.views.core.json, cljs.core.partial.call(null, catb.models.core.get_stmt, statements__7093)), claims_ids__7096);
  var claims__7098 = cljs.core.map.call(null, cljs.core.partial.call(null, catb.views.core.prepare_claim, votes__7095), claims__7097);
  catb.views.core.template.call(null, this__7091, "\ufdd0'sct-summary", cljs.core.ObjMap.fromObject(["\ufdd0'claims"], {"\ufdd0'claims":claims__7098}));
  catb.views.sct.summary.assign_claim_ids.call(null, this__7091, claims__7098);
  return this__7091
}, "jump_to_comparison":function() {
  var this__7099 = this;
  PM.set_sct_comparison_url();
  return this__7099
}, "edit_claim":function(event) {
  var this__7100 = this;
  var model__7101 = this__7100["model"];
  var statements__7102 = model__7101.get("statements");
  var arguments__7103 = model__7101.get("arguments");
  var statement_poll__7104 = model__7101.get("statement-poll");
  var argument_poll__7105 = model__7101.get("argument-poll");
  var target__7106 = event.target;
  var parent__7107 = jayq.core.$.call(null, target__7106).parents("li");
  var id__7108 = jayq.core.$.call(null, target__7106).data("id");
  var claim__7109 = catb.models.core.get_stmt.call(null, statements__7102, id__7108);
  var claim_editor__7110 = catb.backbone.core.new$.call(null, catb.views.sct.claim_editor.ClaimEditor, cljs.core.ObjMap.fromObject(["\ufdd0'model"], {"\ufdd0'model":catb.backbone.core.new_model.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'claim", "\ufdd0'parent", "\ufdd0'arguments", "\ufdd0'argument-poll", "\ufdd0'statement-poll"], {"\ufdd0'claim":claim__7109, "\ufdd0'parent":this__7100, "\ufdd0'arguments":arguments__7103, "\ufdd0'argument-poll":argument_poll__7105, "\ufdd0'statement-poll":statement_poll__7104}))}));
  jayq.core.inner.call(null, parent__7107, claim_editor__7110.$el);
  catb.backbone.core.render.call(null, claim_editor__7110);
  return this__7100
}, "className":"sct-summary", "events":{"click .compare":"jump_to_comparison", "click .change-score":"edit_claim"}});
goog.provide("catb.views.pmt.submitted_facts");
goog.require("cljs.core");
goog.require("catb.views.pmt.questions");
goog.require("jayq.util");
goog.require("catb.views.core");
goog.require("cljs.reader");
goog.require("jayq.core");
goog.require("catb.backbone.core");
goog.require("catb.views.pmt.questions");
goog.require("cljs.reader");
goog.require("catb.views.core");
goog.require("jayq.core");
goog.require("jayq.util");
catb.views.pmt.submitted_facts.assoc_values_to_questions = function assoc_values_to_questions(questions) {
  return cljs.core.map.call(null, function(question) {
    return cljs.core.assoc.call(null, question, "\ufdd0'values", PM.collect_answer((new cljs.core.Keyword("\ufdd0'id")).call(null, question)))
  }, questions)
};
catb.views.pmt.submitted_facts.send_answers = function send_answers(questions) {
  PM.busy_cursor_on();
  return PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'modify-facts"], {"\ufdd0'modify-facts":cljs.core.ObjMap.fromObject(["\ufdd0'facts", "\ufdd0'db"], {"\ufdd0'facts":catb.views.pmt.submitted_facts.assoc_values_to_questions.call(null, questions), "\ufdd0'db":IMPACT.db})})), function() {
    PM.busy_cursor_off();
    return PM.set_arguments_url(IMPACT.db)
  }, IMPACT.user, IMPACT.password, PM.on_error)
};
catb.views.pmt.submitted_facts.SubmittedFacts = Backbone.View.extend({"render":function() {
  var this__7215 = this;
  var model__7216 = this__7215["model"];
  var questions__7217 = model__7216.get("questions");
  var questions__7218 = cljs.core.js__GT_clj.call(null, questions__7217, "\ufdd0'keywordize-keys", true);
  var flat_questions__7219 = cljs.core.apply.call(null, cljs.core.concat, cljs.core.vals.call(null, questions__7218));
  catb.views.core.template.call(null, this__7215, "\ufdd0'submitted-facts", cljs.core.ObjMap.EMPTY);
  var questionslist__7220 = this__7215.$(".questions");
  PM.activate("#facts-item");
  PM.attach_lang_listener();
  var G__7221__7222 = cljs.core.seq.call(null, cljs.core.keys.call(null, questions__7218));
  while(true) {
    if(G__7221__7222) {
      var category__7223 = cljs.core.first.call(null, G__7221__7222);
      catb.views.pmt.questions.add_questions_html.call(null, jayq.util.clj__GT_js.call(null, questions__7218.call(null, category__7223)), questionslist__7220);
      var G__7224 = cljs.core.next.call(null, G__7221__7222);
      G__7221__7222 = G__7224;
      continue
    }else {
    }
    break
  }
  catb.views.pmt.questions.add_submit_button.call(null, questionslist__7220, cljs.core.partial.call(null, catb.views.pmt.submitted_facts.send_answers, flat_questions__7219));
  jayq.core.$.call(null, "#questionsform").validate();
  PM.scroll_to_bottom();
  return this__7215
}, "className":"pmt-submitted-facts"});
catb.views.pmt.submitted_facts.current_language = function current_language() {
  return cljs.core.js__GT_clj.call(null, PM.policies.get(IMPACT.current_policy).language)
};
catb.views.pmt.submitted_facts.show_facts_views = function show_facts_views(data) {
  var facts_view__7226 = catb.backbone.core.new$.call(null, catb.views.pmt.submitted_facts.SubmittedFacts, cljs.core.ObjMap.fromObject(["\ufdd0'model"], {"\ufdd0'model":catb.backbone.core.new_model.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'questions"], {"\ufdd0'questions":data}))}));
  jayq.core.inner.call(null, jayq.core.$.call(null, "#pm"), facts_view__7226.$el);
  return catb.backbone.core.render.call(null, facts_view__7226)
};
catb.views.pmt.submitted_facts.display_facts = function display_facts() {
  PM.ajax_post(IMPACT.simulation_url, jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'modifiable-facts"], {"\ufdd0'modifiable-facts":cljs.core.ObjMap.fromObject(["\ufdd0'theory", "\ufdd0'db"], {"\ufdd0'theory":IMPACT.current_policy, "\ufdd0'db":IMPACT.db})})), catb.views.pmt.submitted_facts.show_facts_views, IMPACT.user, IMPACT.password, PM.on_error);
  return false
};
goog.exportSymbol("catb.views.pmt.submitted_facts.display_facts", catb.views.pmt.submitted_facts.display_facts);
goog.provide("catb.playground");
goog.require("cljs.core");
goog.require("catb.template");
goog.require("catb.icanhaz.core");
goog.require("catb.backbone.core");
catb.playground.$ = $;
catb.playground.SctSummary = Backbone.View.extend({"render":function() {
  var this__6451 = this;
  catb.backbone.core.html.call(null, this__6451, "<div>MY VIEW FROM CLOJURE</view>");
  return this__6451
}, "do_stuff":function() {
  var this__6452 = this;
  console.log(catb.backbone.core.get_html.call(null, this__6452));
  alert("hello");
  return this__6452
}, "className":"sct-summary", "events":{"click":"do_stuff"}});
catb.playground.test_icanhaz = function test_icanhaz() {
  return catb.template.get.call(null, "\ufdd0'sct_summary", cljs.core.ObjMap.fromObject(["\ufdd0'sct_summary_text"], {"\ufdd0'sct_summary_text":"Helloz"}))
};
goog.provide("catb.views.pmt.theory");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("clojure.string");
goog.require("jayq.util");
catb.views.pmt.theory.sliteral_QMARK_ = function sliteral_QMARK_(sexp) {
  var or__3824__auto____7265 = cljs.core.symbol_QMARK_.call(null, sexp);
  if(or__3824__auto____7265) {
    return or__3824__auto____7265
  }else {
    var and__3822__auto____7266 = cljs.core.seq_QMARK_.call(null, sexp);
    if(and__3822__auto____7266) {
      var and__3822__auto____7267 = !cljs.core.empty_QMARK_.call(null, sexp);
      if(and__3822__auto____7267) {
        return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, sexp))
      }else {
        return and__3822__auto____7267
      }
    }else {
      return and__3822__auto____7266
    }
  }
};
catb.views.pmt.theory.sliteral_pos_QMARK_ = function sliteral_pos_QMARK_(literal) {
  if(cljs.core.truth_(catb.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'sliteral?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 20))))].join(""));
  }
  var or__3824__auto____7270 = !cljs.core.seq_QMARK_.call(null, literal);
  if(or__3824__auto____7270) {
    return or__3824__auto____7270
  }else {
    var and__3822__auto____7271 = !cljs.core.empty_QMARK_.call(null, literal);
    if(and__3822__auto____7271) {
      return cljs.core.not_EQ_.call(null, cljs.core.first.call(null, literal), "\ufdd1'not")
    }else {
      return and__3822__auto____7271
    }
  }
};
catb.views.pmt.theory.sliteral_atom = function sliteral_atom(literal) {
  if(cljs.core.truth_(catb.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'sliteral?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 27))))].join(""));
  }
  if(cljs.core.truth_(catb.views.pmt.theory.sliteral_pos_QMARK_.call(null, literal))) {
    return literal
  }else {
    return cljs.core.second.call(null, literal)
  }
};
catb.views.pmt.theory.statement_QMARK_ = function statement_QMARK_(x) {
  return false
};
catb.views.pmt.theory.literal_QMARK_ = function literal_QMARK_(x) {
  var or__3824__auto____7273 = catb.views.pmt.theory.statement_QMARK_.call(null, x);
  if(cljs.core.truth_(or__3824__auto____7273)) {
    return or__3824__auto____7273
  }else {
    return catb.views.pmt.theory.sliteral_QMARK_.call(null, x)
  }
};
catb.views.pmt.theory.variable_QMARK_ = function variable_QMARK_(x) {
  var and__3822__auto____7277 = cljs.core.symbol_QMARK_.call(null, x);
  if(and__3822__auto____7277) {
    var s__7278 = [cljs.core.str(x)].join("");
    var and__3822__auto____7279 = cljs.core.count.call(null, s__7278) > 0;
    if(and__3822__auto____7279) {
      return cljs.core._EQ_.call(null, s__7278[0], "?")
    }else {
      return and__3822__auto____7279
    }
  }else {
    return and__3822__auto____7277
  }
};
catb.views.pmt.theory.constant_QMARK_ = function constant_QMARK_(x) {
  var or__3824__auto____7285 = function() {
    var and__3822__auto____7284 = cljs.core.symbol_QMARK_.call(null, x);
    if(and__3822__auto____7284) {
      return cljs.core.not.call(null, catb.views.pmt.theory.variable_QMARK_.call(null, x))
    }else {
      return and__3822__auto____7284
    }
  }();
  if(cljs.core.truth_(or__3824__auto____7285)) {
    return or__3824__auto____7285
  }else {
    var or__3824__auto____7286 = cljs.core.number_QMARK_.call(null, x);
    if(or__3824__auto____7286) {
      return or__3824__auto____7286
    }else {
      var or__3824__auto____7287 = cljs.core.string_QMARK_.call(null, x);
      if(or__3824__auto____7287) {
        return or__3824__auto____7287
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }
  }
};
catb.views.pmt.theory.compound_term_QMARK_ = function compound_term_QMARK_(term) {
  var or__3824__auto____7296 = function() {
    var and__3822__auto____7293 = cljs.core.seq_QMARK_.call(null, term);
    if(and__3822__auto____7293) {
      var and__3822__auto____7294 = !cljs.core.empty_QMARK_.call(null, term);
      if(and__3822__auto____7294) {
        var and__3822__auto____7295 = cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, term));
        if(and__3822__auto____7295) {
          return cljs.core.not.call(null, catb.views.pmt.theory.variable_QMARK_.call(null, cljs.core.first.call(null, term)))
        }else {
          return and__3822__auto____7295
        }
      }else {
        return and__3822__auto____7294
      }
    }else {
      return and__3822__auto____7293
    }
  }();
  if(cljs.core.truth_(or__3824__auto____7296)) {
    return or__3824__auto____7296
  }else {
    var and__3822__auto____7297 = catb.views.pmt.theory.statement_QMARK_.call(null, term);
    if(cljs.core.truth_(and__3822__auto____7297)) {
      return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
    }else {
      return and__3822__auto____7297
    }
  }
};
catb.views.pmt.theory.termseq_QMARK_ = function termseq_QMARK_(term) {
  var or__3824__auto____7302 = cljs.core.vector_QMARK_.call(null, term);
  if(or__3824__auto____7302) {
    return or__3824__auto____7302
  }else {
    var or__3824__auto____7304 = function() {
      var and__3822__auto____7303 = cljs.core.seq_QMARK_.call(null, term);
      if(and__3822__auto____7303) {
        return cljs.core.not.call(null, catb.views.pmt.theory.compound_term_QMARK_.call(null, term))
      }else {
        return and__3822__auto____7303
      }
    }();
    if(cljs.core.truth_(or__3824__auto____7304)) {
      return or__3824__auto____7304
    }else {
      var and__3822__auto____7305 = cljs.core.map_QMARK_.call(null, term);
      if(and__3822__auto____7305) {
        return cljs.core.not.call(null, catb.views.pmt.theory.statement_QMARK_.call(null, term))
      }else {
        return and__3822__auto____7305
      }
    }
  }
};
catb.views.pmt.theory.term_QMARK_ = function term_QMARK_(x) {
  var or__3824__auto____7310 = catb.views.pmt.theory.variable_QMARK_.call(null, x);
  if(cljs.core.truth_(or__3824__auto____7310)) {
    return or__3824__auto____7310
  }else {
    var or__3824__auto____7311 = catb.views.pmt.theory.constant_QMARK_.call(null, x);
    if(cljs.core.truth_(or__3824__auto____7311)) {
      return or__3824__auto____7311
    }else {
      var or__3824__auto____7312 = catb.views.pmt.theory.statement_QMARK_.call(null, x);
      if(cljs.core.truth_(or__3824__auto____7312)) {
        return or__3824__auto____7312
      }else {
        var or__3824__auto____7313 = catb.views.pmt.theory.compound_term_QMARK_.call(null, x);
        if(cljs.core.truth_(or__3824__auto____7313)) {
          return or__3824__auto____7313
        }else {
          return catb.views.pmt.theory.termseq_QMARK_.call(null, x)
        }
      }
    }
  }
};
catb.views.pmt.theory.term_functor = function term_functor(term) {
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7320 = cljs.core.seq_QMARK_.call(null, term);
      if(and__3822__auto____7320) {
        var and__3822__auto____7321 = catb.views.pmt.theory.compound_term_QMARK_.call(null, term);
        if(cljs.core.truth_(and__3822__auto____7321)) {
          return!cljs.core.empty_QMARK_.call(null, term)
        }else {
          return and__3822__auto____7321
        }
      }else {
        return and__3822__auto____7320
      }
    }())) {
      return cljs.core.first.call(null, term)
    }else {
      if(cljs.core.truth_(function() {
        var and__3822__auto____7322 = catb.views.pmt.theory.statement_QMARK_.call(null, term);
        if(cljs.core.truth_(and__3822__auto____7322)) {
          var and__3822__auto____7323 = (new cljs.core.Keyword("\ufdd0'positive")).call(null, term);
          if(cljs.core.truth_(and__3822__auto____7323)) {
            return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
          }else {
            return and__3822__auto____7323
          }
        }else {
          return and__3822__auto____7322
        }
      }())) {
        var G__7326 = (new cljs.core.Keyword("\ufdd0'atom")).call(null, term);
        term = G__7326;
        continue
      }else {
        if(cljs.core.truth_(function() {
          var and__3822__auto____7324 = catb.views.pmt.theory.statement_QMARK_.call(null, term);
          if(cljs.core.truth_(and__3822__auto____7324)) {
            var and__3822__auto____7325 = cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'positive")).call(null, term));
            if(and__3822__auto____7325) {
              return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
            }else {
              return and__3822__auto____7325
            }
          }else {
            return and__3822__auto____7324
          }
        }())) {
          return"\ufdd1'not"
        }else {
          if("\ufdd0'else") {
            return null
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
catb.views.pmt.theory.term_args = function term_args(term) {
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7332 = cljs.core.seq_QMARK_.call(null, term);
      if(and__3822__auto____7332) {
        return catb.views.pmt.theory.compound_term_QMARK_.call(null, term)
      }else {
        return and__3822__auto____7332
      }
    }())) {
      return cljs.core.rest.call(null, term)
    }else {
      if(cljs.core.seq_QMARK_.call(null, term)) {
        return cljs.core.seq.call(null, term)
      }else {
        if(cljs.core.vector_QMARK_.call(null, term)) {
          return cljs.core.seq.call(null, term)
        }else {
          if(cljs.core.truth_(function() {
            var and__3822__auto____7333 = catb.views.pmt.theory.statement_QMARK_.call(null, term);
            if(cljs.core.truth_(and__3822__auto____7333)) {
              var and__3822__auto____7334 = (new cljs.core.Keyword("\ufdd0'positive")).call(null, term);
              if(cljs.core.truth_(and__3822__auto____7334)) {
                return cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term))
              }else {
                return and__3822__auto____7334
              }
            }else {
              return and__3822__auto____7333
            }
          }())) {
            var G__7337 = (new cljs.core.Keyword("\ufdd0'atom")).call(null, term);
            term = G__7337;
            continue
          }else {
            if(cljs.core.truth_(function() {
              var and__3822__auto____7335 = catb.views.pmt.theory.statement_QMARK_.call(null, term);
              if(cljs.core.truth_(and__3822__auto____7335)) {
                var and__3822__auto____7336 = cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'atom")).call(null, term));
                if(and__3822__auto____7336) {
                  return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'positive")).call(null, term))
                }else {
                  return and__3822__auto____7336
                }
              }else {
                return and__3822__auto____7335
              }
            }())) {
              return(new cljs.core.Keyword("\ufdd0'atom")).call(null, term)
            }else {
              if(cljs.core.map_QMARK_.call(null, term)) {
                return cljs.core.seq.call(null, term)
              }else {
                if("\ufdd0'else") {
                  return cljs.core.List.EMPTY
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
    break
  }
};
catb.views.pmt.theory.term_arity = function term_arity(term) {
  if(cljs.core.truth_(catb.views.pmt.theory.compound_term_QMARK_.call(null, term))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'compound-term?", "\ufdd1'term"), cljs.core.hash_map("\ufdd0'line", 122))))].join(""));
  }
  return cljs.core.count.call(null, term) - 1
};
catb.views.pmt.theory.atom_QMARK_ = function atom_QMARK_(sexp) {
  var or__3824__auto____7341 = cljs.core.symbol_QMARK_.call(null, sexp);
  if(or__3824__auto____7341) {
    return or__3824__auto____7341
  }else {
    var and__3822__auto____7342 = cljs.core.seq_QMARK_.call(null, sexp);
    if(and__3822__auto____7342) {
      var and__3822__auto____7343 = !cljs.core.empty_QMARK_.call(null, sexp);
      if(and__3822__auto____7343) {
        return cljs.core.symbol_QMARK_.call(null, cljs.core.first.call(null, sexp))
      }else {
        return and__3822__auto____7343
      }
    }else {
      return and__3822__auto____7342
    }
  }
};
catb.views.pmt.theory.literal_pos_QMARK_ = function literal_pos_QMARK_(literal) {
  if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 139))))].join(""));
  }
  if(cljs.core.truth_(catb.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
    var or__3824__auto____7346 = !cljs.core.seq_QMARK_.call(null, literal);
    if(or__3824__auto____7346) {
      return or__3824__auto____7346
    }else {
      var and__3822__auto____7347 = !cljs.core.empty_QMARK_.call(null, literal);
      if(and__3822__auto____7347) {
        return cljs.core.not_EQ_.call(null, cljs.core.first.call(null, literal), "\ufdd1'not")
      }else {
        return and__3822__auto____7347
      }
    }
  }else {
    if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, literal))) {
      return(new cljs.core.Keyword("\ufdd0'positive")).call(null, literal)
    }else {
      return null
    }
  }
};
catb.views.pmt.theory.literal_neg_QMARK_ = function literal_neg_QMARK_(literal) {
  if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 147))))].join(""));
  }
  return cljs.core.not.call(null, catb.views.pmt.theory.literal_pos_QMARK_.call(null, literal))
};
catb.views.pmt.theory.literal_atom = function literal_atom(literal) {
  if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 154))))].join(""));
  }
  if(cljs.core.truth_(catb.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
    if(cljs.core.truth_(catb.views.pmt.theory.literal_pos_QMARK_.call(null, literal))) {
      return literal
    }else {
      return cljs.core.second.call(null, literal)
    }
  }else {
    if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, literal))) {
      var or__3824__auto____7349 = (new cljs.core.Keyword("\ufdd0'atom")).call(null, literal);
      if(cljs.core.truth_(or__3824__auto____7349)) {
        return or__3824__auto____7349
      }else {
        return(new cljs.core.Keyword("\ufdd0'id")).call(null, literal)
      }
    }else {
      return null
    }
  }
};
catb.views.pmt.theory.propositional_QMARK_ = function propositional_QMARK_(x) {
  if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, x))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'x"), cljs.core.hash_map("\ufdd0'line", 163))))].join(""));
  }
  return cljs.core.symbol_QMARK_.call(null, catb.views.pmt.theory.literal_atom.call(null, x))
};
catb.views.pmt.theory.literal_complement = function literal_complement(literal) {
  if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, literal))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'literal"), cljs.core.hash_map("\ufdd0'line", 168))))].join(""));
  }
  if(cljs.core.truth_(catb.views.pmt.theory.sliteral_QMARK_.call(null, literal))) {
    if(cljs.core.truth_(catb.views.pmt.theory.literal_pos_QMARK_.call(null, literal))) {
      return cljs.core.list.call(null, "\ufdd1'not", literal)
    }else {
      return catb.views.pmt.theory.literal_atom.call(null, literal)
    }
  }else {
    if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, literal))) {
      return cljs.core.assoc.call(null, literal, "\ufdd0'positive", cljs.core.truth_(catb.views.pmt.theory.literal_pos_QMARK_.call(null, literal)) ? false : true)
    }else {
      return null
    }
  }
};
catb.views.pmt.theory.statement_EQ_ = function statement_EQ_(s1, s2) {
  if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, s1))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'statement?", "\ufdd1's1"), cljs.core.hash_map("\ufdd0'line", 180))))].join(""));
  }
  if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, s2))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'statement?", "\ufdd1's2"), cljs.core.hash_map("\ufdd0'line", 180))))].join(""));
  }
  var and__3822__auto____7351 = cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'positive")).call(null, s1), (new cljs.core.Keyword("\ufdd0'positive")).call(null, s2));
  if(and__3822__auto____7351) {
    return catb.views.pmt.theory.term_EQ_.call(null, catb.views.pmt.theory.literal_atom.call(null, s1), catb.views.pmt.theory.literal_atom.call(null, s2))
  }else {
    return and__3822__auto____7351
  }
};
catb.views.pmt.theory.term_EQ_ = function term_EQ_(t1, t2) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7356 = catb.views.pmt.theory.compound_term_QMARK_.call(null, t1);
    if(cljs.core.truth_(and__3822__auto____7356)) {
      return catb.views.pmt.theory.compound_term_QMARK_.call(null, t2)
    }else {
      return and__3822__auto____7356
    }
  }())) {
    var and__3822__auto____7357 = cljs.core._EQ_.call(null, catb.views.pmt.theory.term_functor.call(null, t1), catb.views.pmt.theory.term_functor.call(null, t2));
    if(and__3822__auto____7357) {
      var and__3822__auto____7358 = cljs.core._EQ_.call(null, cljs.core.count.call(null, catb.views.pmt.theory.term_args.call(null, t1)), cljs.core.count.call(null, catb.views.pmt.theory.term_args.call(null, t2)));
      if(and__3822__auto____7358) {
        return cljs.core.every_QMARK_.call(null, function(p) {
          return term_EQ_.call(null, cljs.core.first.call(null, p), cljs.core.second.call(null, p))
        }, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, catb.views.pmt.theory.term_args.call(null, t1), catb.views.pmt.theory.term_args.call(null, t2))))
      }else {
        return and__3822__auto____7358
      }
    }else {
      return and__3822__auto____7357
    }
  }else {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7359 = catb.views.pmt.theory.statement_QMARK_.call(null, t1);
      if(cljs.core.truth_(and__3822__auto____7359)) {
        return catb.views.pmt.theory.statement_QMARK_.call(null, t2)
      }else {
        return and__3822__auto____7359
      }
    }())) {
      return catb.views.pmt.theory.statement_EQ_.call(null, t1, t2)
    }else {
      if("\ufdd0'else") {
        return cljs.core._EQ_.call(null, t1, t2)
      }else {
        return null
      }
    }
  }
};
catb.views.pmt.theory.ground_QMARK_ = function ground_QMARK_(t) {
  if(t == null) {
    return true
  }else {
    if(function() {
      var and__3822__auto____7362 = cljs.core.seq_QMARK_.call(null, t);
      if(and__3822__auto____7362) {
        return cljs.core.empty_QMARK_.call(null, t)
      }else {
        return and__3822__auto____7362
      }
    }()) {
      return true
    }else {
      if(cljs.core.truth_(catb.views.pmt.theory.variable_QMARK_.call(null, t))) {
        return false
      }else {
        if(cljs.core.truth_(catb.views.pmt.theory.constant_QMARK_.call(null, t))) {
          return true
        }else {
          if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, t))) {
            return ground_QMARK_.call(null, catb.views.pmt.theory.literal_atom.call(null, t))
          }else {
            if(cljs.core.coll_QMARK_.call(null, t)) {
              var and__3822__auto____7363 = ground_QMARK_.call(null, cljs.core.first.call(null, t));
              if(cljs.core.truth_(and__3822__auto____7363)) {
                return ground_QMARK_.call(null, cljs.core.rest.call(null, t))
              }else {
                return and__3822__auto____7363
              }
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
catb.views.pmt.theory.variables = function variables(t) {
  var vars__7371 = function vars(t) {
    while(true) {
      if(cljs.core.truth_(catb.views.pmt.theory.variable_QMARK_.call(null, t))) {
        return cljs.core.list.call(null, t)
      }else {
        if(cljs.core.truth_(catb.views.pmt.theory.constant_QMARK_.call(null, t))) {
          return cljs.core.List.EMPTY
        }else {
          if(cljs.core.truth_(catb.views.pmt.theory.compound_term_QMARK_.call(null, t))) {
            var G__7378 = catb.views.pmt.theory.term_args.call(null, t);
            t = G__7378;
            continue
          }else {
            if(cljs.core.truth_(function() {
              var and__3822__auto____7377 = function() {
                var or__3824__auto____7375 = cljs.core.vector_QMARK_.call(null, t);
                if(or__3824__auto____7375) {
                  return or__3824__auto____7375
                }else {
                  var or__3824__auto____7376 = cljs.core.seq_QMARK_.call(null, t);
                  if(or__3824__auto____7376) {
                    return or__3824__auto____7376
                  }else {
                    return cljs.core.map_QMARK_.call(null, t)
                  }
                }
              }();
              if(cljs.core.truth_(and__3822__auto____7377)) {
                return!cljs.core.empty_QMARK_.call(null, t)
              }else {
                return and__3822__auto____7377
              }
            }())) {
              return cljs.core.concat.call(null, vars.call(null, cljs.core.first.call(null, t)), vars.call(null, cljs.core.rest.call(null, t)))
            }else {
              if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, t))) {
                return vars.call(null, catb.views.pmt.theory.literal_atom.call(null, t))
              }else {
                if("\ufdd0'else") {
                  return cljs.core.List.EMPTY
                }else {
                  return null
                }
              }
            }
          }
        }
      }
      break
    }
  };
  return cljs.core.distinct.call(null, vars__7371.call(null, t))
};
catb.views.pmt.theory.neg = function neg(literal) {
  return catb.views.pmt.theory.literal_complement.call(null, literal)
};
catb.views.pmt.theory.literal_predicate = function literal_predicate(s) {
  return catb.views.pmt.theory.term_functor.call(null, catb.views.pmt.theory.literal_atom.call(null, s))
};
catb.views.pmt.theory.atom_predicate = function atom_predicate(atom) {
  if(cljs.core.truth_(catb.views.pmt.theory.atom_QMARK_.call(null, atom))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'atom?", "\ufdd1'atom"), cljs.core.hash_map("\ufdd0'line", 241))))].join(""));
  }
  return catb.views.pmt.theory.term_functor.call(null, atom)
};
catb.views.pmt.theory.literal__GT_sliteral = function literal__GT_sliteral(x) {
  if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, x))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'x"), cljs.core.hash_map("\ufdd0'line", 248))))].join(""));
  }
  if(cljs.core.truth_(catb.views.pmt.theory.sliteral_QMARK_.call(null, x))) {
    return x
  }else {
    if(cljs.core.truth_(catb.views.pmt.theory.literal_pos_QMARK_.call(null, x))) {
      return catb.views.pmt.theory.literal_atom.call(null, x)
    }else {
      return cljs.core.list.call(null, "\ufdd1'not", catb.views.pmt.theory.literal_atom.call(null, x))
    }
  }
};
catb.views.pmt.theory.sliteral__GT_str = function sliteral__GT_str(s) {
  return[cljs.core.str(s)].join("")
};
catb.views.pmt.theory.statement__GT_str = function statement__GT_str(s, lang) {
  var temp__3971__auto____7381 = cljs.core.get_in.call(null, s, cljs.core.PersistentVector.fromArray(["\ufdd0'text", lang], true));
  if(cljs.core.truth_(temp__3971__auto____7381)) {
    var translated__7382 = temp__3971__auto____7381;
    return translated__7382
  }else {
    return catb.views.pmt.theory.sliteral__GT_str.call(null, catb.views.pmt.theory.literal_atom.call(null, s))
  }
};
catb.views.pmt.theory.literal__GT_str = function() {
  var literal__GT_str = null;
  var literal__GT_str__1 = function(l) {
    if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, l))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'l"), cljs.core.hash_map("\ufdd0'line", 267))))].join(""));
    }
    return literal__GT_str.call(null, l, "\ufdd0'en")
  };
  var literal__GT_str__2 = function(l, lang) {
    if(cljs.core.truth_(catb.views.pmt.theory.literal_QMARK_.call(null, l))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'literal?", "\ufdd1'l"), cljs.core.hash_map("\ufdd0'line", 270))))].join(""));
    }
    if(cljs.core.truth_(catb.views.pmt.theory.sliteral_QMARK_.call(null, l))) {
      return catb.views.pmt.theory.sliteral__GT_str.call(null, l)
    }else {
      if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, l))) {
        return catb.views.pmt.theory.statement__GT_str.call(null, l, lang)
      }else {
        return null
      }
    }
  };
  literal__GT_str = function(l, lang) {
    switch(arguments.length) {
      case 1:
        return literal__GT_str__1.call(this, l);
      case 2:
        return literal__GT_str__2.call(this, l, lang)
    }
    throw"Invalid arity: " + arguments.length;
  };
  literal__GT_str.cljs$lang$arity$1 = literal__GT_str__1;
  literal__GT_str.cljs$lang$arity$2 = literal__GT_str__2;
  return literal__GT_str
}();
catb.views.pmt.theory.replace_var = function replace_var(from, to, stmt) {
  if(cljs.core.seq_QMARK_.call(null, stmt)) {
    return cljs.core.map.call(null, function(t) {
      return replace_var.call(null, from, to, t)
    }, stmt)
  }else {
    if(cljs.core.truth_(catb.views.pmt.theory.statement_QMARK_.call(null, stmt))) {
      return cljs.core.assoc.call(null, stmt, "\ufdd0'atom", replace_var.call(null, from, to, (new cljs.core.Keyword("\ufdd0'atom")).call(null, stmt)))
    }else {
      if("\ufdd0'else") {
        if(cljs.core._EQ_.call(null, stmt, from)) {
          return to
        }else {
          return stmt
        }
      }else {
        return null
      }
    }
  }
};
catb.views.pmt.theory.sentence_QMARK_ = function sentence_QMARK_(s) {
  var s__7386 = str.trim.call(null, s);
  var and__3822__auto____7387 = cljs.core.not_EQ_.call(null, cljs.core.first.call(null, s__7386), "(");
  if(and__3822__auto____7387) {
    var and__3822__auto____7388 = cljs.core.not_EQ_.call(null, cljs.core.first.call(null, s__7386), '"');
    if(and__3822__auto____7388) {
      return cljs.core.count.call(null, str.split.call(null, s__7386, /\s+/)) > 1
    }else {
      return and__3822__auto____7388
    }
  }else {
    return and__3822__auto____7387
  }
};
catb.views.pmt.theory.stmt_str = function stmt_str(stmt) {
  return cljs.core.pr_str.call(null, stmt)
};
catb.views.pmt.theory.term_str = function term_str(term) {
  return cljs.core.pr_str.call(null, term)
};
catb.views.pmt.theory.format_literal_arg = function format_literal_arg(arg, language, lang) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7396 = cljs.core.symbol_QMARK_.call(null, arg);
    if(and__3822__auto____7396) {
      return language.call(null, cljs.core.keyword.call(null, arg))
    }else {
      return and__3822__auto____7396
    }
  }())) {
    var or__3824__auto____7397 = cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, arg), "\ufdd0'text", lang], true));
    if(cljs.core.truth_(or__3824__auto____7397)) {
      return or__3824__auto____7397
    }else {
      return cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, arg), "\ufdd0'text", "\ufdd0'en"], true))
    }
  }else {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7398 = catb.views.pmt.theory.literal_QMARK_.call(null, arg);
      if(cljs.core.truth_(and__3822__auto____7398)) {
        return language.call(null, cljs.core.keyword.call(null, catb.views.pmt.theory.literal_predicate.call(null, catb.views.pmt.theory.literal_atom.call(null, arg))))
      }else {
        return and__3822__auto____7398
      }
    }())) {
      var pred__7399 = cljs.core.keyword.call(null, catb.views.pmt.theory.literal_atom.call(null, catb.views.pmt.theory.literal_predicate.call(null, arg)));
      var fstring__7401 = function() {
        var or__3824__auto____7400 = cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7399, "\ufdd0'text", lang], true));
        if(cljs.core.truth_(or__3824__auto____7400)) {
          return or__3824__auto____7400
        }else {
          return cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7399, "\ufdd0'text", "\ufdd0'en"], true))
        }
      }();
      return cljs.core.apply.call(null, cljs.core.format, fstring__7401, catb.views.pmt.theory.format_literal_args.call(null, arg, language, lang))
    }else {
      if("\ufdd0'else") {
        return[cljs.core.str(arg)].join("")
      }else {
        return null
      }
    }
  }
};
catb.views.pmt.theory.format_literal_args = function format_literal_args(literal, language, lang) {
  return cljs.core.map.call(null, function(p1__7389_SHARP_) {
    return catb.views.pmt.theory.format_literal_arg.call(null, p1__7389_SHARP_, language, lang)
  }, cljs.core.rest.call(null, catb.views.pmt.theory.literal_atom.call(null, literal)))
};
catb.views.pmt.theory.array__GT_literal = function array__GT_literal(x) {
  var c__7403 = cljs.core.js__GT_clj.call(null, x);
  if(cljs.core.vector_QMARK_.call(null, c__7403)) {
    return cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, array__GT_literal, c__7403))
  }else {
    if(cljs.core.string_QMARK_.call(null, c__7403)) {
      return cljs.core.symbol.call(null, c__7403)
    }else {
      if("\ufdd0'else") {
        return c__7403
      }else {
        return null
      }
    }
  }
};
catb.views.pmt.theory.format_statement = function format_statement(literal, language, lang, selector) {
  var literal__7409 = catb.views.pmt.theory.array__GT_literal.call(null, literal);
  var pred__7410 = cljs.core.keyword.call(null, catb.views.pmt.theory.literal_predicate.call(null, literal__7409));
  var lang__7411 = cljs.core.keyword.call(null, lang);
  var selector__7412 = cljs.core.keyword.call(null, selector);
  if(cljs.core.string_QMARK_.call(null, literal__7409)) {
    return literal__7409
  }else {
    if(cljs.core.truth_(cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7410], true)))) {
      var fstring__7413 = cljs.core.get_in.call(null, language, cljs.core.PersistentVector.fromArray([pred__7410, "\ufdd0'forms", lang__7411, selector__7412], true));
      return cljs.core.apply.call(null, cljs.core.format, fstring__7413, catb.views.pmt.theory.format_literal_args.call(null, literal__7409, language, lang__7411))
    }else {
      if("\ufdd0'else") {
        return[cljs.core.str(literal__7409)].join("")
      }else {
        return null
      }
    }
  }
};
goog.exportSymbol("catb.views.pmt.theory.format_statement", catb.views.pmt.theory.format_statement);
catb.views.pmt.theory.convert_language = function convert_language(language) {
  return cljs.core.js__GT_clj.call(null, language, "\ufdd0'keywordize-keys", true)
};
goog.exportSymbol("catb.views.pmt.theory.convert_language", catb.views.pmt.theory.convert_language);
